<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gst" version="0.10"/>
  <include name="libxml2" version="2.0"/>
  <package name="gstreamer-0.10"/>
  <c:include name="gst/check/gstbufferstraw.h"/>
  <c:include name="gst/check/gstcheck.h"/>
  <c:include name="gst/check/gstconsistencychecker.h"/>
  <c:include name="gst/check/internal-check.h"/>
  <namespace name="GstCheck"
             version="0.10"
             shared-library="libgstcheck-0.10.so.0"
             c:prefix="Gst">
    <constant name="CHECK_MAJOR_VERSION" value="0">
      <type name="int"/>
    </constant>
    <constant name="CHECK_MICRO_VERSION" value="8">
      <type name="int"/>
    </constant>
    <constant name="CHECK_MINOR_VERSION" value="9">
      <type name="int"/>
    </constant>
    <record name="CheckABIStruct" c:type="GstCheckABIStruct">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="size" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <field name="abi_size" writable="1">
        <type name="int" c:type="int"/>
      </field>
    </record>
    <callback name="SFun" c:type="SFun">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <record name="SRunner" c:type="SRunner">
    </record>
    <record name="StreamConsistency"
            c:type="GstStreamConsistency"
            doc="Opaque consistency checker handle."
            version="0.10.24">
    </record>
    <record name="Suite" c:type="Suite">
      <method name="add_tcase" c:identifier="suite_add_tcase">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tc" transfer-ownership="none">
            <type name="TCase" c:type="TCase*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="TCase" c:type="TCase">
    </record>
    <callback name="TFun" c:type="TFun">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </callback>
    <record name="TestResult" c:type="TestResult">
    </record>
    <function name="abi_list" c:identifier="gst_check_abi_list">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <type name="CheckABIStruct" c:type="GstCheckABIStruct"/>
        </parameter>
        <parameter name="have_abi_sizes" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_straw_get_buffer"
              c:identifier="gst_buffer_straw_get_buffer"
              doc="Get one buffer from @pad. Implemented via buffer probes. This function will
block until the pipeline passes a buffer over @pad, so for robust behavior
in unit tests, you need to use check&apos;s timeout to fail out in the case that a
buffer never arrives.
You must have previously called gst_buffer_straw_start_pipeline() on">
      <return-value transfer-ownership="full">
        <type name="Gst.Buffer" c:type="GstBuffer*"/>
      </return-value>
      <parameters>
        <parameter name="bin" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="pad" transfer-ownership="none">
          <type name="Gst.Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_straw_start_pipeline"
              c:identifier="gst_buffer_straw_start_pipeline"
              doc="Sets up a pipeline for buffer sucking. This will allow you to call
gst_buffer_straw_get_buffer() to access buffers as they pass over @pad.
This function is normally used in unit tests that want to verify that a
particular element is outputting correct buffers. For example, you would make
a pipeline via gst_parse_launch(), pull out the pad you want to monitor, then
call gst_buffer_straw_get_buffer() to get the buffers that pass through @pad.
The pipeline will block until you have sucked off the buffers.
This function will set the state of @bin to PLAYING; to clean up, be sure to
call gst_buffer_straw_stop_pipeline().
Note that you may not start two buffer straws at the same time. This function
is intended for unit tests, not general API use. In fact it calls fail_if
from libcheck, so you cannot use it outside unit tests.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="bin" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="pad" transfer-ownership="none">
          <type name="Gst.Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_straw_stop_pipeline"
              c:identifier="gst_buffer_straw_stop_pipeline"
              doc="Set @bin to #GST_STATE_NULL and release resource allocated in
gst_buffer_straw_start_pipeline().
You must have previously called gst_buffer_straw_start_pipeline() on">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="bin" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="pad" transfer-ownership="none">
          <type name="Gst.Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </function>
    <function name="caps_equal"
              c:identifier="gst_check_caps_equal"
              doc="Compare two caps with gst_caps_is_equal and fail unless they are
equal."
              version="0.10.18">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="caps1" transfer-ownership="none">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </parameter>
        <parameter name="caps2" transfer-ownership="none">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </function>
    <function name="chain_func" c:identifier="gst_check_chain_func">
      <return-value transfer-ownership="full">
        <type name="Gst.FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <type name="Gst.Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="check_fork" c:identifier="check_fork">
      <return-value transfer-ownership="none">
        <type name="int" c:type="pid_t"/>
      </return-value>
    </function>
    <function name="check_waitpid_and_exit"
              c:identifier="check_waitpid_and_exit">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pid" transfer-ownership="none">
          <type name="int" c:type="pid_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="consistency_checker_free"
              c:identifier="gst_consistency_checker_free"
              doc="Frees the allocated data and probe associated with @consist."
              version="0.10.24">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="consist" transfer-ownership="none">
          <type name="StreamConsistency" c:type="GstStreamConsistency*"/>
        </parameter>
      </parameters>
    </function>
    <function name="consistency_checker_new"
              c:identifier="gst_consistency_checker_new"
              doc="Sets up a data probe on the given pad which will raise assertions if the
data flow is inconsistent.
Currently only works for source pads."
              version="0.10.24">
      <return-value transfer-ownership="full">
        <type name="StreamConsistency" c:type="GstStreamConsistency*"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <type name="Gst.Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </function>
    <function name="consistency_checker_reset"
              c:identifier="gst_consistency_checker_reset"
              doc="Reset the stream checker&apos;s internal variables."
              version="0.10.24">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="consist" transfer-ownership="none">
          <type name="StreamConsistency" c:type="GstStreamConsistency*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drop_buffers"
              c:identifier="gst_check_drop_buffers"
              doc="Unref and remove all buffers that are in the global @buffers GList,
emptying the list."
              version="0.10.18">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="element_push_buffer"
              c:identifier="gst_check_element_push_buffer"
              doc="Create an @element with the factory with the name and push the
and this will be compared with @buffer_out. We only check the caps
and the data of the buffers. This function unrefs the buffers."
              version="0.10.18">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="buffer_in" transfer-ownership="none">
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="buffer_out" transfer-ownership="none">
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="element_push_buffer_list"
              c:identifier="gst_check_element_push_buffer_list"
              doc="Create an @element with the factory with the name and push the buffers in
the buffers in @buffer_out. We only check the caps, size and the data of the
buffers. This function unrefs the buffers in the two lists.
The last_flow_return parameter indicates the expected flow return value from
pushing the final buffer in the list.
This can be used to set up a test which pushes some buffers and then an
invalid buffer, when the final buffer is expected to fail, for example."
              version="0.10.18">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="buffer_in" transfer-ownership="none">
          <type name="GLib.List" c:type="GList*"/>
        </parameter>
        <parameter name="buffer_out" transfer-ownership="none">
          <type name="GLib.List" c:type="GList*"/>
        </parameter>
        <parameter name="last_flow_return" transfer-ownership="none">
          <type name="Gst.FlowReturn" c:type="GstFlowReturn"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="gst_check_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="message_error" c:identifier="gst_check_message_error">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="Gst.Message" c:type="GstMessage*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="Gst.MessageType" c:type="GstMessageType"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="run_suite" c:identifier="gst_check_run_suite">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="suite" transfer-ownership="none">
          <type name="Suite" c:type="Suite*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="fname" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_element" c:identifier="gst_check_setup_element">
      <return-value transfer-ownership="full">
        <type name="Gst.Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="factory" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_sink_pad" c:identifier="gst_check_setup_sink_pad">
      <return-value transfer-ownership="full">
        <type name="Gst.Pad" c:type="GstPad*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="template" transfer-ownership="none">
          <type name="Gst.StaticPadTemplate" c:type="GstStaticPadTemplate*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_sink_pad_by_name"
              c:identifier="gst_check_setup_sink_pad_by_name">
      <return-value transfer-ownership="full">
        <type name="Gst.Pad" c:type="GstPad*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="template" transfer-ownership="none">
          <type name="Gst.StaticPadTemplate" c:type="GstStaticPadTemplate*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_src_pad" c:identifier="gst_check_setup_src_pad">
      <return-value transfer-ownership="full">
        <type name="Gst.Pad" c:type="GstPad*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="template" transfer-ownership="none">
          <type name="Gst.StaticPadTemplate" c:type="GstStaticPadTemplate*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_src_pad_by_name"
              c:identifier="gst_check_setup_src_pad_by_name">
      <return-value transfer-ownership="full">
        <type name="Gst.Pad" c:type="GstPad*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="template" transfer-ownership="none">
          <type name="Gst.StaticPadTemplate" c:type="GstStaticPadTemplate*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_add_suite" c:identifier="srunner_add_suite">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="s" transfer-ownership="none">
          <type name="Suite" c:type="Suite*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_create" c:identifier="srunner_create">
      <return-value transfer-ownership="full">
        <type name="SRunner" c:type="SRunner*"/>
      </return-value>
      <parameters>
        <parameter name="s" transfer-ownership="none">
          <type name="Suite" c:type="Suite*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_failures" c:identifier="srunner_failures">
      <return-value transfer-ownership="full">
        <type name="TestResult" c:type="TestResult**"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_fork_status" c:identifier="srunner_fork_status">
      <return-value transfer-ownership="none">
        <type name="any" c:type="any"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_free" c:identifier="srunner_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_has_log" c:identifier="srunner_has_log">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_has_xml" c:identifier="srunner_has_xml">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_log_fname" c:identifier="srunner_log_fname">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_ntests_failed"
              c:identifier="srunner_ntests_failed">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_ntests_run" c:identifier="srunner_ntests_run">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_print" c:identifier="srunner_print">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="print_mode" transfer-ownership="none">
          <type name="any" c:type="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_results" c:identifier="srunner_results">
      <return-value transfer-ownership="full">
        <type name="TestResult" c:type="TestResult**"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_run_all" c:identifier="srunner_run_all">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="print_mode" transfer-ownership="none">
          <type name="any" c:type="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_set_fork_status"
              c:identifier="srunner_set_fork_status">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="fstat" transfer-ownership="none">
          <type name="any" c:type="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_set_log" c:identifier="srunner_set_log">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="fname" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_set_xml" c:identifier="srunner_set_xml">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
        <parameter name="fname" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srunner_xml_fname" c:identifier="srunner_xml_fname">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="sr" transfer-ownership="none">
          <type name="SRunner" c:type="SRunner*"/>
        </parameter>
      </parameters>
    </function>
    <function name="suite_create" c:identifier="suite_create">
      <return-value transfer-ownership="full">
        <type name="Suite" c:type="Suite*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tcase_add_checked_fixture"
              c:identifier="tcase_add_checked_fixture">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tc" transfer-ownership="none">
          <type name="TCase" c:type="TCase*"/>
        </parameter>
        <parameter name="setup" transfer-ownership="none" scope="call">
          <type name="SFun" c:type="SFun"/>
        </parameter>
        <parameter name="teardown" transfer-ownership="none" scope="call">
          <type name="SFun" c:type="SFun"/>
        </parameter>
      </parameters>
    </function>
    <function name="tcase_add_unchecked_fixture"
              c:identifier="tcase_add_unchecked_fixture">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tc" transfer-ownership="none">
          <type name="TCase" c:type="TCase*"/>
        </parameter>
        <parameter name="setup" transfer-ownership="none" scope="call">
          <type name="SFun" c:type="SFun"/>
        </parameter>
        <parameter name="teardown" transfer-ownership="none" scope="call">
          <type name="SFun" c:type="SFun"/>
        </parameter>
      </parameters>
    </function>
    <function name="tcase_create" c:identifier="tcase_create">
      <return-value transfer-ownership="full">
        <type name="TCase" c:type="TCase*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tcase_fn_start" c:identifier="tcase_fn_start">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="fname" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="tcase_set_timeout" c:identifier="tcase_set_timeout">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tc" transfer-ownership="none">
          <type name="TCase" c:type="TCase*"/>
        </parameter>
        <parameter name="timeout" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="teardown_element"
              c:identifier="gst_check_teardown_element">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="teardown_pad_by_name"
              c:identifier="gst_check_teardown_pad_by_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="teardown_sink_pad"
              c:identifier="gst_check_teardown_sink_pad">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="teardown_src_pad"
              c:identifier="gst_check_teardown_src_pad">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_ctx" c:identifier="tr_ctx">
      <return-value transfer-ownership="none">
        <type name="any" c:type="any"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_lfile" c:identifier="tr_lfile">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_lno" c:identifier="tr_lno">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_msg" c:identifier="tr_msg">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_rtype" c:identifier="tr_rtype">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tr_tcname" c:identifier="tr_tcname">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="tr" transfer-ownership="none">
          <type name="TestResult" c:type="TestResult*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
