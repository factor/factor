name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install clang 18
      run: |
        sudo apt-get update
        sudo apt-get install -y wget software-properties-common gnupg lsb-release
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 18
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
        sudo update-alternatives --set clang /usr/bin/clang-18
        sudo update-alternatives --set clang++ /usr/bin/clang++-18
        clang --version
    - name: bootstrap
      run: ./build.sh net-bootstrap
    - name: load-all
      run: './factor -e="USING: compiler.errors memory namespaces parser.notes syntax vocabs.hierarchy ; parser-quiet? off auto-use? off load-all save compiler-errors get assoc-empty? 0 1 ? exit"'
    - name: test
      run: './factor -run=tools.test resource:core'
    - name: help-lint
      run: './factor -run=help.lint resource:core resource:basis resource:extra'

  build-macos:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: build
      run: arch -x86_64 ./build.sh net-bootstrap
    - name: load-all
      run: './factor -e="USING: compiler.errors memory namespaces parser.notes syntax vocabs.hierarchy ; parser-quiet? off auto-use? off load-all save compiler-errors get assoc-empty? 0 1 ? exit"'
    - name: test
      run: './factor -run=tools.test resource:core'
    - name: help-lint
      run: './factor -run=help.lint resource:core resource:basis resource:extra'

  build-windows:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: build
      shell: cmd
      run: build.cmd compile
    - name: build-report
      run: 'Foreach ($f in Get-ChildItem  *.exe,*.com,*.dll) { "{0} {1}" -f (Split-Path -Path $f -Leaf),$f.Length }'
    - name: bootstrap
      run: |
           .\build.cmd update-boot-image
           .\build.cmd bootstrap
    - name: load-all
      shell: cmd
      run: 'factor -e="USING: compiler.errors memory namespaces parser.notes syntax vocabs.hierarchy ; parser-quiet? off auto-use? off load-all save compiler-errors get assoc-empty? 0 1 ? exit"'
    - name: test
      shell: cmd
      run: 'factor -run=tools.test resource:core'
    - name: help-lint
      shell: cmd
      run: 'factor -run=help.lint resource:core resource:basis resource:extra'
