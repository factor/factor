<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gst" version="0.10"/>
  <include name="GstSdp" version="0.10"/>
  <include name="libxml2" version="2.0"/>
  <package name="gstreamer-0.10"/>
  <package name="gstreamer-sdp-0.10"/>
  <c:include name="gst/audio/gstrtsp-enumtypes.h"/>
  <c:include name="gst/audio/gstrtspbase64.h"/>
  <c:include name="gst/audio/gstrtspconnection.h"/>
  <c:include name="gst/audio/gstrtspdefs.h"/>
  <c:include name="gst/audio/gstrtspextension.h"/>
  <c:include name="gst/audio/gstrtspmessage.h"/>
  <c:include name="gst/audio/gstrtsprange.h"/>
  <c:include name="gst/audio/gstrtsptransport.h"/>
  <c:include name="gst/audio/gstrtspurl.h"/>
  <namespace name="GstRtsp"
             version="0.10"
             shared-library="libgstrtsp-0.10.so.0"
             c:prefix="Gst">
    <constant name="DEFAULT_PORT" value="554">
      <type name="int"/>
    </constant>
    <enumeration name="RTSPAuthMethod"
                 doc="Authentication methods, ordered by strength"
                 glib:type-name="GstRTSPAuthMethod"
                 glib:get-type="gst_rtsp_auth_method_get_type"
                 c:type="GstRTSPAuthMethod">
      <member name="none"
              value="0"
              c:identifier="GST_RTSP_AUTH_NONE"
              glib:nick="none"/>
      <member name="basic"
              value="1"
              c:identifier="GST_RTSP_AUTH_BASIC"
              glib:nick="basic"/>
      <member name="digest"
              value="2"
              c:identifier="GST_RTSP_AUTH_DIGEST"
              glib:nick="digest"/>
    </enumeration>
    <record name="RTSPConnection"
            c:type="GstRTSPConnection"
            doc="Opaque RTSP connection object.">
      <method name="connect"
              c:identifier="gst_rtsp_connection_connect"
              doc="Attempt to connect to the url of @conn made with
gst_rtsp_connection_create(). If @timeout is #NULL this function can block
forever. If @timeout contains a valid timeout, this function will return
#GST_RTSP_ETIMEOUT after the timeout expired.
This function can be cancelled with gst_rtsp_connection_flush().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close"
              c:identifier="gst_rtsp_connection_close"
              doc="Close the connected @conn. After this call, the connection is in the same
state as when it was first created.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="free"
              c:identifier="gst_rtsp_connection_free"
              doc="Close and free @conn.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="read"
              c:identifier="gst_rtsp_connection_read"
              doc="Attempt to read @size bytes into @data from the connected @conn, blocking up to
the specified @timeout. @timeout can be #NULL, in which case this function
might block forever.
This function can be cancelled with gst_rtsp_connection_flush().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write"
              c:identifier="gst_rtsp_connection_write"
              doc="Attempt to write @size bytes of @data to the connected @conn, blocking up to
the specified @timeout. @timeout can be #NULL, in which case this function
might block forever.
This function can be cancelled with gst_rtsp_connection_flush().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send"
              c:identifier="gst_rtsp_connection_send"
              doc="Attempt to send @message to the connected @conn, blocking up to
the specified @timeout. @timeout can be #NULL, in which case this function
might block forever.
This function can be cancelled with gst_rtsp_connection_flush().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive"
              c:identifier="gst_rtsp_connection_receive"
              doc="Attempt to read into @message from the connected @conn, blocking up to
the specified @timeout. @timeout can be #NULL, in which case this function
might block forever.
This function can be cancelled with gst_rtsp_connection_flush().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll"
              c:identifier="gst_rtsp_connection_poll"
              doc="Wait up to the specified @timeout for the connection to become available for
at least one of the operations specified in @events. When the function returns
with #GST_RTSP_OK, @revents will contain a bitmask of available operations on
This function can be cancelled with gst_rtsp_connection_flush()."
              version="0.10.15">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="events" transfer-ownership="none">
            <type name="RTSPEvent" c:type="GstRTSPEvent"/>
          </parameter>
          <parameter name="revents" transfer-ownership="none">
            <type name="RTSPEvent" c:type="GstRTSPEvent*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_timeout"
              c:identifier="gst_rtsp_connection_next_timeout"
              doc="Calculate the next timeout for @conn, storing the result in @timeout.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_timeout"
              c:identifier="gst_rtsp_connection_reset_timeout"
              doc="Reset the timeout of @conn.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="flush"
              c:identifier="gst_rtsp_connection_flush"
              doc="Start or stop the flushing action on @conn. When flushing, all current
and future actions on @conn will return #GST_RTSP_EINTR until the connection
is set to non-flushing mode again.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="flush" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_proxy"
              c:identifier="gst_rtsp_connection_set_proxy"
              doc="Set the proxy host and port."
              version="0.10.23">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="host" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auth"
              c:identifier="gst_rtsp_connection_set_auth"
              doc="Configure @conn for authentication mode @method with @user and @pass as the
user and password respectively.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="RTSPAuthMethod" c:type="GstRTSPAuthMethod"/>
          </parameter>
          <parameter name="user" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="pass" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auth_param"
              c:identifier="gst_rtsp_connection_set_auth_param"
              doc="Setup @conn with authentication directives. This is not necesary for
methods #GST_RTSP_AUTH_NONE and #GST_RTSP_AUTH_BASIC. For
#GST_RTSP_AUTH_DIGEST, directives should be taken from the digest challenge
in the WWW-Authenticate response header and can include realm, domain,
nonce, opaque, stale, algorithm, qop as per RFC2617."
              version="0.10.20">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="param" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_auth_params"
              c:identifier="gst_rtsp_connection_clear_auth_params"
              doc="Clear the list of authentication directives stored in @conn."
              version="0.10.20">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_qos_dscp"
              c:identifier="gst_rtsp_connection_set_qos_dscp"
              doc="Configure @conn to use the specified DSCP value."
              version="0.10.20">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="qos_dscp" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="gst_rtsp_connection_get_url"
              doc="Retrieve the URL of the other end of @conn.
connection is freed."
              version="0.10.23">
        <return-value transfer-ownership="full">
          <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
        </return-value>
      </method>
      <method name="get_ip"
              c:identifier="gst_rtsp_connection_get_ip"
              doc="Retrieve the IP address of the other end of @conn.
connection is closed."
              version="0.10.20">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_ip"
              c:identifier="gst_rtsp_connection_set_ip"
              doc="Set the IP address of the server."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ip" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_readfd"
              c:identifier="gst_rtsp_connection_get_readfd"
              doc="Get the file descriptor for reading.
descriptor remains valid until the connection is closed."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_writefd"
              c:identifier="gst_rtsp_connection_get_writefd"
              doc="Get the file descriptor for writing.
descriptor remains valid until the connection is closed."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_http_mode"
              c:identifier="gst_rtsp_connection_set_http_mode"
              doc="By setting the HTTP mode to %TRUE the message parsing will support HTTP
messages in addition to the RTSP messages. It will also disable the
automatic handling of setting up an HTTP tunnel."
              version="0.10.25">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tunneled"
              c:identifier="gst_rtsp_connection_set_tunneled"
              doc="Set the HTTP tunneling state of the connection. This must be configured before
the @conn is connected."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tunneled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_tunneled"
              c:identifier="gst_rtsp_connection_is_tunneled"
              doc="Get the tunneling state of the connection."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_tunnelid"
              c:identifier="gst_rtsp_connection_get_tunnelid"
              doc="Get the tunnel session id the connection."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="do_tunnel"
              c:identifier="gst_rtsp_connection_do_tunnel"
              doc="If @conn received the first tunnel connection and @conn2 received
the second tunnel connection, link the two connections together so that
After this call, @conn2 cannot be used anymore and must be freed with
gst_rtsp_connection_free().
If @conn2 is %NULL then only the base64 decoding context will be setup for"
              version="0.10.23">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="conn2" transfer-ownership="none">
            <type name="RTSPConnection" c:type="GstRTSPConnection*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="RTSPEvent"
              doc="The possible events for the connection."
              glib:type-name="GstRTSPEvent"
              glib:get-type="gst_rtsp_event_get_type"
              c:type="GstRTSPEvent">
      <member name="read"
              value="1"
              c:identifier="GST_RTSP_EV_READ"
              glib:nick="read"/>
      <member name="write"
              value="2"
              c:identifier="GST_RTSP_EV_WRITE"
              glib:nick="write"/>
    </bitfield>
    <interface name="RTSPExtension"
               c:type="GstRTSPExtension"
               glib:type-name="GstRTSPExtension"
               glib:get-type="gst_rtsp_extension_get_type"
               glib:type-struct="RTSPExtensionInterface">
      <virtual-method name="detect_server" invoker="detect_server">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="resp" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="before_send" invoker="before_send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="after_send" invoker="after_send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="resp" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_sdp" invoker="parse_sdp">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="sdp" transfer-ownership="none">
            <type name="GstSdp.SDPMessage" c:type="GstSDPMessage*"/>
          </parameter>
          <parameter name="s" transfer-ownership="none">
            <type name="Gst.Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="setup_media" invoker="setup_media">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="media" transfer-ownership="none">
            <type name="GstSdp.SDPMedia" c:type="GstSDPMedia*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="configure_stream" invoker="configure_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_transports" invoker="get_transports">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="protocols" transfer-ownership="none">
            <type name="RTSPLowerTrans" c:type="GstRTSPLowerTrans"/>
          </parameter>
          <parameter name="transport" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stream_select" invoker="stream_select">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="receive_request" invoker="receive_request">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="detect_server"
              c:identifier="gst_rtsp_extension_detect_server">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="resp" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="before_send" c:identifier="gst_rtsp_extension_before_send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="after_send" c:identifier="gst_rtsp_extension_after_send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="resp" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_sdp" c:identifier="gst_rtsp_extension_parse_sdp">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="sdp" transfer-ownership="none">
            <type name="GstSdp.SDPMessage" c:type="GstSDPMessage*"/>
          </parameter>
          <parameter name="s" transfer-ownership="none">
            <type name="Gst.Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="setup_media" c:identifier="gst_rtsp_extension_setup_media">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="media" transfer-ownership="none">
            <type name="GstSdp.SDPMedia" c:type="GstSDPMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="configure_stream"
              c:identifier="gst_rtsp_extension_configure_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transports"
              c:identifier="gst_rtsp_extension_get_transports">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="protocols" transfer-ownership="none">
            <type name="RTSPLowerTrans" c:type="GstRTSPLowerTrans"/>
          </parameter>
          <parameter name="transport" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="stream_select"
              c:identifier="gst_rtsp_extension_stream_select">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_request"
              c:identifier="gst_rtsp_extension_receive_request">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="gst_rtsp_extension_send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="req" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="resp" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="send">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="RTSPExtensionInterface"
            c:type="GstRTSPExtensionInterface"
            glib:is-gtype-struct-for="RTSPExtension">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="detect_server">
        <callback name="detect_server" c:type="detect_server">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="resp" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="before_send">
        <callback name="before_send" c:type="before_send">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="req" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="after_send">
        <callback name="after_send" c:type="after_send">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="req" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
            <parameter name="resp" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_sdp">
        <callback name="parse_sdp" c:type="parse_sdp">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="sdp" transfer-ownership="none">
              <type name="GstSdp.SDPMessage" c:type="GstSDPMessage*"/>
            </parameter>
            <parameter name="s" transfer-ownership="none">
              <type name="Gst.Structure" c:type="GstStructure*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="setup_media">
        <callback name="setup_media" c:type="setup_media">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="media" transfer-ownership="none">
              <type name="GstSdp.SDPMedia" c:type="GstSDPMedia*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="configure_stream">
        <callback name="configure_stream" c:type="configure_stream">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_transports">
        <callback name="get_transports" c:type="get_transports">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="protocols" transfer-ownership="none">
              <type name="RTSPLowerTrans" c:type="GstRTSPLowerTrans"/>
            </parameter>
            <parameter name="transport" transfer-ownership="none">
              <array c:type="gchar**">
                <type name="utf8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stream_select">
        <callback name="stream_select" c:type="stream_select">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send">
        <callback name="send" c:type="send">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="req" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
            <parameter name="resp" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="receive_request">
        <callback name="receive_request" c:type="receive_request">
          <return-value transfer-ownership="full">
            <type name="RTSPResult" c:type="GstRTSPResult"/>
          </return-value>
          <parameters>
            <parameter name="ext" transfer-ownership="none">
              <type name="RTSPExtension" c:type="GstRTSPExtension*"/>
            </parameter>
            <parameter name="req" transfer-ownership="none">
              <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="RTSPFamily"
                 doc="The possible network families."
                 glib:type-name="GstRTSPFamily"
                 glib:get-type="gst_rtsp_family_get_type"
                 c:type="GstRTSPFamily">
      <member name="none"
              value="0"
              c:identifier="GST_RTSP_FAM_NONE"
              glib:nick="none"/>
      <member name="inet"
              value="1"
              c:identifier="GST_RTSP_FAM_INET"
              glib:nick="inet"/>
      <member name="inet6"
              value="2"
              c:identifier="GST_RTSP_FAM_INET6"
              glib:nick="inet6"/>
    </enumeration>
    <enumeration name="RTSPHeaderField"
                 glib:type-name="GstRTSPHeaderField"
                 glib:get-type="gst_rtsp_header_field_get_type"
                 c:type="GstRTSPHeaderField">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_HDR_INVALID"
              glib:nick="invalid"/>
      <member name="accept"
              value="1"
              c:identifier="GST_RTSP_HDR_ACCEPT"
              glib:nick="accept"/>
      <member name="accept_encoding"
              value="2"
              c:identifier="GST_RTSP_HDR_ACCEPT_ENCODING"
              glib:nick="accept-encoding"/>
      <member name="accept_language"
              value="3"
              c:identifier="GST_RTSP_HDR_ACCEPT_LANGUAGE"
              glib:nick="accept-language"/>
      <member name="allow"
              value="4"
              c:identifier="GST_RTSP_HDR_ALLOW"
              glib:nick="allow"/>
      <member name="authorization"
              value="5"
              c:identifier="GST_RTSP_HDR_AUTHORIZATION"
              glib:nick="authorization"/>
      <member name="bandwidth"
              value="6"
              c:identifier="GST_RTSP_HDR_BANDWIDTH"
              glib:nick="bandwidth"/>
      <member name="blocksize"
              value="7"
              c:identifier="GST_RTSP_HDR_BLOCKSIZE"
              glib:nick="blocksize"/>
      <member name="cache_control"
              value="8"
              c:identifier="GST_RTSP_HDR_CACHE_CONTROL"
              glib:nick="cache-control"/>
      <member name="conference"
              value="9"
              c:identifier="GST_RTSP_HDR_CONFERENCE"
              glib:nick="conference"/>
      <member name="connection"
              value="10"
              c:identifier="GST_RTSP_HDR_CONNECTION"
              glib:nick="connection"/>
      <member name="content_base"
              value="11"
              c:identifier="GST_RTSP_HDR_CONTENT_BASE"
              glib:nick="content-base"/>
      <member name="content_encoding"
              value="12"
              c:identifier="GST_RTSP_HDR_CONTENT_ENCODING"
              glib:nick="content-encoding"/>
      <member name="content_language"
              value="13"
              c:identifier="GST_RTSP_HDR_CONTENT_LANGUAGE"
              glib:nick="content-language"/>
      <member name="content_length"
              value="14"
              c:identifier="GST_RTSP_HDR_CONTENT_LENGTH"
              glib:nick="content-length"/>
      <member name="content_location"
              value="15"
              c:identifier="GST_RTSP_HDR_CONTENT_LOCATION"
              glib:nick="content-location"/>
      <member name="content_type"
              value="16"
              c:identifier="GST_RTSP_HDR_CONTENT_TYPE"
              glib:nick="content-type"/>
      <member name="cseq"
              value="17"
              c:identifier="GST_RTSP_HDR_CSEQ"
              glib:nick="cseq"/>
      <member name="date"
              value="18"
              c:identifier="GST_RTSP_HDR_DATE"
              glib:nick="date"/>
      <member name="expires"
              value="19"
              c:identifier="GST_RTSP_HDR_EXPIRES"
              glib:nick="expires"/>
      <member name="from"
              value="20"
              c:identifier="GST_RTSP_HDR_FROM"
              glib:nick="from"/>
      <member name="if_modified_since"
              value="21"
              c:identifier="GST_RTSP_HDR_IF_MODIFIED_SINCE"
              glib:nick="if-modified-since"/>
      <member name="last_modified"
              value="22"
              c:identifier="GST_RTSP_HDR_LAST_MODIFIED"
              glib:nick="last-modified"/>
      <member name="proxy_authenticate"
              value="23"
              c:identifier="GST_RTSP_HDR_PROXY_AUTHENTICATE"
              glib:nick="proxy-authenticate"/>
      <member name="proxy_require"
              value="24"
              c:identifier="GST_RTSP_HDR_PROXY_REQUIRE"
              glib:nick="proxy-require"/>
      <member name="public"
              value="25"
              c:identifier="GST_RTSP_HDR_PUBLIC"
              glib:nick="public"/>
      <member name="range"
              value="26"
              c:identifier="GST_RTSP_HDR_RANGE"
              glib:nick="range"/>
      <member name="referer"
              value="27"
              c:identifier="GST_RTSP_HDR_REFERER"
              glib:nick="referer"/>
      <member name="require"
              value="28"
              c:identifier="GST_RTSP_HDR_REQUIRE"
              glib:nick="require"/>
      <member name="retry_after"
              value="29"
              c:identifier="GST_RTSP_HDR_RETRY_AFTER"
              glib:nick="retry-after"/>
      <member name="rtp_info"
              value="30"
              c:identifier="GST_RTSP_HDR_RTP_INFO"
              glib:nick="rtp-info"/>
      <member name="scale"
              value="31"
              c:identifier="GST_RTSP_HDR_SCALE"
              glib:nick="scale"/>
      <member name="session"
              value="32"
              c:identifier="GST_RTSP_HDR_SESSION"
              glib:nick="session"/>
      <member name="server"
              value="33"
              c:identifier="GST_RTSP_HDR_SERVER"
              glib:nick="server"/>
      <member name="speed"
              value="34"
              c:identifier="GST_RTSP_HDR_SPEED"
              glib:nick="speed"/>
      <member name="transport"
              value="35"
              c:identifier="GST_RTSP_HDR_TRANSPORT"
              glib:nick="transport"/>
      <member name="unsupported"
              value="36"
              c:identifier="GST_RTSP_HDR_UNSUPPORTED"
              glib:nick="unsupported"/>
      <member name="user_agent"
              value="37"
              c:identifier="GST_RTSP_HDR_USER_AGENT"
              glib:nick="user-agent"/>
      <member name="via"
              value="38"
              c:identifier="GST_RTSP_HDR_VIA"
              glib:nick="via"/>
      <member name="www_authenticate"
              value="39"
              c:identifier="GST_RTSP_HDR_WWW_AUTHENTICATE"
              glib:nick="www-authenticate"/>
      <member name="client_challenge"
              value="40"
              c:identifier="GST_RTSP_HDR_CLIENT_CHALLENGE"
              glib:nick="client-challenge"/>
      <member name="real_challenge1"
              value="41"
              c:identifier="GST_RTSP_HDR_REAL_CHALLENGE1"
              glib:nick="real-challenge1"/>
      <member name="real_challenge2"
              value="42"
              c:identifier="GST_RTSP_HDR_REAL_CHALLENGE2"
              glib:nick="real-challenge2"/>
      <member name="real_challenge3"
              value="43"
              c:identifier="GST_RTSP_HDR_REAL_CHALLENGE3"
              glib:nick="real-challenge3"/>
      <member name="subscribe"
              value="44"
              c:identifier="GST_RTSP_HDR_SUBSCRIBE"
              glib:nick="subscribe"/>
      <member name="alert"
              value="45"
              c:identifier="GST_RTSP_HDR_ALERT"
              glib:nick="alert"/>
      <member name="client_id"
              value="46"
              c:identifier="GST_RTSP_HDR_CLIENT_ID"
              glib:nick="client-id"/>
      <member name="company_id"
              value="47"
              c:identifier="GST_RTSP_HDR_COMPANY_ID"
              glib:nick="company-id"/>
      <member name="guid"
              value="48"
              c:identifier="GST_RTSP_HDR_GUID"
              glib:nick="guid"/>
      <member name="region_data"
              value="49"
              c:identifier="GST_RTSP_HDR_REGION_DATA"
              glib:nick="region-data"/>
      <member name="max_asm_width"
              value="50"
              c:identifier="GST_RTSP_HDR_MAX_ASM_WIDTH"
              glib:nick="max-asm-width"/>
      <member name="language"
              value="51"
              c:identifier="GST_RTSP_HDR_LANGUAGE"
              glib:nick="language"/>
      <member name="player_start_time"
              value="52"
              c:identifier="GST_RTSP_HDR_PLAYER_START_TIME"
              glib:nick="player-start-time"/>
      <member name="location"
              value="53"
              c:identifier="GST_RTSP_HDR_LOCATION"
              glib:nick="location"/>
      <member name="etag"
              value="54"
              c:identifier="GST_RTSP_HDR_ETAG"
              glib:nick="etag"/>
      <member name="if_match"
              value="55"
              c:identifier="GST_RTSP_HDR_IF_MATCH"
              glib:nick="if-match"/>
      <member name="accept_charset"
              value="56"
              c:identifier="GST_RTSP_HDR_ACCEPT_CHARSET"
              glib:nick="accept-charset"/>
      <member name="supported"
              value="57"
              c:identifier="GST_RTSP_HDR_SUPPORTED"
              glib:nick="supported"/>
      <member name="vary"
              value="58"
              c:identifier="GST_RTSP_HDR_VARY"
              glib:nick="vary"/>
      <member name="x_accelerate_streaming"
              value="59"
              c:identifier="GST_RTSP_HDR_X_ACCELERATE_STREAMING"
              glib:nick="x-accelerate-streaming"/>
      <member name="x_accept_authent"
              value="60"
              c:identifier="GST_RTSP_HDR_X_ACCEPT_AUTHENT"
              glib:nick="x-accept-authent"/>
      <member name="x_accept_proxy_authent"
              value="61"
              c:identifier="GST_RTSP_HDR_X_ACCEPT_PROXY_AUTHENT"
              glib:nick="x-accept-proxy-authent"/>
      <member name="x_broadcast_id"
              value="62"
              c:identifier="GST_RTSP_HDR_X_BROADCAST_ID"
              glib:nick="x-broadcast-id"/>
      <member name="x_burst_streaming"
              value="63"
              c:identifier="GST_RTSP_HDR_X_BURST_STREAMING"
              glib:nick="x-burst-streaming"/>
      <member name="x_notice"
              value="64"
              c:identifier="GST_RTSP_HDR_X_NOTICE"
              glib:nick="x-notice"/>
      <member name="x_player_lag_time"
              value="65"
              c:identifier="GST_RTSP_HDR_X_PLAYER_LAG_TIME"
              glib:nick="x-player-lag-time"/>
      <member name="x_playlist"
              value="66"
              c:identifier="GST_RTSP_HDR_X_PLAYLIST"
              glib:nick="x-playlist"/>
      <member name="x_playlist_change_notice"
              value="67"
              c:identifier="GST_RTSP_HDR_X_PLAYLIST_CHANGE_NOTICE"
              glib:nick="x-playlist-change-notice"/>
      <member name="x_playlist_gen_id"
              value="68"
              c:identifier="GST_RTSP_HDR_X_PLAYLIST_GEN_ID"
              glib:nick="x-playlist-gen-id"/>
      <member name="x_playlist_seek_id"
              value="69"
              c:identifier="GST_RTSP_HDR_X_PLAYLIST_SEEK_ID"
              glib:nick="x-playlist-seek-id"/>
      <member name="x_proxy_client_agent"
              value="70"
              c:identifier="GST_RTSP_HDR_X_PROXY_CLIENT_AGENT"
              glib:nick="x-proxy-client-agent"/>
      <member name="x_proxy_client_verb"
              value="71"
              c:identifier="GST_RTSP_HDR_X_PROXY_CLIENT_VERB"
              glib:nick="x-proxy-client-verb"/>
      <member name="x_receding_playlistchange"
              value="72"
              c:identifier="GST_RTSP_HDR_X_RECEDING_PLAYLISTCHANGE"
              glib:nick="x-receding-playlistchange"/>
      <member name="x_rtp_info"
              value="73"
              c:identifier="GST_RTSP_HDR_X_RTP_INFO"
              glib:nick="x-rtp-info"/>
      <member name="x_startupprofile"
              value="74"
              c:identifier="GST_RTSP_HDR_X_STARTUPPROFILE"
              glib:nick="x-startupprofile"/>
      <member name="timestamp"
              value="75"
              c:identifier="GST_RTSP_HDR_TIMESTAMP"
              glib:nick="timestamp"/>
      <member name="authentication_info"
              value="76"
              c:identifier="GST_RTSP_HDR_AUTHENTICATION_INFO"
              glib:nick="authentication-info"/>
      <member name="host"
              value="77"
              c:identifier="GST_RTSP_HDR_HOST"
              glib:nick="host"/>
      <member name="pragma"
              value="78"
              c:identifier="GST_RTSP_HDR_PRAGMA"
              glib:nick="pragma"/>
      <member name="x_server_ip_address"
              value="79"
              c:identifier="GST_RTSP_HDR_X_SERVER_IP_ADDRESS"
              glib:nick="x-server-ip-address"/>
      <member name="x_sessioncookie"
              value="80"
              c:identifier="GST_RTSP_HDR_X_SESSIONCOOKIE"
              glib:nick="x-sessioncookie"/>
      <member name="last"
              value="81"
              c:identifier="GST_RTSP_HDR_LAST"
              glib:nick="last"/>
    </enumeration>
    <bitfield name="RTSPLowerTrans"
              doc="The different transport methods."
              glib:type-name="GstRTSPLowerTrans"
              glib:get-type="gst_rtsp_lower_trans_get_type"
              c:type="GstRTSPLowerTrans">
      <member name="udp_unicast"
              value="1"
              c:identifier="UDP Unicast Mode"
              glib:nick="udp-unicast"/>
      <member name="udp_multicast"
              value="2"
              c:identifier="UDP Multicast Mode"
              glib:nick="udp-multicast"/>
      <member name="tcp"
              value="4"
              c:identifier="TCP interleaved mode"
              glib:nick="tcp"/>
      <member name="http"
              value="16"
              c:identifier="HTTP tunneled mode"
              glib:nick="http"/>
    </bitfield>
    <record name="RTSPMessage"
            c:type="GstRTSPMessage"
            doc="An RTSP message containing request, response or data messages. Depending on
the @type, the appropriate structure may be accessed.">
      <field name="type" writable="1">
        <type name="RTSPMsgType" c:type="GstRTSPMsgType"/>
      </field>
      <union name="type_data" c:type="type_data">
        <record name="request" c:type="request">
          <field name="method" writable="1">
            <type name="RTSPMethod" c:type="GstRTSPMethod"/>
          </field>
          <field name="uri" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
          <field name="version" writable="1">
            <type name="RTSPVersion" c:type="GstRTSPVersion"/>
          </field>
        </record>
        <record name="response" c:type="response">
          <field name="code" writable="1">
            <type name="RTSPStatusCode" c:type="GstRTSPStatusCode"/>
          </field>
          <field name="reason" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
          <field name="version" writable="1">
            <type name="RTSPVersion" c:type="GstRTSPVersion"/>
          </field>
        </record>
        <record name="data" c:type="data">
          <field name="channel" writable="1">
            <type name="uint8" c:type="guint8"/>
          </field>
        </record>
      </union>
      <field name="hdr_fields" writable="1">
        <type name="GLib.Array" c:type="GArray*"/>
      </field>
      <field name="body" writable="1">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="body_size" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <constructor name="new"
                   c:identifier="gst_rtsp_message_new"
                   doc="Create a new initialized #GstRTSPMessage. Free with gst_rtsp_message_free().">
        <return-value transfer-ownership="full">
          <type name="RTSPMessage" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage**"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_request"
                   c:identifier="gst_rtsp_message_new_request"
                   doc="Create a new #GstRTSPMessage with @method and @uri and store the result
request message in @msg. Free with gst_rtsp_message_free().">
        <return-value transfer-ownership="full">
          <type name="RTSPMessage" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage**"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="RTSPMethod" c:type="GstRTSPMethod"/>
          </parameter>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_response"
                   c:identifier="gst_rtsp_message_new_response"
                   doc="Create a new response #GstRTSPMessage with @code and @reason and store the
result message in @msg. Free with gst_rtsp_message_free().
When @reason is #NULL, the default reason for @code will be used.
When @request is not #NULL, the relevant headers will be copied to the new
response message.">
        <return-value transfer-ownership="full">
          <type name="RTSPMessage" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage**"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="RTSPStatusCode" c:type="GstRTSPStatusCode"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="request" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_data"
                   c:identifier="gst_rtsp_message_new_data"
                   doc="Create a new data #GstRTSPMessage with @channel and store the
result message in @msg. Free with gst_rtsp_message_free().">
        <return-value transfer-ownership="full">
          <type name="RTSPMessage" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage**"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <type name="uint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="init"
              c:identifier="gst_rtsp_message_init"
              doc="Initialize @msg. This function is mostly used when @msg is allocated on the
stack. The reverse operation of this is gst_rtsp_message_unset().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="unset"
              c:identifier="gst_rtsp_message_unset"
              doc="Unset the contents of @msg so that it becomes an uninitialized
#GstRTSPMessage again. This function is mostly used in combination with
gst_rtsp_message_init_request(), gst_rtsp_message_init_response() and
gst_rtsp_message_init_data() on stack allocated #GstRTSPMessage structures.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="free"
              c:identifier="gst_rtsp_message_free"
              doc="Free the memory used by @msg.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
      <method name="init_request"
              c:identifier="gst_rtsp_message_init_request"
              doc="Initialize @msg as a request message with @method and @uri. To clear @msg
again, use gst_rtsp_message_unset().">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="RTSPMethod" c:type="GstRTSPMethod"/>
          </parameter>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_request"
              c:identifier="gst_rtsp_message_parse_request"
              doc="Parse the request message @msg and store the values @method, @uri and
value.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="RTSPMethod" c:type="GstRTSPMethod*"/>
          </parameter>
          <parameter name="uri" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="RTSPVersion" c:type="GstRTSPVersion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_response"
              c:identifier="gst_rtsp_message_init_response"
              doc="Initialize @msg with @code and @reason.
When @reason is #NULL, the default reason for @code will be used.
When @request is not #NULL, the relevant headers will be copied to the new
response message.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <type name="RTSPStatusCode" c:type="GstRTSPStatusCode"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="request" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_response"
              c:identifier="gst_rtsp_message_parse_response"
              doc="Parse the response message @msg and store the values @code, @reason and
value.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <type name="RTSPStatusCode" c:type="GstRTSPStatusCode*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="RTSPVersion" c:type="GstRTSPVersion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_data"
              c:identifier="gst_rtsp_message_init_data"
              doc="Initialize a new data #GstRTSPMessage for @channel.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="uint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_data"
              c:identifier="gst_rtsp_message_parse_data"
              doc="Parse the data message @msg and store the channel in @channel.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_header"
              c:identifier="gst_rtsp_message_add_header"
              doc="Add a header with key @field and @value to @msg. This function takes a copy
of @value.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_header"
              c:identifier="gst_rtsp_message_take_header"
              doc="Add a header with key @field and @value to @msg. This function takes
ownership of @value."
              version="0.10.23">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
          </parameter>
          <parameter name="value" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header"
              c:identifier="gst_rtsp_message_remove_header"
              doc="Remove the @indx header with key @field from @msg. If @indx equals -1, all
headers will be removed.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
          </parameter>
          <parameter name="indx" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_header"
              c:identifier="gst_rtsp_message_get_header"
              doc="Get the @indx header value with key @field from @msg. The result in @value
stays valid as long as it remains present in @msg.
was not found.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="indx" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_headers"
              c:identifier="gst_rtsp_message_append_headers"
              doc="Append the currently configured headers in @msg to the #GString @str suitable
for transmission.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_body"
              c:identifier="gst_rtsp_message_set_body"
              doc="Set the body of @msg to a copy of @data.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_body"
              c:identifier="gst_rtsp_message_take_body"
              doc="Set the body of @msg to @data and @size. This method takes ownership of">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_body"
              c:identifier="gst_rtsp_message_get_body"
              doc="Get the body of @msg. @data remains valid for as long as @msg is valid and
unchanged.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" direction="out" transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
          <parameter name="size" direction="out" transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_body"
              c:identifier="gst_rtsp_message_steal_body"
              doc="Take the body of @msg and store it in @data and @size. After this method,
the body and size of @msg will be set to #NULL and 0 respectively.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" direction="out" transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
          <parameter name="size" direction="out" transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dump"
              c:identifier="gst_rtsp_message_dump"
              doc="Dump the contents of @msg to stdout.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
      </method>
    </record>
    <bitfield name="RTSPMethod"
              doc="The different supported RTSP methods."
              glib:type-name="GstRTSPMethod"
              glib:get-type="gst_rtsp_method_get_type"
              c:type="GstRTSPMethod">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_INVALID"
              glib:nick="invalid"/>
      <member name="describe"
              value="1"
              c:identifier="GST_RTSP_DESCRIBE"
              glib:nick="describe"/>
      <member name="announce"
              value="2"
              c:identifier="GST_RTSP_ANNOUNCE"
              glib:nick="announce"/>
      <member name="get_parameter"
              value="4"
              c:identifier="GST_RTSP_GET_PARAMETER"
              glib:nick="get-parameter"/>
      <member name="options"
              value="8"
              c:identifier="GST_RTSP_OPTIONS"
              glib:nick="options"/>
      <member name="pause"
              value="16"
              c:identifier="GST_RTSP_PAUSE"
              glib:nick="pause"/>
      <member name="play"
              value="32"
              c:identifier="GST_RTSP_PLAY"
              glib:nick="play"/>
      <member name="record"
              value="64"
              c:identifier="GST_RTSP_RECORD"
              glib:nick="record"/>
      <member name="redirect"
              value="128"
              c:identifier="GST_RTSP_REDIRECT"
              glib:nick="redirect"/>
      <member name="setup"
              value="256"
              c:identifier="GST_RTSP_SETUP"
              glib:nick="setup"/>
      <member name="set_parameter"
              value="512"
              c:identifier="GST_RTSP_SET_PARAMETER"
              glib:nick="set-parameter"/>
      <member name="teardown"
              value="1024"
              c:identifier="GST_RTSP_TEARDOWN"
              glib:nick="teardown"/>
      <member name="get"
              value="2048"
              c:identifier="GST_RTSP_GET"
              glib:nick="get"/>
      <member name="post"
              value="4096"
              c:identifier="GST_RTSP_POST"
              glib:nick="post"/>
    </bitfield>
    <enumeration name="RTSPMsgType"
                 doc="The type of a message."
                 c:type="GstRTSPMsgType">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_MESSAGE_INVALID"/>
      <member name="request"
              value="1"
              c:identifier="GST_RTSP_MESSAGE_REQUEST"/>
      <member name="response"
              value="2"
              c:identifier="GST_RTSP_MESSAGE_RESPONSE"/>
      <member name="http_request"
              value="3"
              c:identifier="GST_RTSP_MESSAGE_HTTP_REQUEST"/>
      <member name="http_response"
              value="4"
              c:identifier="GST_RTSP_MESSAGE_HTTP_RESPONSE"/>
      <member name="data" value="5" c:identifier="GST_RTSP_MESSAGE_DATA"/>
    </enumeration>
    <bitfield name="RTSPProfile"
              doc="The transfer profile to use."
              c:type="GstRTSPProfile">
      <member name="unknown"
              value="0"
              c:identifier="GST_RTSP_PROFILE_UNKNOWN"/>
      <member name="avp" value="1" c:identifier="GST_RTSP_PROFILE_AVP"/>
      <member name="savp" value="2" c:identifier="GST_RTSP_PROFILE_SAVP"/>
    </bitfield>
    <record name="RTSPRange"
            c:type="GstRTSPRange"
            doc="A type to specify a range.">
      <field name="min" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="max" writable="1">
        <type name="int" c:type="gint"/>
      </field>
    </record>
    <enumeration name="RTSPRangeUnit"
                 doc="Different possible time range units."
                 c:type="GstRTSPRangeUnit">
      <member name="smpte" value="0" c:identifier="GST_RTSP_RANGE_SMPTE"/>
      <member name="smpte_30_drop"
              value="1"
              c:identifier="GST_RTSP_RANGE_SMPTE_30_DROP"/>
      <member name="smpte_25"
              value="2"
              c:identifier="GST_RTSP_RANGE_SMPTE_25"/>
      <member name="npt" value="3" c:identifier="GST_RTSP_RANGE_NPT"/>
      <member name="clock" value="4" c:identifier="GST_RTSP_RANGE_CLOCK"/>
    </enumeration>
    <enumeration name="RTSPResult"
                 doc="Result codes from the RTSP functions."
                 glib:type-name="GstRTSPResult"
                 glib:get-type="gst_rtsp_result_get_type"
                 c:type="GstRTSPResult">
      <member name="ok" value="0" c:identifier="GST_RTSP_OK" glib:nick="ok"/>
      <member name="error"
              value="-1"
              c:identifier="GST_RTSP_ERROR"
              glib:nick="error"/>
      <member name="einval"
              value="-2"
              c:identifier="GST_RTSP_EINVAL"
              glib:nick="einval"/>
      <member name="eintr"
              value="-3"
              c:identifier="GST_RTSP_EINTR"
              glib:nick="eintr"/>
      <member name="enomem"
              value="-4"
              c:identifier="GST_RTSP_ENOMEM"
              glib:nick="enomem"/>
      <member name="eresolv"
              value="-5"
              c:identifier="GST_RTSP_ERESOLV"
              glib:nick="eresolv"/>
      <member name="enotimpl"
              value="-6"
              c:identifier="GST_RTSP_ENOTIMPL"
              glib:nick="enotimpl"/>
      <member name="esys"
              value="-7"
              c:identifier="GST_RTSP_ESYS"
              glib:nick="esys"/>
      <member name="eparse"
              value="-8"
              c:identifier="GST_RTSP_EPARSE"
              glib:nick="eparse"/>
      <member name="ewsastart"
              value="-9"
              c:identifier="GST_RTSP_EWSASTART"
              glib:nick="ewsastart"/>
      <member name="ewsaversion"
              value="-10"
              c:identifier="GST_RTSP_EWSAVERSION"
              glib:nick="ewsaversion"/>
      <member name="eeof"
              value="-11"
              c:identifier="GST_RTSP_EEOF"
              glib:nick="eeof"/>
      <member name="enet"
              value="-12"
              c:identifier="GST_RTSP_ENET"
              glib:nick="enet"/>
      <member name="enotip"
              value="-13"
              c:identifier="GST_RTSP_ENOTIP"
              glib:nick="enotip"/>
      <member name="etimeout"
              value="-14"
              c:identifier="GST_RTSP_ETIMEOUT"
              glib:nick="etimeout"/>
      <member name="etget"
              value="-15"
              c:identifier="GST_RTSP_ETGET"
              glib:nick="etget"/>
      <member name="etpost"
              value="-16"
              c:identifier="GST_RTSP_ETPOST"
              glib:nick="etpost"/>
      <member name="elast"
              value="-17"
              c:identifier="GST_RTSP_ELAST"
              glib:nick="elast"/>
    </enumeration>
    <enumeration name="RTSPState"
                 doc="The different RTSP states."
                 glib:type-name="GstRTSPState"
                 glib:get-type="gst_rtsp_state_get_type"
                 c:type="GstRTSPState">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_STATE_INVALID"
              glib:nick="invalid"/>
      <member name="init"
              value="1"
              c:identifier="GST_RTSP_STATE_INIT"
              glib:nick="init"/>
      <member name="ready"
              value="2"
              c:identifier="GST_RTSP_STATE_READY"
              glib:nick="ready"/>
      <member name="seeking"
              value="3"
              c:identifier="GST_RTSP_STATE_SEEKING"
              glib:nick="seeking"/>
      <member name="playing"
              value="4"
              c:identifier="GST_RTSP_STATE_PLAYING"
              glib:nick="playing"/>
      <member name="recording"
              value="5"
              c:identifier="GST_RTSP_STATE_RECORDING"
              glib:nick="recording"/>
    </enumeration>
    <enumeration name="RTSPStatusCode"
                 glib:type-name="GstRTSPStatusCode"
                 glib:get-type="gst_rtsp_status_code_get_type"
                 c:type="GstRTSPStatusCode">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_STS_INVALID"
              glib:nick="invalid"/>
      <member name="continue"
              value="100"
              c:identifier="GST_RTSP_STS_CONTINUE"
              glib:nick="continue"/>
      <member name="ok"
              value="200"
              c:identifier="GST_RTSP_STS_OK"
              glib:nick="ok"/>
      <member name="created"
              value="201"
              c:identifier="GST_RTSP_STS_CREATED"
              glib:nick="created"/>
      <member name="low_on_storage"
              value="250"
              c:identifier="GST_RTSP_STS_LOW_ON_STORAGE"
              glib:nick="low-on-storage"/>
      <member name="multiple_choices"
              value="300"
              c:identifier="GST_RTSP_STS_MULTIPLE_CHOICES"
              glib:nick="multiple-choices"/>
      <member name="moved_permanently"
              value="301"
              c:identifier="GST_RTSP_STS_MOVED_PERMANENTLY"
              glib:nick="moved-permanently"/>
      <member name="move_temporarily"
              value="302"
              c:identifier="GST_RTSP_STS_MOVE_TEMPORARILY"
              glib:nick="move-temporarily"/>
      <member name="see_other"
              value="303"
              c:identifier="GST_RTSP_STS_SEE_OTHER"
              glib:nick="see-other"/>
      <member name="not_modified"
              value="304"
              c:identifier="GST_RTSP_STS_NOT_MODIFIED"
              glib:nick="not-modified"/>
      <member name="use_proxy"
              value="305"
              c:identifier="GST_RTSP_STS_USE_PROXY"
              glib:nick="use-proxy"/>
      <member name="bad_request"
              value="400"
              c:identifier="GST_RTSP_STS_BAD_REQUEST"
              glib:nick="bad-request"/>
      <member name="unauthorized"
              value="401"
              c:identifier="GST_RTSP_STS_UNAUTHORIZED"
              glib:nick="unauthorized"/>
      <member name="payment_required"
              value="402"
              c:identifier="GST_RTSP_STS_PAYMENT_REQUIRED"
              glib:nick="payment-required"/>
      <member name="forbidden"
              value="403"
              c:identifier="GST_RTSP_STS_FORBIDDEN"
              glib:nick="forbidden"/>
      <member name="not_found"
              value="404"
              c:identifier="GST_RTSP_STS_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="method_not_allowed"
              value="405"
              c:identifier="GST_RTSP_STS_METHOD_NOT_ALLOWED"
              glib:nick="method-not-allowed"/>
      <member name="not_acceptable"
              value="406"
              c:identifier="GST_RTSP_STS_NOT_ACCEPTABLE"
              glib:nick="not-acceptable"/>
      <member name="proxy_auth_required"
              value="407"
              c:identifier="GST_RTSP_STS_PROXY_AUTH_REQUIRED"
              glib:nick="proxy-auth-required"/>
      <member name="request_timeout"
              value="408"
              c:identifier="GST_RTSP_STS_REQUEST_TIMEOUT"
              glib:nick="request-timeout"/>
      <member name="gone"
              value="410"
              c:identifier="GST_RTSP_STS_GONE"
              glib:nick="gone"/>
      <member name="length_required"
              value="411"
              c:identifier="GST_RTSP_STS_LENGTH_REQUIRED"
              glib:nick="length-required"/>
      <member name="precondition_failed"
              value="412"
              c:identifier="GST_RTSP_STS_PRECONDITION_FAILED"
              glib:nick="precondition-failed"/>
      <member name="request_entity_too_large"
              value="413"
              c:identifier="GST_RTSP_STS_REQUEST_ENTITY_TOO_LARGE"
              glib:nick="request-entity-too-large"/>
      <member name="request_uri_too_large"
              value="414"
              c:identifier="GST_RTSP_STS_REQUEST_URI_TOO_LARGE"
              glib:nick="request-uri-too-large"/>
      <member name="unsupported_media_type"
              value="415"
              c:identifier="GST_RTSP_STS_UNSUPPORTED_MEDIA_TYPE"
              glib:nick="unsupported-media-type"/>
      <member name="parameter_not_understood"
              value="451"
              c:identifier="GST_RTSP_STS_PARAMETER_NOT_UNDERSTOOD"
              glib:nick="parameter-not-understood"/>
      <member name="conference_not_found"
              value="452"
              c:identifier="GST_RTSP_STS_CONFERENCE_NOT_FOUND"
              glib:nick="conference-not-found"/>
      <member name="not_enough_bandwidth"
              value="453"
              c:identifier="GST_RTSP_STS_NOT_ENOUGH_BANDWIDTH"
              glib:nick="not-enough-bandwidth"/>
      <member name="session_not_found"
              value="454"
              c:identifier="GST_RTSP_STS_SESSION_NOT_FOUND"
              glib:nick="session-not-found"/>
      <member name="method_not_valid_in_this_state"
              value="455"
              c:identifier="GST_RTSP_STS_METHOD_NOT_VALID_IN_THIS_STATE"
              glib:nick="method-not-valid-in-this-state"/>
      <member name="header_field_not_valid_for_resource"
              value="456"
              c:identifier="GST_RTSP_STS_HEADER_FIELD_NOT_VALID_FOR_RESOURCE"
              glib:nick="header-field-not-valid-for-resource"/>
      <member name="invalid_range"
              value="457"
              c:identifier="GST_RTSP_STS_INVALID_RANGE"
              glib:nick="invalid-range"/>
      <member name="parameter_is_readonly"
              value="458"
              c:identifier="GST_RTSP_STS_PARAMETER_IS_READONLY"
              glib:nick="parameter-is-readonly"/>
      <member name="aggregate_operation_not_allowed"
              value="459"
              c:identifier="GST_RTSP_STS_AGGREGATE_OPERATION_NOT_ALLOWED"
              glib:nick="aggregate-operation-not-allowed"/>
      <member name="only_aggregate_operation_allowed"
              value="460"
              c:identifier="GST_RTSP_STS_ONLY_AGGREGATE_OPERATION_ALLOWED"
              glib:nick="only-aggregate-operation-allowed"/>
      <member name="unsupported_transport"
              value="461"
              c:identifier="GST_RTSP_STS_UNSUPPORTED_TRANSPORT"
              glib:nick="unsupported-transport"/>
      <member name="destination_unreachable"
              value="462"
              c:identifier="GST_RTSP_STS_DESTINATION_UNREACHABLE"
              glib:nick="destination-unreachable"/>
      <member name="internal_server_error"
              value="500"
              c:identifier="GST_RTSP_STS_INTERNAL_SERVER_ERROR"
              glib:nick="internal-server-error"/>
      <member name="not_implemented"
              value="501"
              c:identifier="GST_RTSP_STS_NOT_IMPLEMENTED"
              glib:nick="not-implemented"/>
      <member name="bad_gateway"
              value="502"
              c:identifier="GST_RTSP_STS_BAD_GATEWAY"
              glib:nick="bad-gateway"/>
      <member name="service_unavailable"
              value="503"
              c:identifier="GST_RTSP_STS_SERVICE_UNAVAILABLE"
              glib:nick="service-unavailable"/>
      <member name="gateway_timeout"
              value="504"
              c:identifier="GST_RTSP_STS_GATEWAY_TIMEOUT"
              glib:nick="gateway-timeout"/>
      <member name="rtsp_version_not_supported"
              value="505"
              c:identifier="GST_RTSP_STS_RTSP_VERSION_NOT_SUPPORTED"
              glib:nick="rtsp-version-not-supported"/>
      <member name="option_not_supported"
              value="551"
              c:identifier="GST_RTSP_STS_OPTION_NOT_SUPPORTED"
              glib:nick="option-not-supported"/>
    </enumeration>
    <record name="RTSPTime" c:type="GstRTSPTime" doc="A time indication.">
      <field name="type" writable="1">
        <type name="RTSPTimeType" c:type="GstRTSPTimeType"/>
      </field>
      <field name="seconds" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
    </record>
    <record name="RTSPTimeRange" c:type="GstRTSPTimeRange" doc="A time range.">
      <field name="unit" writable="1">
        <type name="RTSPRangeUnit" c:type="GstRTSPRangeUnit"/>
      </field>
      <field name="min" writable="1">
        <type name="RTSPTime" c:type="GstRTSPTime"/>
      </field>
      <field name="max" writable="1">
        <type name="RTSPTime" c:type="GstRTSPTime"/>
      </field>
    </record>
    <enumeration name="RTSPTimeType"
                 doc="Possible time types."
                 c:type="GstRTSPTimeType">
      <member name="seconds" value="0" c:identifier="GST_RTSP_TIME_SECONDS"/>
      <member name="now" value="1" c:identifier="GST_RTSP_TIME_NOW"/>
      <member name="end" value="2" c:identifier="GST_RTSP_TIME_END"/>
    </enumeration>
    <bitfield name="RTSPTransMode"
              doc="The transfer mode to use."
              c:type="GstRTSPTransMode">
      <member name="unknown" value="0" c:identifier="GST_RTSP_TRANS_UNKNOWN"/>
      <member name="rtp" value="1" c:identifier="GST_RTSP_TRANS_RTP"/>
      <member name="rdt" value="2" c:identifier="GST_RTSP_TRANS_RDT"/>
    </bitfield>
    <record name="RTSPTransport" c:type="_GstRTSPTransport">
      <field name="trans" writable="1">
        <type name="RTSPTransMode" c:type="GstRTSPTransMode"/>
      </field>
      <field name="profile" writable="1">
        <type name="RTSPProfile" c:type="GstRTSPProfile"/>
      </field>
      <field name="lower_transport" writable="1">
        <type name="RTSPLowerTrans" c:type="GstRTSPLowerTrans"/>
      </field>
      <field name="destination" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="source" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="layers" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="mode_play" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="mode_record" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="append" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="interleaved" writable="1">
        <type name="RTSPRange" c:type="GstRTSPRange"/>
      </field>
      <field name="ttl" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="port" writable="1">
        <type name="RTSPRange" c:type="GstRTSPRange"/>
      </field>
      <field name="client_port" writable="1">
        <type name="RTSPRange" c:type="GstRTSPRange"/>
      </field>
      <field name="server_port" writable="1">
        <type name="RTSPRange" c:type="GstRTSPRange"/>
      </field>
      <field name="ssrc" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
    </record>
    <record name="RTSPUrl"
            c:type="GstRTSPUrl"
            doc="This structure contains the result of a parsed RTSP URL"
            glib:type-name="GstRTSPUrl"
            glib:get-type="gst_rtsp_url_get_type">
      <field name="transports" writable="1">
        <type name="RTSPLowerTrans" c:type="GstRTSPLowerTrans"/>
      </field>
      <field name="family" writable="1">
        <type name="RTSPFamily" c:type="GstRTSPFamily"/>
      </field>
      <field name="user" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="passwd" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="host" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="port" writable="1">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="abspath" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="query" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <method name="copy"
              c:identifier="gst_rtsp_url_copy"
              doc="Make a copy of @url."
              version="0.10.22">
        <return-value transfer-ownership="full" doc="after usage.">
          <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
        </return-value>
      </method>
      <method name="free"
              c:identifier="gst_rtsp_url_free"
              doc="Free the memory used by @url.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_request_uri"
              c:identifier="gst_rtsp_url_get_request_uri"
              doc="Get a newly allocated string describing the request URI for @url.">
        <return-value transfer-ownership="full" doc="after usage.">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_port"
              c:identifier="gst_rtsp_url_set_port"
              doc="Set the port number in @url to @port.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_port"
              c:identifier="gst_rtsp_url_get_port"
              doc="Get the port number of @url.">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="port" direction="out" transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="RTSPVersion"
                 doc="The supported RTSP versions."
                 glib:type-name="GstRTSPVersion"
                 glib:get-type="gst_rtsp_version_get_type"
                 c:type="GstRTSPVersion">
      <member name="invalid"
              value="0"
              c:identifier="GST_RTSP_VERSION_INVALID"
              glib:nick="invalid"/>
      <member name="1_0"
              value="16"
              c:identifier="GST_RTSP_VERSION_1_0"
              glib:nick="1-0"/>
      <member name="1_1"
              value="17"
              c:identifier="GST_RTSP_VERSION_1_1"
              glib:nick="1-1"/>
    </enumeration>
    <record name="RTSPWatch"
            c:type="GstRTSPWatch"
            doc="Opaque RTSP watch object that can be used for asynchronous RTSP
operations.">
      <constructor name="new"
                   c:identifier="gst_rtsp_watch_new"
                   doc="Create a watch object for @conn. The functions provided in @funcs will be
called with @user_data when activity happened on the watch.
The new watch is usually created so that it can be attached to a
maincontext with gst_rtsp_watch_attach().
communication. Free with gst_rtsp_watch_unref () after usage."
                   version="0.10.23">
        <return-value transfer-ownership="full">
          <type name="RTSPWatch" c:type="GstRTSPWatch*"/>
        </return-value>
        <parameters>
          <parameter name="conn" transfer-ownership="none">
            <type name="RTSPConnection" c:type="GstRTSPConnection*"/>
          </parameter>
          <parameter name="funcs" transfer-ownership="none">
            <type name="RTSPWatchFuncs" c:type="GstRTSPWatchFuncs*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="reset"
              c:identifier="gst_rtsp_watch_reset"
              doc="Reset @watch, this is usually called after gst_rtsp_connection_do_tunnel()
when the file descriptors of the connection might have changed."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unref"
              c:identifier="gst_rtsp_watch_unref"
              doc="Decreases the reference count of @watch by one. If the resulting reference
count is zero the watch and associated memory will be destroyed."
              version="0.10.23">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="attach"
              c:identifier="gst_rtsp_watch_attach"
              doc="Adds a #GstRTSPWatch to a context so that it will be executed within that context."
              version="0.10.23">
        <return-value transfer-ownership="none"
                      doc="for the watch within the GMainContext.">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="GLib.MainContext" c:type="GMainContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_data"
              c:identifier="gst_rtsp_watch_write_data"
              doc="Write @data using the connection of the @watch. If it cannot be sent
immediately, it will be queued for transmission in @watch. The contents of
callback.
This function will take ownership of @data and g_free() it after use."
              version="0.10.25">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="id" direction="out" transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message"
              c:identifier="gst_rtsp_watch_send_message"
              doc="Send a @message using the connection of the @watch. If it cannot be sent
immediately, it will be queued for transmission in @watch. The contents of
callback."
              version="0.10.25">
        <return-value transfer-ownership="full">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
          <parameter name="id" direction="out" transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_data"
              c:identifier="gst_rtsp_watch_queue_data"
              doc="Queue @data for transmission in @watch. It will be transmitted when the
connection of the @watch becomes writable.
This function will take ownership of @data and g_free() it after use.
The return value of this function will be used as the id argument in the
message_sent callback."
              version="0.10.24"
              deprecated="Use gst_rtsp_watch_write_data()">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_message"
              c:identifier="gst_rtsp_watch_queue_message"
              doc="Queue a @message for transmission in @watch. The contents of this
message will be serialized and transmitted when the connection of the
The return value of this function will be used as the id argument in the
message_sent callback."
              version="0.10.23"
              deprecated="Use gst_rtsp_watch_send_message()">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="RTSPWatchFuncs"
            c:type="GstRTSPWatchFuncs"
            doc="connection must be saved.
you usually pair the tunnelid of this connection with the saved one using
gst_rtsp_connection_do_tunnel().
the @error callback. Since 0.10.25
Since 0.10.29
Callback functions from a #GstRTSPWatch."
            version="0.10.23">
      <field name="message_received">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="message_sent">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="closed">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="error">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="tunnel_start">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="tunnel_complete">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="error_full">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="tunnel_lost">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="2">
          <type name="any"/>
        </array>
      </field>
    </record>
    <function name="base64_decode_ip"
              c:identifier="gst_rtsp_base64_decode_ip"
              doc="Decode the base64 string pointed to by @data in-place. When @len is not #NULL
it will contain the length of the decoded data.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="len" direction="out" transfer-ownership="full">
          <type name="size_t" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base64_encode"
              c:identifier="gst_rtsp_base64_encode"
              doc="Encode a sequence of binary data into its Base-64 stringified representation.
representing @data."
              deprecated="Use g_base64_encode()">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <function name="connection_accept"
              c:identifier="gst_rtsp_connection_accept"
              doc="Accept a new connection on @sock and create a new #GstRTSPConnection for
handling communication on new socket."
              version="0.10.23">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="sock" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="conn" transfer-ownership="none">
          <type name="RTSPConnection" c:type="GstRTSPConnection**"/>
        </parameter>
      </parameters>
    </function>
    <function name="connection_create"
              c:identifier="gst_rtsp_connection_create"
              doc="Create a newly allocated #GstRTSPConnection from @url and store it in @conn.
The connection will not yet attempt to connect to @url, use
gst_rtsp_connection_connect().
A copy of @url will be made.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="url" transfer-ownership="none">
          <type name="RTSPUrl" c:type="GstRTSPUrl*"/>
        </parameter>
        <parameter name="conn" transfer-ownership="none">
          <type name="RTSPConnection" c:type="GstRTSPConnection**"/>
        </parameter>
      </parameters>
    </function>
    <function name="connection_create_from_fd"
              c:identifier="gst_rtsp_connection_create_from_fd"
              doc="Create a new #GstRTSPConnection for handling communication on the existing
file descriptor @fd. The @initial_buffer contains any data already read from"
              version="0.10.25">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="ip" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="port" transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </parameter>
        <parameter name="initial_buffer" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="conn" transfer-ownership="none">
          <type name="RTSPConnection" c:type="GstRTSPConnection**"/>
        </parameter>
      </parameters>
    </function>
    <function name="find_header_field"
              c:identifier="gst_rtsp_find_header_field"
              doc="Convert @header to a #GstRTSPHeaderField.
header field is unknown.">
      <return-value transfer-ownership="full">
        <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
      </return-value>
      <parameters>
        <parameter name="header" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="find_method"
              c:identifier="gst_rtsp_find_method"
              doc="Convert @method to a #GstRTSPMethod.
method is unknown.">
      <return-value transfer-ownership="full">
        <type name="RTSPMethod" c:type="GstRTSPMethod"/>
      </return-value>
      <parameters>
        <parameter name="method" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="header_allow_multiple"
              c:identifier="gst_rtsp_header_allow_multiple"
              doc="Check whether @field may appear multiple times in a message."
              version="0.10.25">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
        </parameter>
      </parameters>
    </function>
    <function name="header_as_text"
              c:identifier="gst_rtsp_header_as_text"
              doc="Convert @field to a string.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <type name="RTSPHeaderField" c:type="GstRTSPHeaderField"/>
        </parameter>
      </parameters>
    </function>
    <function name="message_get_type"
              c:identifier="gst_rtsp_message_get_type"
              doc="Get the message type of @msg.">
      <return-value transfer-ownership="full">
        <type name="RTSPMsgType" c:type="GstRTSPMsgType"/>
      </return-value>
      <parameters>
        <parameter name="msg" transfer-ownership="none">
          <type name="RTSPMessage" c:type="GstRTSPMessage*"/>
        </parameter>
      </parameters>
    </function>
    <function name="method_as_text"
              c:identifier="gst_rtsp_method_as_text"
              doc="Convert @method to a string.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="method" transfer-ownership="none">
          <type name="RTSPMethod" c:type="GstRTSPMethod"/>
        </parameter>
      </parameters>
    </function>
    <function name="options_as_text"
              c:identifier="gst_rtsp_options_as_text"
              doc="Convert @options to a string."
              version="0.10.23">
      <return-value transfer-ownership="full" doc="after usage.">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="options" transfer-ownership="none">
          <type name="RTSPMethod" c:type="GstRTSPMethod"/>
        </parameter>
      </parameters>
    </function>
    <function name="range_free"
              c:identifier="gst_rtsp_range_free"
              doc="Free the memory alocated by @range.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="range" transfer-ownership="none">
          <type name="RTSPTimeRange" c:type="GstRTSPTimeRange*"/>
        </parameter>
      </parameters>
    </function>
    <function name="range_parse"
              c:identifier="gst_rtsp_range_parse"
              doc="Parse @rangestr to a #GstRTSPTimeRange.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="rangestr" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="range" transfer-ownership="none">
          <type name="RTSPTimeRange" c:type="GstRTSPTimeRange**"/>
        </parameter>
      </parameters>
    </function>
    <function name="range_to_string"
              c:identifier="gst_rtsp_range_to_string"
              doc="Convert @range into a string representation."
              version="0.10.23">
      <return-value transfer-ownership="full" doc="after usage.">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="range" transfer-ownership="none">
          <type name="RTSPTimeRange" c:type="GstRTSPTimeRange*"/>
        </parameter>
      </parameters>
    </function>
    <function name="status_as_text"
              c:identifier="gst_rtsp_status_as_text"
              doc="Convert @code to a string.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="code" transfer-ownership="none">
          <type name="RTSPStatusCode" c:type="GstRTSPStatusCode"/>
        </parameter>
      </parameters>
    </function>
    <function name="strresult"
              c:identifier="gst_rtsp_strresult"
              doc="Convert @result in a human readable string.">
      <return-value transfer-ownership="full" doc="after usage.">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="RTSPResult" c:type="GstRTSPResult"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_as_text"
              c:identifier="gst_rtsp_transport_as_text"
              doc="Convert @transport into a string that can be used to signal the transport in
an RTSP SETUP response.
is invalid.">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="transport" transfer-ownership="none">
          <type name="RTSPTransport" c:type="GstRTSPTransport*"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_free"
              c:identifier="gst_rtsp_transport_free"
              doc="Free the memory used by @transport.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="transport" transfer-ownership="none">
          <type name="RTSPTransport" c:type="GstRTSPTransport*"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_get_manager"
              c:identifier="gst_rtsp_transport_get_manager"
              doc="Get the #GStreamer element that can handle the buffers transported over
It is possible that there are several managers available, use @option to
selected one.
needed/available for @trans.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="trans" transfer-ownership="none">
          <type name="RTSPTransMode" c:type="GstRTSPTransMode"/>
        </parameter>
        <parameter name="manager" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="option" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_get_mime"
              c:identifier="gst_rtsp_transport_get_mime"
              doc="Get the mime type of the transport mode @trans. This mime type is typically
used to generate #GstCaps on buffers.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="trans" transfer-ownership="none">
          <type name="RTSPTransMode" c:type="GstRTSPTransMode"/>
        </parameter>
        <parameter name="mime" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="transport_init"
              c:identifier="gst_rtsp_transport_init"
              doc="Initialize @transport so that it can be used.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="transport" transfer-ownership="none">
          <type name="RTSPTransport" c:type="GstRTSPTransport*"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_new"
              c:identifier="gst_rtsp_transport_new"
              doc="Allocate a new initialized #GstRTSPTransport. Use gst_rtsp_transport_free()
after usage.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="transport" transfer-ownership="none">
          <type name="RTSPTransport" c:type="GstRTSPTransport**"/>
        </parameter>
      </parameters>
    </function>
    <function name="transport_parse"
              c:identifier="gst_rtsp_transport_parse"
              doc="Parse the RTSP transport string @str into @transport.">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="transport" transfer-ownership="none">
          <type name="RTSPTransport" c:type="GstRTSPTransport*"/>
        </parameter>
      </parameters>
    </function>
    <function name="url_parse"
              c:identifier="gst_rtsp_url_parse"
              doc="Parse the RTSP @urlstr into a newly allocated #GstRTSPUrl. Free after usage
with gst_rtsp_url_free().">
      <return-value transfer-ownership="full">
        <type name="RTSPResult" c:type="GstRTSPResult"/>
      </return-value>
      <parameters>
        <parameter name="urlstr" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="url" transfer-ownership="none">
          <type name="RTSPUrl" c:type="GstRTSPUrl**"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_as_text"
              c:identifier="gst_rtsp_version_as_text"
              doc="Convert @version to a string.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="version" transfer-ownership="none">
          <type name="RTSPVersion" c:type="GstRTSPVersion"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
