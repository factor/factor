<?xml version="1.0" encoding="UTF-8"?>
<!--
    @(#)xmltest.xml	1.12 99/02/12
    Copyright 1998-1999 by Sun Microsystems, Inc.
    All Rights Reserved.
-->

<TESTCASES PROFILE="James Clark XMLTEST cases, 18-Nov-1998">

<!-- Start:  not-wf/sa -->
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-001"
	URI="not-wf/sa/001.xml" SECTIONS="3.1 [41]">
    Attribute values must start with attribute names, not "?". </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-002"
	URI="not-wf/sa/002.xml" SECTIONS="2.3 [4]">
    Names may not start with "."; it's not a Letter. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-003"
	URI="not-wf/sa/003.xml" SECTIONS="2.6 [16]">
    Processing Instruction target name is required.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-004"
	URI="not-wf/sa/004.xml" SECTIONS="2.6 [16]">
    SGML-ism:  processing instructions end in '?&gt;' not '&gt;'. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-005"
	URI="not-wf/sa/005.xml" SECTIONS="2.6 [16]">
    Processing instructions end in '?&gt;' not '?'. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-006"
	URI="not-wf/sa/006.xml" SECTIONS="2.5 [16]">
    XML comments may not contain "--" </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-007"
	URI="not-wf/sa/007.xml" SECTIONS="4.1 [68]">
    General entity references have no whitespace after the
    entity name and before the semicolon. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-008"
	URI="not-wf/sa/008.xml" SECTIONS="2.3 [5]">
    Entity references must include names, which don't begin
    with '.' (it's not a Letter or other name start character). </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-009"
	URI="not-wf/sa/009.xml" SECTIONS="4.1 [66]">
    Character references may have only decimal or numeric strings.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-010"
	URI="not-wf/sa/010.xml" SECTIONS="4.1 [68]">
    Ampersand may only appear as part of a general entity reference.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-011"
	URI="not-wf/sa/011.xml" SECTIONS="3.1 [41]">
    SGML-ism:  attribute values must be explicitly assigned a
    value, it can't act as a boolean toggle. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-012"
	URI="not-wf/sa/012.xml" SECTIONS="2.3 [10]">
    SGML-ism:  attribute values must be quoted in all cases. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-013"
	URI="not-wf/sa/013.xml" SECTIONS="2.3 [10]">
    The quotes on both ends of an attribute value must match. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-014"
	URI="not-wf/sa/014.xml" SECTIONS="2.3 [10]">
    Attribute values may not contain literal '&lt;' characters. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-015"
	URI="not-wf/sa/015.xml" SECTIONS="3.1 [41]">
    Attribute values need a value, not just an equals sign. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-016"
	URI="not-wf/sa/016.xml" SECTIONS="3.1 [41]">
    Attribute values need an associated name.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-017"
	URI="not-wf/sa/017.xml" SECTIONS="2.7 [18]">
    CDATA sections need a terminating ']]&gt;'. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-018"
	URI="not-wf/sa/018.xml" SECTIONS="2.7 [19]">
    CDATA sections begin with a literal '&lt;![CDATA[', no space.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-019"
	URI="not-wf/sa/019.xml" SECTIONS="3.1 [42]">
    End tags may not be abbreviated as '&lt;/&gt;'.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-020"
	URI="not-wf/sa/020.xml" SECTIONS="2.3 [10]">
    Attribute values may not contain literal '&amp;'
    characters except as part of an entity reference. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-021"
	URI="not-wf/sa/021.xml" SECTIONS="2.3 [10]">
    Attribute values may not contain literal '&amp;'
    characters except as part of an entity reference. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-022"
	URI="not-wf/sa/022.xml" SECTIONS="4.1 [66]">
    Character references end with semicolons, always!</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-023"
	URI="not-wf/sa/023.xml" SECTIONS="2.3 [5]">
    Digits are not valid name start characters. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-024"
	URI="not-wf/sa/024.xml" SECTIONS="2.3 [5]">
    Digits are not valid name start characters. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-025"
	URI="not-wf/sa/025.xml" SECTIONS="2.4 [14]">
    Text may not contain a literal ']]&gt;' sequence. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-026"
	URI="not-wf/sa/026.xml" SECTIONS="2.4 [14]">
    Text may not contain a literal ']]&gt;' sequence. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-027"
	URI="not-wf/sa/027.xml" SECTIONS="2.5 [15]">
    Comments must be terminated with "--&gt;".</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-028"
	URI="not-wf/sa/028.xml" SECTIONS="2.6 [16]">
    Processing instructions must end with '?&gt;'. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-029"
	URI="not-wf/sa/029.xml" SECTIONS="2.4 [14]">
    Text may not contain a literal ']]&gt;' sequence. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-030"
	URI="not-wf/sa/030.xml" SECTIONS="2.2 [2]">
    A form feed is not a legal XML character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-031"
	URI="not-wf/sa/031.xml" SECTIONS="2.2 [2]">
    A form feed is not a legal XML character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-032"
	URI="not-wf/sa/032.xml" SECTIONS="2.2 [2]">
    A form feed is not a legal XML character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-033"
	URI="not-wf/sa/033.xml" SECTIONS="2.2 [2]">
    An ESC (octal 033) is not a legal XML character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-034"
	URI="not-wf/sa/034.xml" SECTIONS="2.2 [2]">
    A form feed is not a legal XML character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-035"
	URI="not-wf/sa/035.xml" SECTIONS="3.1 [43]">
    The '&lt;' character is a markup delimiter and must
    start an element, CDATA section, PI, or comment. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-036"
	URI="not-wf/sa/036.xml" SECTIONS="2.8 [27]">
    Text may not appear after the root element. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-037"
	URI="not-wf/sa/037.xml" SECTIONS="2.8 [27]">
    Character references may not appear after the root element. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-038"
	URI="not-wf/sa/038.xml" SECTIONS="3.1">
    Tests the "Unique Att Spec" WF constraint by providing
    multiple values for an attribute.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-039"
	URI="not-wf/sa/039.xml" SECTIONS="3">
    Tests the Element Type Match WFC - end tag name must
    match start tag name.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-040"
	URI="not-wf/sa/040.xml" SECTIONS="2.8 [27]">
    Provides two document elements.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-041"
	URI="not-wf/sa/041.xml" SECTIONS="2.8 [27]">
    Provides two document elements.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-042"
	URI="not-wf/sa/042.xml" SECTIONS="3.1 [42]">
     Invalid End Tag </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-043"
	URI="not-wf/sa/043.xml" SECTIONS="2.8 [27]">
    Provides #PCDATA text after the document element. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-044"
	URI="not-wf/sa/044.xml" SECTIONS="2.8 [27]">
    Provides two document elements.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-045"
	URI="not-wf/sa/045.xml" SECTIONS="3.1 [44]">
    Invalid Empty Element Tag </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-046"
	URI="not-wf/sa/046.xml" SECTIONS="3.1 [40]">
    This start (or empty element) tag was not terminated correctly. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-047"
	URI="not-wf/sa/047.xml" SECTIONS="3.1 [44]">
    Invalid empty element tag invalid whitespace </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-048"
	URI="not-wf/sa/048.xml" SECTIONS="2.8 [27]">
    Provides a CDATA section after the root element.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-049"
	URI="not-wf/sa/049.xml" SECTIONS="3.1 [40]">
    Missing start tag </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-050"
	URI="not-wf/sa/050.xml" SECTIONS="2.1 [1]">
    Empty document, with no root element. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-051"
	URI="not-wf/sa/051.xml" SECTIONS="2.7 [18]">
     CDATA is invalid at top level of document.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-052"
	URI="not-wf/sa/052.xml" SECTIONS="4.1 [66]">
    Invalid character reference. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-053"
	URI="not-wf/sa/053.xml" SECTIONS="3.1 [42]">
    End tag does not match start tag. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-054"
	URI="not-wf/sa/054.xml" SECTIONS="4.2.2 [75]">
     PUBLIC requires two literals.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-055"
	URI="not-wf/sa/055.xml" SECTIONS="2.8 [28]">
    Invalid Document Type Definition format. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-056"
	URI="not-wf/sa/056.xml" SECTIONS="2.8 [28]">
    Invalid Document Type Definition format - misplaced comment. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-057"
	URI="not-wf/sa/057.xml" SECTIONS="3.2 [45]">
    This isn't SGML; comments can't exist in declarations. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-058"
	URI="not-wf/sa/058.xml" SECTIONS="3.3.1 [54]">
    Invalid character , in ATTLIST enumeration </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-059"
	URI="not-wf/sa/059.xml" SECTIONS="3.3.1 [59]">
    String literal must be in quotes. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-060"
	URI="not-wf/sa/060.xml" SECTIONS="3.3.1 [56]">
     Invalid type NAME defined in ATTLIST.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-061"
	URI="not-wf/sa/061.xml" SECTIONS="4.2.2 [75]">
    External entity declarations require whitespace between public
    and system IDs.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-062"
	URI="not-wf/sa/062.xml" SECTIONS="4.2 [71]">
    Entity declarations need space after the entity name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-063"
	URI="not-wf/sa/063.xml" SECTIONS="2.8 [29]">
    Conditional sections may only appear in the external
    DTD subset. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-064"
	URI="not-wf/sa/064.xml" SECTIONS="3.3 [53]">
    Space is required between attribute type and default values
    in &lt;!ATTLIST...&gt; declarations. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-065"
	URI="not-wf/sa/065.xml" SECTIONS="3.3 [53]">
    Space is required between attribute name and type
    in &lt;!ATTLIST...&gt; declarations. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-066"
	URI="not-wf/sa/066.xml" SECTIONS="3.3 [52]">
    Required whitespace is missing. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-067"
	URI="not-wf/sa/067.xml" SECTIONS="3.3 [53]">
    Space is required between attribute type and default values
    in &lt;!ATTLIST...&gt; declarations. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-068"
	URI="not-wf/sa/068.xml" SECTIONS="3.3.1 [58]">
    Space is required between NOTATION keyword and list of
    enumerated choices in &lt;!ATTLIST...&gt; declarations. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-069"
	URI="not-wf/sa/069.xml" SECTIONS="4.2.2 [76]">
    Space is required before an NDATA entity annotation.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-070"
	URI="not-wf/sa/070.xml" SECTIONS="2.5 [16]">
    XML comments may not contain "--" </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-071"
	URI="not-wf/sa/071.xml" SECTIONS="4.1 [68]">
     ENTITY can't reference itself directly or indirectly.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-072"
	URI="not-wf/sa/072.xml" SECTIONS="4.1 [68]">
    Undefined ENTITY foo. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-073"
	URI="not-wf/sa/073.xml" SECTIONS="4.1 [68]">
    Undefined ENTITY f. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-074"
	URI="not-wf/sa/074.xml" SECTIONS="4.3.2">
    Internal general parsed entities are only well formed if
    they match the "content" production. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-075"
	URI="not-wf/sa/075.xml" SECTIONS="4.1 [68]">
    ENTITY can't reference itself directly or indirectly. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-076"
	URI="not-wf/sa/076.xml" SECTIONS="4.1 [68]">
    Undefined ENTITY foo. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-077"
	URI="not-wf/sa/077.xml" SECTIONS="41. [68]">
    Undefined ENTITY bar. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-078"
	URI="not-wf/sa/078.xml" SECTIONS="4.1 [68]">
    Undefined ENTITY foo. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-079"
	URI="not-wf/sa/079.xml" SECTIONS="4.1 [68]">
    ENTITY can't reference itself directly or indirectly. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-080"
	URI="not-wf/sa/080.xml" SECTIONS="4.1 [68]">
    ENTITY can't reference itself directly or indirectly. </TEST>
<TEST TYPE="not-wf" ENTITIES="general" ID="not-wf-sa-081"
	URI="not-wf/sa/081.xml" SECTIONS="3.1">
    This tests the <EM>No External Entity References</EM> WFC,
    since the entity is referred to within an attribute.  </TEST>
<TEST TYPE="not-wf" ENTITIES="general" ID="not-wf-sa-082"
	URI="not-wf/sa/082.xml" SECTIONS="3.1">
    This tests the <EM>No External Entity References</EM> WFC,
    since the entity is referred to within an attribute.  </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-083"
	URI="not-wf/sa/083.xml" SECTIONS="4.2.2 [76]">
    Undefined NOTATION n. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-084"
	URI="not-wf/sa/084.xml" SECTIONS="4.1">
    Tests the <EM>Parsed Entity</EM> WFC by referring to an
    unparsed entity.  (This precedes the error of not declaring
    that entity's notation, which may be detected any time before
    the DTD parsing is completed.) </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-085"
	URI="not-wf/sa/085.xml" SECTIONS="2.3 [13]">
    Public IDs may not contain "[". </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-086"
	URI="not-wf/sa/086.xml" SECTIONS="2.3 [13]">
    Public IDs may not contain "[". </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-087"
	URI="not-wf/sa/087.xml" SECTIONS="2.3 [13]">
    Public IDs may not contain "[". </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-088"
	URI="not-wf/sa/088.xml" SECTIONS="2.3 [10]">
    Attribute values are terminated by literal quote characters,
    and any entity expansion is done afterwards. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-089"
	URI="not-wf/sa/089.xml" SECTIONS="4.2 [74]">
    Parameter entities "are" always parsed; NDATA annotations
    are not permitted.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-090"
	URI="not-wf/sa/090.xml" SECTIONS="2.3 [10]">
    Attributes may not contain a literal "&lt;" character;
    this one has one because of reference expansion. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-091"
	URI="not-wf/sa/091.xml" SECTIONS="4.2 [74]">
    Parameter entities "are" always parsed; NDATA annotations
    are not permitted.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-092"
	URI="not-wf/sa/092.xml" SECTIONS="4.5">
    The replacement text of this entity has an illegal reference,
    because the character reference is expanded immediately. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-093"
	URI="not-wf/sa/093.xml" SECTIONS="4.1 [66]">
    Hexadecimal character references may not use the uppercase 'X'.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-094"
	URI="not-wf/sa/094.xml" SECTIONS="2.8 [24]">
    Prolog VERSION must be lowercase. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-095"
	URI="not-wf/sa/095.xml" SECTIONS="2.8 [23]">
    VersionInfo must come before EncodingDecl. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-096"
	URI="not-wf/sa/096.xml" SECTIONS="2.9 [32]">
    Space is required before the standalone declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-097"
	URI="not-wf/sa/097.xml" SECTIONS="2.8 [24]">
    Both quotes surrounding VersionNum must be the same. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-098"
	URI="not-wf/sa/098.xml" SECTIONS="2.8 [23]">
    Only one "version=..." string may appear in an XML declaration.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-099"
	URI="not-wf/sa/099.xml" SECTIONS="2.8 [23]">
    Only three pseudo-attributes are in the XML declaration,
    and "valid=..." is not one of them. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-100"
	URI="not-wf/sa/100.xml" SECTIONS="2.9 [32]">
    Only "yes" and "no" are permitted as values of "standalone". </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-101"
	URI="not-wf/sa/101.xml" SECTIONS="4.3.3 [81]">
    Space is not permitted in an encoding name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-102"
	URI="not-wf/sa/102.xml" SECTIONS="2.8 [26]">
    Provides an illegal XML version number; spaces are illegal.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-103"
	URI="not-wf/sa/103.xml" SECTIONS="4.3.2">
    End-tag required for element foo. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-104"
	URI="not-wf/sa/104.xml" SECTIONS="4.3.2">
    Internal general parsed entities are only well formed if
    they match the "content" production. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-105"
	URI="not-wf/sa/105.xml" SECTIONS="2.7 ">
    Invalid placement of CDATA section. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-106"
	URI="not-wf/sa/106.xml" SECTIONS="4.2">
    Invalid placement of entity declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-107"
	URI="not-wf/sa/107.xml" SECTIONS="2.8 [28]">
     Invalid document type declaration.  CDATA alone is invalid.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-108"
	URI="not-wf/sa/108.xml" SECTIONS="2.7 [19]">
    No space in '&lt;![CDATA['.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-109"
	URI="not-wf/sa/109.xml" SECTIONS="4.2 [70]">
    Tags invalid within EntityDecl. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-110"
	URI="not-wf/sa/110.xml" SECTIONS="4.1 [68]">
    Entity reference must be in content of element. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-111"
	URI="not-wf/sa/111.xml" SECTIONS="3.1 [43]">
    Entiry reference must be in content of element not Start-tag. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-112"
	URI="not-wf/sa/112.xml" SECTIONS="2.7 [19]">
    CDATA sections start '&lt;![CDATA[', not '&lt;!cdata['.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-113"
	URI="not-wf/sa/113.xml" SECTIONS="2.3 [9]">
    Parameter entity values must use valid reference syntax;
    this reference is malformed.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-114"
	URI="not-wf/sa/114.xml" SECTIONS="2.3 [9]">
    General entity values must use valid reference syntax;
    this reference is malformed.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-115"
	URI="not-wf/sa/115.xml" SECTIONS="4.5">
    The replacement text of this entity is an illegal character
    reference, which must be rejected when it is parsed in the
    context of an attribute value.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-116"
	URI="not-wf/sa/116.xml" SECTIONS="4.3.2">
    Internal general parsed entities are only well formed if
    they match the "content" production.  This is a partial
    character reference, not a full one. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-117"
	URI="not-wf/sa/117.xml" SECTIONS="4.3.2">
    Internal general parsed entities are only well formed if
    they match the "content" production.  This is a partial
    character reference, not a full one. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-118"
	URI="not-wf/sa/118.xml" SECTIONS="4.1 [68]">
    Entity reference expansion is not recursive.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-119"
	URI="not-wf/sa/119.xml" SECTIONS="4.3.2">
    Internal general parsed entities are only well formed if
    they match the "content" production.  This is a partial
    character reference, not a full one. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-120"
	URI="not-wf/sa/120.xml" SECTIONS="4.5">
    Character references are expanded in the replacement text of
    an internal entity, which is then parsed as usual.  Accordingly,
    &amp; must be doubly quoted - encoded either as <EM>&amp;amp;</EM>
    or as <EM>&amp;#38;#38;</EM>. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-121"
	URI="not-wf/sa/121.xml" SECTIONS="4.1 [68]">
    A name of an ENTITY was started with an invalid character. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-122"
	URI="not-wf/sa/122.xml" SECTIONS="3.2.1 [47]">
    Invalid syntax mixed connectors are used. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-123"
	URI="not-wf/sa/123.xml" SECTIONS="3.2.1 [48]">
    Invalid syntax mismatched parenthesis. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-124"
	URI="not-wf/sa/124.xml" SECTIONS="3.2.2 [51]">
    Invalid format of Mixed-content declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-125"
	URI="not-wf/sa/125.xml" SECTIONS="3.2.2 [51]">
    Invalid syntax extra set of parenthesis not necessary. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-126"
	URI="not-wf/sa/126.xml" SECTIONS="3.2.2 [51]">
    Invalid syntax Mixed-content must be defined as zero or more. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-127"
	URI="not-wf/sa/127.xml" SECTIONS="3.2.2 [51]">
    Invalid syntax Mixed-content must be defined as zero or more. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-128"
	URI="not-wf/sa/128.xml" SECTIONS="2.7 [18]">
    Invalid CDATA syntax. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-129"
	URI="not-wf/sa/129.xml" SECTIONS="3.2 [45]">
    Invalid syntax for Element Type Declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-130"
	URI="not-wf/sa/130.xml" SECTIONS="3.2 [45]">
    Invalid syntax for Element Type Declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-131"
	URI="not-wf/sa/131.xml" SECTIONS="3.2 [45]">
    Invalid syntax for Element Type Declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-132"
	URI="not-wf/sa/132.xml" SECTIONS="3.2.1 [50]">
    Invalid syntax mixed connectors used. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-133"
	URI="not-wf/sa/133.xml" SECTIONS="3.2.1">
    Illegal whitespace before optional character causes syntax error. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-134"
	URI="not-wf/sa/134.xml" SECTIONS="3.2.1">
    Illegal whitespace before optional character causes syntax error. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-135"
	URI="not-wf/sa/135.xml" SECTIONS="3.2.1 [47]">
    Invalid character used as connector. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-136"
	URI="not-wf/sa/136.xml" SECTIONS="3.2 [45]">
    Tag omission is invalid in XML. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-137"
	URI="not-wf/sa/137.xml" SECTIONS="3.2 [45]">
    Space is required before a content model. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-138"
	URI="not-wf/sa/138.xml" SECTIONS="3.2.1 [48]">
    Invalid syntax for content particle.  </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-139"
	URI="not-wf/sa/139.xml" SECTIONS="3.2.1 [46]">
    The element-content model should not be empty. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-140"
	URI="not-wf/sa/140.xml" SECTIONS="2.3 [4]"
        EDITION="1 2 3 4">
    Character '&amp;#x309a;' is a CombiningChar, not a
    Letter, and so may not begin a name.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-141"
	URI="not-wf/sa/141.xml" SECTIONS="2.3 [5]"
        EDITION="1 2 3 4">
    Character #x0E5C is not legal in XML names. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-142"
	URI="not-wf/sa/142.xml" SECTIONS="2.2 [2]">
    Character #x0000 is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-143"
	URI="not-wf/sa/143.xml" SECTIONS="2.2 [2]">
    Character #x001F is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-144"
	URI="not-wf/sa/144.xml" SECTIONS="2.2 [2]">
    Character #xFFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-145"
	URI="not-wf/sa/145.xml" SECTIONS="2.2 [2]">
    Character #xD800 is not legal anywhere in an XML document.  (If it
    appeared in a UTF-16 surrogate pair, it'd represent half of a UCS-4
    character and so wouldn't really be in the document.) </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-146"
	URI="not-wf/sa/146.xml" SECTIONS="2.2 [2]">
    Character references must also refer to legal XML characters;
    #x00110000 is one more than the largest legal character.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-147"
	URI="not-wf/sa/147.xml" SECTIONS="2.8 [22]">
    XML Declaration may not be preceded by whitespace.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-148"
	URI="not-wf/sa/148.xml" SECTIONS="2.8 [22]">
    XML Declaration may not be preceded by comments or whitespace.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-149"
	URI="not-wf/sa/149.xml" SECTIONS="2.8 [28]">
    XML Declaration may not be within a DTD.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-150"
	URI="not-wf/sa/150.xml" SECTIONS="3.1 [43]">
    XML declarations may not be within element content. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-151"
	URI="not-wf/sa/151.xml" SECTIONS="2.8 [27]">
    XML declarations may not follow document content.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-152"
	URI="not-wf/sa/152.xml" SECTIONS="2.8 [22]">
    XML declarations must include the "version=..." string.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-153"
	URI="not-wf/sa/153.xml" SECTIONS="4.3.2">
    Text declarations may not begin internal parsed entities;
    they may only appear at the beginning of external parsed
    (parameter or general) entities. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-154"
	URI="not-wf/sa/154.xml" SECTIONS="2.8 2.6 [23, 17]">
    '&lt;?XML ...?&gt;' is neither an XML declaration
    nor a legal processing instruction target name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-155"
	URI="not-wf/sa/155.xml" SECTIONS="2.8 2.6 [23, 17]">
    '&lt;?xmL ...?&gt;' is neither an XML declaration
    nor a legal processing instruction target name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-156"
	URI="not-wf/sa/156.xml" SECTIONS="2.8 2.6 [23, 17]">
    '&lt;?xMl ...?&gt;' is neither an XML declaration
    nor a legal processing instruction target name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-157"
	URI="not-wf/sa/157.xml" SECTIONS="2.6 [17]">
    '&lt;?xmL ...?&gt;' is not a legal processing instruction
    target name. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-158"
	URI="not-wf/sa/158.xml" SECTIONS="3.3 [52]">
    SGML-ism:  "#NOTATION gif" can't have attributes. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-159"
	URI="not-wf/sa/159.xml" SECTIONS="2.3 [9]">
    Uses '&amp;' unquoted in an entity declaration,
    which is illegal syntax for an entity reference.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-160"
	URI="not-wf/sa/160.xml" SECTIONS="2.8">
    Violates the <EM>PEs in Internal Subset</EM> WFC
    by using a PE reference within a declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-161"
	URI="not-wf/sa/161.xml" SECTIONS="2.8">
    Violates the <EM>PEs in Internal Subset</EM> WFC
    by using a PE reference within a declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-162"
	URI="not-wf/sa/162.xml" SECTIONS="2.8">
    Violates the <EM>PEs in Internal Subset</EM> WFC
    by using a PE reference within a declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-163"
	URI="not-wf/sa/163.xml" SECTIONS="4.1 [69]">
    Invalid placement of Parameter entity reference. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-164"
	URI="not-wf/sa/164.xml" SECTIONS="4.1 [69]">
    Invalid placement of Parameter entity reference. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-165"
	URI="not-wf/sa/165.xml" SECTIONS="4.2 [72]">
    Parameter entity declarations must have a space before
    the '%'. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-166"
	URI="not-wf/sa/166.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-167"
	URI="not-wf/sa/167.xml" SECTIONS="2.2 [2]">
    Character FFFE is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-168"
	URI="not-wf/sa/168.xml" SECTIONS="2.2 [2]">
    An unpaired surrogate (D800) is not legal anywhere
    in an XML document.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-169"
	URI="not-wf/sa/169.xml" SECTIONS="2.2 [2]">
    An unpaired surrogate (DC00) is not legal anywhere
    in an XML document.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-170"
	URI="not-wf/sa/170.xml" SECTIONS="2.2 [2]">
    Four byte UTF-8 encodings can encode UCS-4 characters
    which are beyond the range of legal XML characters
    (and can't be expressed in Unicode surrogate pairs).
    This document holds such a character.  </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-171"
	URI="not-wf/sa/171.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-172"
	URI="not-wf/sa/172.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-173"
	URI="not-wf/sa/173.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-174"
	URI="not-wf/sa/174.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-175"
	URI="not-wf/sa/175.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-176"
	URI="not-wf/sa/176.xml" SECTIONS="3 [39]">
    Start tags must have matching end tags.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-177"
	URI="not-wf/sa/177.xml" SECTIONS="2.2 [2]">
    Character FFFF is not legal anywhere in an XML document. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-178"
	URI="not-wf/sa/178.xml" SECTIONS="3.1 [41]">
    Invalid syntax matching double quote is missing. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-179"
	URI="not-wf/sa/179.xml" SECTIONS="4.1 [66]">
    Invalid syntax matching double quote is missing. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-180"
	URI="not-wf/sa/180.xml" SECTIONS="4.1">
    The <EM>Entity Declared</EM> WFC requires entities to be declared
    before they are used in an attribute list declaration. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-181"
	URI="not-wf/sa/181.xml" SECTIONS="4.3.2">
    Internal parsed entities must match the <EM>content</EM>
    production to be well formed. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-182"
	URI="not-wf/sa/182.xml" SECTIONS="4.3.2">
    Internal parsed entities must match the <EM>content</EM>
    production to be well formed. </TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-183"
	URI="not-wf/sa/183.xml" SECTIONS="3.2.2 [51]">
    Mixed content declarations may not include content particles.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-184"
	URI="not-wf/sa/184.xml" SECTIONS="3.2.2 [51]">
    In mixed content models, element names must not be
    parenthesized. </TEST>
<TEST TYPE="not-wf" ENTITIES="parameter" ID="not-wf-sa-185"
	URI="not-wf/sa/185.xml" SECTIONS="4.1">
    Tests the <EM>Entity Declared</EM> WFC.
    <EM>Note:</EM>  a nonvalidating parser is permitted not to report
    this WFC violation, since it would need to read an external
    parameter entity to distinguish it from a violation of
    the <EM>Standalone Declaration</EM> VC.</TEST>
<TEST TYPE="not-wf" ENTITIES="none" ID="not-wf-sa-186"
	URI="not-wf/sa/186.xml" SECTIONS="3.1 [44]">
    Whitespace is required between attribute/value pairs. </TEST>

<!-- Start:  not-wf/not-sa -->
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-001"
	URI="not-wf/not-sa/001.xml" SECTIONS="3.4 [62]">
    Conditional sections must be properly terminated ("]&gt;" used
    instead of "]]&gt;"). </TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-002"
	URI="not-wf/not-sa/002.xml" SECTIONS="2.6 [17]">
    Processing instruction target names may not be "XML" 
    in any combination of cases. </TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-003"
	URI="not-wf/not-sa/003.xml" SECTIONS="3.4 [62]">
    Conditional sections must be properly terminated ("]]&gt;" omitted). </TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-004"
	URI="not-wf/not-sa/004.xml" SECTIONS="3.4 [62]">
    Conditional sections must be properly terminated ("]]&gt;" omitted). </TEST>
<TEST TYPE="error" ENTITIES="both" ID="not-wf-not-sa-005"
	URI="not-wf/not-sa/005.xml" SECTIONS="4.1">
    Tests the <EM>Entity Declared</EM> VC by referring to an
    undefined parameter entity within an external entity.</TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-006"
	URI="not-wf/not-sa/006.xml" SECTIONS="3.4 [62]">
    Conditional sections need a '[' after the INCLUDE or IGNORE. </TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-007"
	URI="not-wf/not-sa/007.xml" SECTIONS="4.3.2 [79]">
    A &lt;!DOCTYPE ...&gt; declaration may not begin any external
    entity; it's only found once, in the document entity.</TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-008"
	URI="not-wf/not-sa/008.xml" SECTIONS="4.1 [69]">
    In DTDs, the '%' character must be part of a parameter
    entity reference.</TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-not-sa-009"
	URI="not-wf/not-sa/009.xml" SECTIONS="2.8">
    This test violates WFC:PE Between Declarations in Production 28a.  
    The last character of a markup declaration is not contained in the same 
    parameter-entity text replacement.</TEST>
<!-- Start:  not-wf/ext-sa -->
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-ext-sa-001"
	URI="not-wf/ext-sa/001.xml" SECTIONS="4.1">
    Tests the <EM>No Recursion</EM> WFC by having an external general
    entity be self-recursive.</TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-ext-sa-002"
	URI="not-wf/ext-sa/002.xml" SECTIONS="4.3.1 4.3.2 [77, 78]">
    External entities have "text declarations", which do
    not permit the "standalone=..." attribute that's allowed
    in XML declarations.</TEST>
<TEST TYPE="not-wf" ENTITIES="both" ID="not-wf-ext-sa-003"
	URI="not-wf/ext-sa/003.xml" SECTIONS="2.6 [17]">
    Only one text declaration is permitted; a second one
    looks like an illegal processing instruction (target names
    of "xml" in any case are not allowed). </TEST>


<!-- Start:  invalid/ -->

<TEST TYPE="invalid" ENTITIES="both" ID="invalid--002"
	URI="invalid/002.xml" SECTIONS="3.2.1">
    Tests the "Proper Group/PE Nesting" validity constraint by
    fragmenting a content model between two parameter entities.</TEST>
<TEST TYPE="invalid" ENTITIES="both" ID="invalid--005"
	URI="invalid/005.xml" SECTIONS="2.8">
    Tests the "Proper Declaration/PE Nesting" validity constraint by
    fragmenting an element declaration between two parameter entities.</TEST>
<TEST TYPE="invalid" ENTITIES="both" ID="invalid--006"
	URI="invalid/006.xml" SECTIONS="2.8">
    Tests the "Proper Declaration/PE Nesting" validity constraint by
    fragmenting an element declaration between two parameter entities.</TEST>
<TEST TYPE="invalid" ENTITIES="both" ID="invalid-not-sa-022"
	URI="invalid/not-sa/022.xml" SECTIONS="3.4 [62]"
	OUTPUT="invalid/not-sa/out/022.xml">
    Test the "Proper Conditional Section/ PE Nesting" validity constraint. </TEST>

<!-- Start:  valid/sa -->
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-001"
	URI="valid/sa/001.xml" SECTIONS="3.2.2 [51]"
	OUTPUT="valid/sa/out/001.xml">
    Test demonstrates an Element Type Declaration with Mixed Content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-002"
	URI="valid/sa/002.xml" SECTIONS="3.1 [40]"
	OUTPUT="valid/sa/out/002.xml">
    Test demonstrates that whitespace is permitted after the tag name in a Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-003"
	URI="valid/sa/003.xml" SECTIONS="3.1 [42]"
	OUTPUT="valid/sa/out/003.xml">
    Test demonstrates that whitespace is permitted after the tag name in an End-tag.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-004"
	URI="valid/sa/004.xml" SECTIONS="3.1 [41]"
	OUTPUT="valid/sa/out/004.xml">
    Test demonstrates a valid attribute specification within a Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-005"
	URI="valid/sa/005.xml" SECTIONS="3.1 [40]"
	OUTPUT="valid/sa/out/005.xml">
    Test demonstrates a valid attribute specification within a Start-tag that
contains whitespace on both sides of the equal sign. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-006"
	URI="valid/sa/006.xml" SECTIONS="3.1 [41]"
	OUTPUT="valid/sa/out/006.xml">
    Test demonstrates that the AttValue within a Start-tag can use a single quote as a delimter. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-007"
	URI="valid/sa/007.xml" SECTIONS="3.1 4.6 [43]"
	OUTPUT="valid/sa/out/007.xml">
    Test demonstrates numeric character references can be used for element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-008"
	URI="valid/sa/008.xml" SECTIONS="2.4 3.1 [43]"
	OUTPUT="valid/sa/out/008.xml">
    Test demonstrates character references can be used for element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-009"
	URI="valid/sa/009.xml" SECTIONS="2.3 3.1 [43]"
	OUTPUT="valid/sa/out/009.xml">
    Test demonstrates that PubidChar can be used for element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-010"
	URI="valid/sa/010.xml" SECTIONS="3.1 [40]"
	OUTPUT="valid/sa/out/010.xml">
    Test demonstrates that whitespace is valid after the Attribute in a Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-011"
	URI="valid/sa/011.xml" SECTIONS="3.1 [40]"
	OUTPUT="valid/sa/out/011.xml">
    Test demonstrates mutliple Attibutes within the Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-012"
	URI="valid/sa/012.xml" SECTIONS="2.3 [4]"
	OUTPUT="valid/sa/out/012.xml" NAMESPACE="no">
    Uses a legal XML 1.0 name consisting of a single colon
    character (disallowed by the latest XML Namespaces draft).</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-013"
	URI="valid/sa/013.xml" SECTIONS="2.3 3.1 [13] [40]"
	OUTPUT="valid/sa/out/013.xml">
    Test demonstrates that the Attribute in a Start-tag can consist of numerals along with special characters. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-014"
	URI="valid/sa/014.xml" SECTIONS="2.3 3.1 [13] [40]"
	OUTPUT="valid/sa/out/014.xml">
    Test demonstrates that all lower case letters are valid for the Attribute in a Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-015"
	URI="valid/sa/015.xml" SECTIONS="2.3 3.1 [13] [40]"
	OUTPUT="valid/sa/out/015.xml">
    Test demonstrates that all upper case letters are valid for the Attribute in a Start-tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-016"
	URI="valid/sa/016.xml" SECTIONS="2.6 3.1 [16] [43]"
	OUTPUT="valid/sa/out/016.xml">
    Test demonstrates that Processing Instructions are valid element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-017"
	URI="valid/sa/017.xml" SECTIONS="2.6 3.1 [16] [43]"
	OUTPUT="valid/sa/out/017.xml">
    Test demonstrates that Processing Instructions are valid element content and there can be more than one. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-018"
	URI="valid/sa/018.xml" SECTIONS="2.7 3.1 [18] [43]"
	OUTPUT="valid/sa/out/018.xml">
    Test demonstrates that CDATA sections are valid element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-019"
	URI="valid/sa/019.xml" SECTIONS="2.7 3.1 [18] [43]"
	OUTPUT="valid/sa/out/019.xml">
    Test demonstrates that CDATA sections are valid element content and that
ampersands may occur in their literal form. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-020"
	URI="valid/sa/020.xml" SECTIONS="2.7 3.1 [18] [43]"
	OUTPUT="valid/sa/out/020.xml">
   Test demonstractes that CDATA sections are valid element content and that
everyting between the CDStart and CDEnd is recognized as character data not markup.  </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-021"
	URI="valid/sa/021.xml" SECTIONS="2.5 3.1 [15] [43]"
	OUTPUT="valid/sa/out/021.xml">
    Test demonstrates that comments are valid element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-022"
	URI="valid/sa/022.xml" SECTIONS="2.5 3.1 [15] [43]"
	OUTPUT="valid/sa/out/022.xml">
    Test demonstrates that comments are valid element content and that all characters before the double-hypen right angle combination are considered part of thecomment. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-023"
	URI="valid/sa/023.xml" SECTIONS="3.1 [43]"
	OUTPUT="valid/sa/out/023.xml">
    Test demonstrates that Entity References are valid element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-024"
	URI="valid/sa/024.xml" SECTIONS="3.1 4.1 [43] [66]"
	OUTPUT="valid/sa/out/024.xml">
    Test demonstrates that Entity References are valid element content and also demonstrates a valid Entity Declaration. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-025"
	URI="valid/sa/025.xml" SECTIONS="3.2 [46]"
	OUTPUT="valid/sa/out/025.xml">
    Test demonstrates an Element Type Declaration and that the contentspec can be of mixed content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-026"
	URI="valid/sa/026.xml" SECTIONS="3.2 [46]"
	OUTPUT="valid/sa/out/026.xml">
    Test demonstrates an Element Type Declaration and that EMPTY is a valid contentspec. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-027"
	URI="valid/sa/027.xml" SECTIONS="3.2 [46]"
	OUTPUT="valid/sa/out/027.xml">
    Test demonstrates an Element Type Declaration and that ANY is a valid contenspec. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-028"
	URI="valid/sa/028.xml" SECTIONS="2.8 [24]"
	OUTPUT="valid/sa/out/028.xml">
    Test demonstrates a valid prolog that uses double quotes as delimeters around the VersionNum. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-029"
	URI="valid/sa/029.xml" SECTIONS="2.8 [24]"
	OUTPUT="valid/sa/out/029.xml">
    Test demonstrates a valid prolog that uses single quotes as delimters around the VersionNum. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-030"
	URI="valid/sa/030.xml" SECTIONS="2.8 [25]"
	OUTPUT="valid/sa/out/030.xml">
    Test demonstrates a valid prolog that contains whitespace on both sides of the equal sign in the VersionInfo. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-031"
	URI="valid/sa/031.xml" SECTIONS="4.3.3 [80]"
	OUTPUT="valid/sa/out/031.xml">
    Test demonstrates a valid EncodingDecl within the prolog. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-032"
	URI="valid/sa/032.xml" SECTIONS="2.9 [32]"
	OUTPUT="valid/sa/out/032.xml">
    Test demonstrates a valid SDDecl within the prolog. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-033"
	URI="valid/sa/033.xml" SECTIONS="2.8 [23]"
	OUTPUT="valid/sa/out/033.xml">
    Test demonstrates that both a EncodingDecl and SDDecl are valid within the prolog. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-034"
	URI="valid/sa/034.xml" SECTIONS="3.1 [44]"
	OUTPUT="valid/sa/out/034.xml">
    Test demonstrates the correct syntax for an Empty element tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-035"
	URI="valid/sa/035.xml" SECTIONS="3.1 [44]"
	OUTPUT="valid/sa/out/035.xml">
    Test demonstrates that whitespace is permissible after the name in an Empty element tag. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-036"
	URI="valid/sa/036.xml" SECTIONS="2.6 [16]"
	OUTPUT="valid/sa/out/036.xml">
    Test demonstrates a valid processing instruction. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-037"
	URI="valid/sa/037.xml" SECTIONS="2.6 [15]"
	OUTPUT="valid/sa/out/037.xml">
    Test demonstrates a valid comment and that it may appear anywhere in the document including at the end. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-038"
	URI="valid/sa/038.xml" SECTIONS="2.6 [15]"
	OUTPUT="valid/sa/out/038.xml">
    Test demonstrates a valid comment and that it may appear anywhere in the document including the beginning. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-039"
	URI="valid/sa/039.xml" SECTIONS="2.6 [16]"
	OUTPUT="valid/sa/out/039.xml">
    Test demonstrates a valid processing instruction and that it may appear at the beginning of the document. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-040"
	URI="valid/sa/040.xml" SECTIONS="3.3 3.3.1 [52] [54]"
	OUTPUT="valid/sa/out/040.xml">
    Test demonstrates an Attribute List declaration that uses a StringType as the AttType. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-041"
	URI="valid/sa/041.xml" SECTIONS="3.3.1 4.1 [54] [66]"
	OUTPUT="valid/sa/out/041.xml">
    Test demonstrates an Attribute List declaration that uses a StringType as the AttType and also expands the CDATA attribute with a character reference. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-042"
	URI="valid/sa/042.xml" SECTIONS="3.3.1 4.1 [54] [66]"
	OUTPUT="valid/sa/out/042.xml">
    Test demonstrates an Attribute List declaration that uses a StringType as the AttType and also expands the CDATA attribute with a character reference.  The test also shows that the leading zeros in the character reference are ignored. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-043"
	URI="valid/sa/043.xml" SECTIONS="3.3"
	OUTPUT="valid/sa/out/043.xml">
    An element's attributes may be declared before its content
    model; and attribute values may contain newlines.  </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-044"
	URI="valid/sa/044.xml" SECTIONS="3.1 [44]"
	OUTPUT="valid/sa/out/044.xml">
    Test demonstrates that the empty-element tag must be use for an elements that are declared EMPTY. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-045"
	URI="valid/sa/045.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/sa/out/045.xml">
    Tests whether more than one definition can be provided for the same attribute of a given element type with the first declaration being binding. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-046"
	URI="valid/sa/046.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/sa/out/046.xml">
    Test demonstrates that when more than one AttlistDecl is provided for a given element type, the contents of all those provided are merged. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-047"
	URI="valid/sa/047.xml" SECTIONS="3.1 [43]"
	OUTPUT="valid/sa/out/047.xml">
    Test demonstrates that extra whitespace is normalized into single space character. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-048"
	URI="valid/sa/048.xml" SECTIONS="2.4 3.1 [14] [43]"
	OUTPUT="valid/sa/out/048.xml">
    Test demonstrates that character data is valid element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-049"
	URI="valid/sa/049.xml" SECTIONS="2.2 [2]"
	OUTPUT="valid/sa/out/049.xml">
    Test demonstrates that characters outside of normal ascii range can be used as element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-050"
	URI="valid/sa/050.xml" SECTIONS="2.2 [2]"
	OUTPUT="valid/sa/out/050.xml">
    Test demonstrates that characters outside of normal ascii range can be used as element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-051"
	URI="valid/sa/051.xml" SECTIONS="2.2 [2]"
	OUTPUT="valid/sa/out/051.xml">
    The document is encoded in UTF-16 and uses some name
    characters well outside of the normal ASCII range.
    </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-052"
	URI="valid/sa/052.xml" SECTIONS="2.2 [2]"
	OUTPUT="valid/sa/out/052.xml">
    The document is encoded in UTF-8 and the text inside the
    root element uses two non-ASCII characters, encoded in UTF-8
    and each of which expands to a Unicode surrogate pair.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-053"
	URI="valid/sa/053.xml" SECTIONS="4.4.2"
	OUTPUT="valid/sa/out/053.xml">
    Tests inclusion of a well-formed internal entity, which
    holds an element required by the content model.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-054"
	URI="valid/sa/054.xml" SECTIONS="3.1 [40] [42]"
	OUTPUT="valid/sa/out/054.xml">
    Test demonstrates that extra whitespace within Start-tags and End-tags are nomalized into single spaces. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-055"
	URI="valid/sa/055.xml" SECTIONS="2.6 2.10 [16]"
	OUTPUT="valid/sa/out/055.xml">
    Test demonstrates that extra whitespace within a processing instruction willnormalized into s single space character. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-056"
	URI="valid/sa/056.xml" SECTIONS="3.3.1 4.1 [54] [66]"
	OUTPUT="valid/sa/out/056.xml">
    Test demonstrates an Attribute List declaration that uses a StringType as the AttType and also expands the CDATA attribute with a character reference.  The test also shows that the leading zeros in the character reference are ignored. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-057"
	URI="valid/sa/057.xml" SECTIONS="3.2.1 [47]"
	OUTPUT="valid/sa/out/057.xml">
    Test demonstrates an element content model whose element can occur zero or more times. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-058"
	URI="valid/sa/058.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/058.xml">
    Test demonstrates that extra whitespace be normalized into a single space character in an attribute of type NMTOKENS. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-059"
	URI="valid/sa/059.xml" SECTIONS="3.2 3.3 [46] [53]"
	OUTPUT="valid/sa/out/059.xml">
    Test demonstrates an Element Type Declaration that uses the contentspec of EMPTY.  The element cannot have any contents and must always appear as an empty element in the document.  The test also shows an Attribute-list declaration with multiple AttDef's. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-060"
	URI="valid/sa/060.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/060.xml">
    Test demonstrates the use of decimal Character References within element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-061"
	URI="valid/sa/061.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/061.xml">
    Test demonstrates the use of decimal Character References within element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-062"
	URI="valid/sa/062.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/062.xml">
    Test demonstrates the use of hexadecimal Character References within element.  </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-063"
	URI="valid/sa/063.xml" SECTIONS="2.3 [5]"
	OUTPUT="valid/sa/out/063.xml">
    The document is encoded in UTF-8 and the name of the
    root element type uses non-ASCII characters.  </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-064"
	URI="valid/sa/064.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/064.xml">
    Tests in-line handling of two legal character references, which
    each expand to a Unicode surrogate pair.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-065"
	URI="valid/sa/065.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/065.xml">
    Tests ability to define an internal entity which can't
    legally be expanded (contains an unquoted <B>&lt;</B>).</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-066"
	URI="valid/sa/066.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/066.xml">
    Expands a CDATA attribute with a character reference.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-067"
	URI="valid/sa/067.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/067.xml">
    Test demonstrates the use of decimal character references within element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-068"
	URI="valid/sa/068.xml" SECTIONS="2.11, 4.5"
	OUTPUT="valid/sa/out/068.xml">
    Tests definition of an internal entity holding a carriage return character
    reference, which must not be normalized before reporting to the application.  Line 
    break normalization only occurs when parsing external parsed entities.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-069"
	URI="valid/sa/069.xml" SECTIONS="4.7"
	OUTPUT="valid/sa/out/069.xml">
    Verifies that an XML parser will parse a NOTATION
    declaration; the output phase of this test ensures that
    it's reported to the application. </TEST>
<TEST TYPE="valid" ENTITIES="parameter" ID="valid-sa-070"
	URI="valid/sa/070.xml" SECTIONS="4.4.8"
	OUTPUT="valid/sa/out/070.xml">
    Verifies that internal parameter entities are correctly
    expanded within the internal subset.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-071"
	URI="valid/sa/071.xml" SECTIONS="3.3 3.3.1 [52] [56]"
	OUTPUT="valid/sa/out/071.xml">
    Test demonstrates that an AttlistDecl can use ID as the TokenizedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-072"
	URI="valid/sa/072.xml" SECTIONS="3.3 3.3.1 [52] [56]"
	OUTPUT="valid/sa/out/072.xml">
    Test demonstrates that an AttlistDecl can use IDREF as the TokenizedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-073"
	URI="valid/sa/073.xml" SECTIONS="3.3 3.3.1 [52] [56]"
	OUTPUT="valid/sa/out/073.xml">
    Test demonstrates that an AttlistDecl can use IDREFS as the TokenizedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-074"
	URI="valid/sa/074.xml" SECTIONS="3.3 3.3.1 [52] [56]"
	OUTPUT="valid/sa/out/074.xml">
    Test demonstrates that an AttlistDecl can use ENTITY as the TokenizedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-075"
	URI="valid/sa/075.xml" SECTIONS="3.3 3.3.1 [52] [56]"
	OUTPUT="valid/sa/out/075.xml">
    Test demonstrates that an AttlistDecl can use ENTITIES as the TokenizedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-076"
	URI="valid/sa/076.xml" SECTIONS="3.3.1"
	OUTPUT="valid/sa/out/076.xml">
    Verifies that an XML parser will parse a NOTATION
    attribute; the output phase of this test ensures that
    both notations are reported to the application. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-077"
	URI="valid/sa/077.xml" SECTIONS="3.3 3.3.1 [52] [54]"
	OUTPUT="valid/sa/out/077.xml">
    Test demonstrates that an AttlistDecl can use an EnumeratedType within the Attribute type.  The test also shows that IMPLIED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-078"
	URI="valid/sa/078.xml" SECTIONS="3.3 3.3.1 [52] [54]"
	OUTPUT="valid/sa/out/078.xml">
    Test demonstrates that an AttlistDecl can use an StringType of CDATA within the Attribute type.  The test also shows that REQUIRED is a valid DefaultDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-079"
	URI="valid/sa/079.xml" SECTIONS="3.3 3.3.2 [52] [60]"
	OUTPUT="valid/sa/out/079.xml">
    Test demonstrates that an AttlistDecl can use an StringType of CDATA within the Attribute type.  The test also shows that FIXED is a valid DefaultDecl and that a value can be given to the attribute in the Start-tag as well as the AttListDecl. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-080"
	URI="valid/sa/080.xml" SECTIONS="3.3 3.3.2 [52] [60]"
	OUTPUT="valid/sa/out/080.xml">
    Test demonstrates that an AttlistDecl can use an StringType of CDATA within the Attribute type.  The test also shows that FIXED is a valid DefaultDecl and that an value can be given to the attribute. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-081"
	URI="valid/sa/081.xml" SECTIONS="3.2.1 [50]"
	OUTPUT="valid/sa/out/081.xml">
    Test demonstrates the use of the optional character following a name or list  to govern the number of times an element or content particles in the list occur. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-082"
	URI="valid/sa/082.xml" SECTIONS="4.2 [72]"
	OUTPUT="valid/sa/out/082.xml">
    Tests that an external PE may be defined (but not referenced).</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-083"
	URI="valid/sa/083.xml" SECTIONS="4.2 [72]"
	OUTPUT="valid/sa/out/083.xml">
    Tests that an external PE may be defined (but not referenced).</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-084"
	URI="valid/sa/084.xml" SECTIONS="2.10"
	OUTPUT="valid/sa/out/084.xml">
    Test demonstrates that although whitespace can be used to set apart markup for greater readability it is not necessary. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-085"
	URI="valid/sa/085.xml" SECTIONS="4"
	OUTPUT="valid/sa/out/085.xml">
    Parameter and General entities use different namespaces,
    so there can be an entity of each type with a given name.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-086"
	URI="valid/sa/086.xml" SECTIONS="4.2"
	OUTPUT="valid/sa/out/086.xml">
    Tests whether entities may be declared more than once,
    with the first declaration being the binding one. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-087"
	URI="valid/sa/087.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/087.xml">
    Tests whether character references in internal entities are
    expanded early enough, by relying on correct handling to
    make the entity be well formed.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-088"
	URI="valid/sa/088.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/088.xml">
    Tests whether entity references in internal entities are
    expanded late enough, by relying on correct handling to
    make the expanded text be valid.  (If it's expanded too
    early, the entity will parse as an element that's not
    valid in that context.)</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-089"
	URI="valid/sa/089.xml" SECTIONS="4.1 [66]"
	OUTPUT="valid/sa/out/089.xml">
    Tests entity expansion of three legal character references,
    which each expand to a Unicode surrogate pair.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-090"
	URI="valid/sa/090.xml" SECTIONS="3.3.1"
	OUTPUT="valid/sa/out/090.xml">
    Verifies that an XML parser will parse a NOTATION
    attribute; the output phase of this test ensures that
    the notation is reported to the application. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-091"
	URI="valid/sa/091.xml" SECTIONS="3.3.1"
	OUTPUT="valid/sa/out/091.xml">
    Verifies that an XML parser will parse an ENTITY
    attribute; the output phase of this test ensures that
    the notation is reported to the application, and for
    validating parsers it further tests that the entity
    is so reported.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-092"
	URI="valid/sa/092.xml" SECTIONS="2.3 2.10"
	OUTPUT="valid/sa/out/092.xml">
    Test demostrates that extra whitespace is normalized into a single space character. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-093"
	URI="valid/sa/093.xml" SECTIONS="2.10"
	OUTPUT="valid/sa/out/093.xml">
    Test demonstrates that extra whitespace is not intended for inclusion in the delivered version of the document. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-094"
	OUTPUT="valid/sa/out/094.xml"
	URI="valid/sa/094.xml" SECTIONS="2.8">
    Attribute defaults with a DTD have special parsing rules, different
    from other strings.  That means that characters found there may look
    like an undefined parameter entity reference "within a markup
    declaration", but they aren't ... so they can't be violating
    the <EM>PEs in Internal Subset</EM> WFC. 
    </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-095"
	URI="valid/sa/095.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/095.xml">
    Basically an output test, this requires extra whitespace
    to be normalized into a single space character in an
    attribute of type NMTOKENS.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-096"
	URI="valid/sa/096.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/096.xml">
    Test demonstrates that extra whitespace is normalized into a single space character in an attribute of type NMTOKENS. </TEST>
<TEST TYPE="valid" ENTITIES="parameter" ID="valid-sa-097"
	URI="valid/sa/097.xml" SECTIONS="3.3"
	OUTPUT="valid/sa/out/097.xml">
    Basically an output test, this tests whether an externally
    defined attribute declaration (with a default) takes proper
    precedence over a subsequent internal declaration.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-098"
	URI="valid/sa/098.xml" SECTIONS="2.6 2.10 [16]"
	OUTPUT="valid/sa/out/098.xml">
    Test demonstrates that extra whitespace within a processing instruction is converted into a single space character.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-099"
	URI="valid/sa/099.xml" SECTIONS="4.3.3 [81]"
	OUTPUT="valid/sa/out/099.xml">
    Test demonstrates the name of the encoding can be composed of lowercase characters. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-100"
	URI="valid/sa/100.xml" SECTIONS="2.3 [12]"
	OUTPUT="valid/sa/out/100.xml">
    Makes sure that PUBLIC identifiers may have some strange
    characters.  <EM>NOTE:  The XML editors have said that the XML
    specification errata will specify that parameter entity expansion
    does not occur in PUBLIC identifiers, so that the '%' character
    will not flag a malformed parameter entity reference.</EM></TEST> 
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-101"
	URI="valid/sa/101.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/101.xml">
    This tests whether entity expansion is (incorrectly) done
    while processing entity declarations; if it is, the entity
    value literal will terminate prematurely.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-102"
	URI="valid/sa/102.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/102.xml">
    Test demonstrates that a CDATA attribute can pass a double quote as its value. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-103"
	URI="valid/sa/103.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/103.xml">
    Test demonstrates that an attribute can pass a less than sign as its value. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-104"
	URI="valid/sa/104.xml" SECTIONS="3.1 [40]"
	OUTPUT="valid/sa/out/104.xml">
    Test demonstrates that extra whitespace within an Attribute of a Start-tag is normalized to a single space character. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-105"
	URI="valid/sa/105.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/105.xml">
    Basically an output test, this requires a CDATA attribute
    with a tab character to be passed through as one space.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-106"
	URI="valid/sa/106.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/106.xml">
    Basically an output test, this requires a CDATA attribute
    with a newline character to be passed through as one space.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-107"
	URI="valid/sa/107.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/107.xml">
    Basically an output test, this requires a CDATA attribute
    with a return character to be passed through as one space.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-108"
	URI="valid/sa/108.xml" SECTIONS="2.11, 3.3.3"
	OUTPUT="valid/sa/out/108.xml">
    This tests normalization of end-of-line characters (CRLF)
    within entities to LF, primarily as an output test. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-109"
	URI="valid/sa/109.xml" SECTIONS="2.3 3.1 [10][40][41]"
	OUTPUT="valid/sa/out/109.xml">
    Test demonstrates that an attribute can have a null value. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-110"
	URI="valid/sa/110.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/110.xml">
    Basically an output test, this requires that a CDATA
    attribute with a CRLF be normalized to one space.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-111"
	URI="valid/sa/111.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/111.xml">
    Character references expanding to spaces doesn't affect
    treatment of attributes. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-112"
	URI="valid/sa/112.xml" SECTIONS="3.2.1 [48][49]"
	OUTPUT="valid/sa/out/112.xml">
    Test demonstrates shows the use of content particles within the element content. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-113"
	URI="valid/sa/113.xml" SECTIONS="3.3 [52][53]"
	OUTPUT="valid/sa/out/113.xml">
     Test demonstrates that it is not an error to have attributes declared for an element not itself declared.</TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-114"
	URI="valid/sa/114.xml" SECTIONS="2.7 [20]"
	OUTPUT="valid/sa/out/114.xml">
    Test demonstrates that all text within a valid CDATA section is considered text and not recognized as markup. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-115"
	URI="valid/sa/115.xml" SECTIONS="3.3.3"
	OUTPUT="valid/sa/out/115.xml">
    Test demonstrates that an entity reference is processed by recursively processing the replacement text of the entity. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-116"
	URI="valid/sa/116.xml" SECTIONS="2.11"
	OUTPUT="valid/sa/out/116.xml">
    Test demonstrates that a line break within CDATA will be normalized. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-117"
	URI="valid/sa/117.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/117.xml">
    Test demonstrates that entity expansion is done while processing entity declarations.  </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-118"
	URI="valid/sa/118.xml" SECTIONS="4.5"
	OUTPUT="valid/sa/out/118.xml">
    Test demonstrates that entity expansion is done while processing entity declarations. </TEST>
<TEST TYPE="valid" ENTITIES="none" ID="valid-sa-119"
	URI="valid/sa/119.xml" SECTIONS="2.5"
	OUTPUT="valid/sa/out/119.xml">
    Comments may contain any legal XML characters;
    only the string "--" is disallowed.</TEST>


<!-- Start:  valid/not-sa -->
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-001"
	URI="valid/not-sa/001.xml" SECTIONS="4.2.2 [75]"
	OUTPUT="valid/not-sa/out/001.xml">
    Test demonstrates the use of an ExternalID within a document type definition. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-002"
	URI="valid/not-sa/002.xml" SECTIONS="4.2.2 [75]"
	OUTPUT="valid/not-sa/out/002.xml">
    Test demonstrates the use of an ExternalID within a document type definition. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-003"
	URI="valid/not-sa/003.xml" SECTIONS="4.1 [69]"
	OUTPUT="valid/not-sa/out/003.xml">
    Test demonstrates the expansion of an external parameter entity that declares an attribute. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-004"
	URI="valid/not-sa/004.xml" SECTIONS="4.1 [69]"
	OUTPUT="valid/not-sa/out/004.xml">
    Expands an external parameter entity in two different ways,
    with one of them declaring an attribute.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-005"
	URI="valid/not-sa/005.xml" SECTIONS="4.1 [69]"
	OUTPUT="valid/not-sa/out/005.xml">
    Test demonstrates the expansion of an external parameter entity that declares an attribute. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-006"
	URI="valid/not-sa/006.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/not-sa/out/006.xml">
    Test demonstrates that when more than one definition is provided for the same attribute of a given element type only the first declaration is binding. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-007"
	URI="valid/not-sa/007.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/not-sa/out/007.xml">
    Test demonstrates the use of an Attribute list declaration within an external entity. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-008"
	URI="valid/not-sa/008.xml" SECTIONS="4.2.2 [75]"
	OUTPUT="valid/not-sa/out/008.xml">
    Test demonstrates that an external identifier may include a public identifier. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-009"
	URI="valid/not-sa/009.xml" SECTIONS="4.2.2 [75]"
	OUTPUT="valid/not-sa/out/009.xml">
    Test demonstrates that an external identifier may include a public identifier. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-010"
	URI="valid/not-sa/010.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/not-sa/out/010.xml">
    Test demonstrates that when more that one definition is provided for the same attribute of a given element type only the first declaration is binding. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-011"
	URI="valid/not-sa/011.xml" SECTIONS="4.2 4.2.1 [72] [75]"
	OUTPUT="valid/not-sa/out/011.xml">
    Test demonstrates a parameter entity declaration whose parameter entity definition is an ExternalID. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-012"
	URI="valid/not-sa/012.xml" SECTIONS="4.3.1 [77]"
	OUTPUT="valid/not-sa/out/012.xml">
    Test demonstrates an enternal parsed entity that begins with a text declaration. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-013"
	URI="valid/not-sa/013.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/013.xml">
    Test demonstrates the use of the conditional section INCLUDE that will include its contents as part of the DTD. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-014"
	URI="valid/not-sa/014.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/014.xml">
    Test demonstrates the use of the conditional section INCLUDE that will include its contents as part of the DTD.  The keyword is a parameter-entity reference. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-015"
	URI="valid/not-sa/015.xml" SECTIONS="3.4 [63]"
	OUTPUT="valid/not-sa/out/015.xml">
    Test demonstrates the use of the conditonal section IGNORE the will ignore its content from being part of the DTD.  The keyword is a parameter-entity reference. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-016"
	URI="valid/not-sa/016.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/016.xml">
    Test demonstrates the use of the conditional section INCLUDE that will include its contents as part of the DTD.  The keyword is a parameter-entity reference.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-017"
	URI="valid/not-sa/017.xml" SECTIONS="4.2 [72]"
	OUTPUT="valid/not-sa/out/017.xml">
    Test demonstrates a parameter entity declaration that contains an attribute list declaration. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-018"
	URI="valid/not-sa/018.xml" SECTIONS="4.2.2 [75]"
	OUTPUT="valid/not-sa/out/018.xml">
    Test demonstrates an EnternalID whose contents contain an parameter entity declaration and a attribute list definition. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-019"
	URI="valid/not-sa/019.xml" SECTIONS="4.4.8"
	OUTPUT="valid/not-sa/out/019.xml">
    Test demonstrates that a parameter entity will be expanded with spaces on either side. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-020"
	URI="valid/not-sa/020.xml" SECTIONS="4.4.8"
	OUTPUT="valid/not-sa/out/020.xml">
    Parameter entities expand with spaces on either side.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-021"
	URI="valid/not-sa/021.xml" SECTIONS="4.2 [72]"
	OUTPUT="valid/not-sa/out/021.xml">
    Test demonstrates a parameter entity declaration that contains a partial attribute list declaration. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-023"
	URI="valid/not-sa/023.xml" SECTIONS="2.3 4.1 [10] [69]"
	OUTPUT="valid/not-sa/out/023.xml">
    Test demonstrates the use of a parameter entity reference within an attribute list declaration.
</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-024"
	URI="valid/not-sa/024.xml" SECTIONS="2.8, 4.1 [69]"
	OUTPUT="valid/not-sa/out/024.xml">
    Constructs an &lt;!ATTLIST...&gt; declaration from several PEs.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-025"
	URI="valid/not-sa/025.xml" SECTIONS="4.2"
	OUTPUT="valid/not-sa/out/025.xml">
    Test demonstrates that when more that one definition is provided for the same entity only the first declaration is binding. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-026"
	URI="valid/not-sa/026.xml" SECTIONS="3.3 [52]"
	OUTPUT="valid/not-sa/out/026.xml">
    Test demonstrates that when more that one definition is provided for the same attribute of a given element type only the first declaration is binding. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-027"
	URI="valid/not-sa/027.xml" SECTIONS="4.1 [69]"
	OUTPUT="valid/not-sa/out/027.xml">
    Test demonstrates a parameter entity reference whose value is NULL. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-028"
	URI="valid/not-sa/028.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/028.xml">
    Test demonstrates the use of the conditional section INCLUDE that will include its contents. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-029"
	URI="valid/not-sa/029.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/029.xml">
    Test demonstrates the use of the conditonal section IGNORE the will ignore its content from being used. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-030"
	URI="valid/not-sa/030.xml" SECTIONS="3.4 [62]"
	OUTPUT="valid/not-sa/out/030.xml">
    Test demonstrates the use of the conditonal section IGNORE the will ignore its content from being used. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-not-sa-031"
	URI="valid/not-sa/031.xml" SECTIONS="2.7"
	OUTPUT="valid/not-sa/out/031.xml">
    Expands a general entity which contains a CDATA section with
    what looks like a markup declaration (but is just text since
    it's in a CDATA section).</TEST>


<!-- Start:  valid/ext-sa -->
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-001"
	URI="valid/ext-sa/001.xml" SECTIONS="2.11"
	OUTPUT="valid/ext-sa/out/001.xml">
    A combination of carriage return line feed in an external entity must
    be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-002"
	URI="valid/ext-sa/002.xml" SECTIONS="2.11"
	OUTPUT="valid/ext-sa/out/002.xml">
    A carriage return (also CRLF) in an external entity must
    be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-003"
	URI="valid/ext-sa/003.xml" SECTIONS="3.1 4.1 [43] [68]"
	OUTPUT="valid/ext-sa/out/003.xml">
    Test demonstrates that the content of an element can be empty. In this case the external entity is an empty file. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-004"
	URI="valid/ext-sa/004.xml" SECTIONS="2.11"
	OUTPUT="valid/ext-sa/out/004.xml">
    A carriage return (also CRLF) in an external entity must
    be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-005"
	URI="valid/ext-sa/005.xml" SECTIONS="3.2.1 4.2.2 [48] [75]"
	OUTPUT="valid/ext-sa/out/005.xml">
    Test demonstrates the use of optional character and content particles within an element content.  The test also show the use of external entity. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-006"
	URI="valid/ext-sa/006.xml" SECTIONS="2.11 3.2.1 3.2.2 4.2.2 [48] [51] [75]"
	OUTPUT="valid/ext-sa/out/006.xml">
    Test demonstrates the use of optional character and content particles within mixed element content.  The test also shows the use of an external entity and that a carriage control line feed in an external entity must be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-007"
	URI="valid/ext-sa/007.xml" SECTIONS="4.2.2 4.4.3 [75]"
	OUTPUT="valid/ext-sa/out/007.xml">
    Test demonstrates the use of external entity and how replacement 
text is retrieved and processed. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-008"
	URI="valid/ext-sa/008.xml" SECTIONS="4.2.2 4.3.3. 4.4.3 [75] [80]"
	OUTPUT="valid/ext-sa/out/008.xml"> Test demonstrates the use of external 
entity and how replacement text is retrieved and processed.  Also tests the use of an 
EncodingDecl of UTF-16.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-009"
	URI="valid/ext-sa/009.xml" SECTIONS="2.11"
	OUTPUT="valid/ext-sa/out/009.xml">
    A carriage return (also CRLF) in an external entity must
    be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-011"
	URI="valid/ext-sa/011.xml" SECTIONS="2.11 4.2.2 [75]"
	OUTPUT="valid/ext-sa/out/011.xml">
    Test demonstrates the use of a public identifier with and external entity.  
The test also show that a carriage control line feed combination in an external 
entity must be normalized to a single newline. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-012"
	URI="valid/ext-sa/012.xml" SECTIONS="4.2.1 4.2.2"
	OUTPUT="valid/ext-sa/out/012.xml">
     Test demonstrates both internal and external entities and that processing of entity references may be required to produce the correct replacement text.</TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-013"
	URI="valid/ext-sa/013.xml" SECTIONS="3.3.3"
	OUTPUT="valid/ext-sa/out/013.xml">
    Test demonstrates that whitespace is handled by adding a single whitespace to the normalized value in the attribute list. </TEST>
<TEST TYPE="valid" ENTITIES="both" ID="valid-ext-sa-014"
	URI="valid/ext-sa/014.xml" SECTIONS="4.1 4.4.3 [68]"
	OUTPUT="valid/ext-sa/out/014.xml">
    Test demonstrates use of characters outside of normal ASCII range.</TEST>
</TESTCASES>
