<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gdk" version="2.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Pango" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <package name="gdk-x11-2.0"/>
  <namespace name="Gdk"
             version="1.0"
             shared-library="libgdkglext-x11-1.0.so.0"
             c:prefix="Gdk">
    <constant name="GDKGLEXT_BINARY_AGE" value="0">
      <type name="int"/>
    </constant>
    <constant name="GDKGLEXT_INTERFACE_AGE" value="0">
      <type name="int"/>
    </constant>
    <constant name="GDKGLEXT_MAJOR_VERSION" value="1">
      <type name="int"/>
    </constant>
    <constant name="GDKGLEXT_MICRO_VERSION" value="0">
      <type name="int"/>
    </constant>
    <constant name="GDKGLEXT_MINOR_VERSION" value="2">
      <type name="int"/>
    </constant>
    <bitfield name="GLBufferMask"
              glib:type-name="GdkGLBufferMask"
              glib:get-type="gdk_gl_buffer_mask_get_type"
              c:type="GdkGLBufferMask">
      <member name="front_left_buffer_bit"
              value="1"
              c:identifier="GDK_GL_FRONT_LEFT_BUFFER_BIT"
              glib:nick="front-left-buffer-bit"/>
      <member name="front_right_buffer_bit"
              value="2"
              c:identifier="GDK_GL_FRONT_RIGHT_BUFFER_BIT"
              glib:nick="front-right-buffer-bit"/>
      <member name="back_left_buffer_bit"
              value="4"
              c:identifier="GDK_GL_BACK_LEFT_BUFFER_BIT"
              glib:nick="back-left-buffer-bit"/>
      <member name="back_right_buffer_bit"
              value="8"
              c:identifier="GDK_GL_BACK_RIGHT_BUFFER_BIT"
              glib:nick="back-right-buffer-bit"/>
      <member name="aux_buffers_bit"
              value="16"
              c:identifier="GDK_GL_AUX_BUFFERS_BIT"
              glib:nick="aux-buffers-bit"/>
      <member name="depth_buffer_bit"
              value="32"
              c:identifier="GDK_GL_DEPTH_BUFFER_BIT"
              glib:nick="depth-buffer-bit"/>
      <member name="stencil_buffer_bit"
              value="64"
              c:identifier="GDK_GL_STENCIL_BUFFER_BIT"
              glib:nick="stencil-buffer-bit"/>
      <member name="accum_buffer_bit"
              value="128"
              c:identifier="GDK_GL_ACCUM_BUFFER_BIT"
              glib:nick="accum-buffer-bit"/>
    </bitfield>
    <class name="GLConfig"
           c:type="GdkGLConfig"
           parent="GObject.Object"
           glib:type-name="GdkGLConfig"
           glib:get-type="gdk_gl_config_get_type"
           glib:type-struct="GLConfigClass">
      <constructor name="new" c:identifier="gdk_gl_config_new">
        <return-value transfer-ownership="full">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </return-value>
        <parameters>
          <parameter name="attrib_list"
                     direction="out"
                     transfer-ownership="none">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_by_mode" c:identifier="gdk_gl_config_new_by_mode">
        <return-value transfer-ownership="full">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="GLConfigMode" c:type="GdkGLConfigMode"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_screen" c:identifier="gdk_gl_config_get_screen">
        <return-value transfer-ownership="full">
          <type name="Gdk.Screen" c:type="GdkScreen*"/>
        </return-value>
      </method>
      <method name="get_attrib" c:identifier="gdk_gl_config_get_attrib">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="value" direction="out" transfer-ownership="full">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_colormap" c:identifier="gdk_gl_config_get_colormap">
        <return-value transfer-ownership="full">
          <type name="Gdk.Colormap" c:type="GdkColormap*"/>
        </return-value>
      </method>
      <method name="get_visual" c:identifier="gdk_gl_config_get_visual">
        <return-value transfer-ownership="full">
          <type name="Gdk.Visual" c:type="GdkVisual*"/>
        </return-value>
      </method>
      <method name="get_depth" c:identifier="gdk_gl_config_get_depth">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_layer_plane"
              c:identifier="gdk_gl_config_get_layer_plane">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_aux_buffers"
              c:identifier="gdk_gl_config_get_n_aux_buffers">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_sample_buffers"
              c:identifier="gdk_gl_config_get_n_sample_buffers">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="is_rgba" c:identifier="gdk_gl_config_is_rgba">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_double_buffered"
              c:identifier="gdk_gl_config_is_double_buffered">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_stereo" c:identifier="gdk_gl_config_is_stereo">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_alpha" c:identifier="gdk_gl_config_has_alpha">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_depth_buffer"
              c:identifier="gdk_gl_config_has_depth_buffer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_stencil_buffer"
              c:identifier="gdk_gl_config_has_stencil_buffer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_accum_buffer"
              c:identifier="gdk_gl_config_has_accum_buffer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="layer_plane">
        <type name="int" c:type="gint"/>
      </field>
      <field name="n_aux_buffers">
        <type name="int" c:type="gint"/>
      </field>
      <field name="n_sample_buffers">
        <type name="int" c:type="gint"/>
      </field>
      <field name="is_rgba" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="is_double_buffered" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="as_single_mode" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="is_stereo" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="has_alpha" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="has_depth_buffer" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="has_stencil_buffer" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="has_accum_buffer" bits="1">
        <type name="uint" c:type="guint"/>
      </field>
    </class>
    <enumeration name="GLConfigAttrib"
                 glib:type-name="GdkGLConfigAttrib"
                 glib:get-type="gdk_gl_config_attrib_get_type"
                 c:type="GdkGLConfigAttrib">
      <member name="use_gl"
              value="1"
              c:identifier="GDK_GL_USE_GL"
              glib:nick="use-gl"/>
      <member name="buffer_size"
              value="2"
              c:identifier="GDK_GL_BUFFER_SIZE"
              glib:nick="buffer-size"/>
      <member name="level"
              value="3"
              c:identifier="GDK_GL_LEVEL"
              glib:nick="level"/>
      <member name="rgba"
              value="4"
              c:identifier="GDK_GL_RGBA"
              glib:nick="rgba"/>
      <member name="doublebuffer"
              value="5"
              c:identifier="GDK_GL_DOUBLEBUFFER"
              glib:nick="doublebuffer"/>
      <member name="stereo"
              value="6"
              c:identifier="GDK_GL_STEREO"
              glib:nick="stereo"/>
      <member name="aux_buffers"
              value="7"
              c:identifier="GDK_GL_AUX_BUFFERS"
              glib:nick="aux-buffers"/>
      <member name="red_size"
              value="8"
              c:identifier="GDK_GL_RED_SIZE"
              glib:nick="red-size"/>
      <member name="green_size"
              value="9"
              c:identifier="GDK_GL_GREEN_SIZE"
              glib:nick="green-size"/>
      <member name="blue_size"
              value="10"
              c:identifier="GDK_GL_BLUE_SIZE"
              glib:nick="blue-size"/>
      <member name="alpha_size"
              value="11"
              c:identifier="GDK_GL_ALPHA_SIZE"
              glib:nick="alpha-size"/>
      <member name="depth_size"
              value="12"
              c:identifier="GDK_GL_DEPTH_SIZE"
              glib:nick="depth-size"/>
      <member name="stencil_size"
              value="13"
              c:identifier="GDK_GL_STENCIL_SIZE"
              glib:nick="stencil-size"/>
      <member name="accum_red_size"
              value="14"
              c:identifier="GDK_GL_ACCUM_RED_SIZE"
              glib:nick="accum-red-size"/>
      <member name="accum_green_size"
              value="15"
              c:identifier="GDK_GL_ACCUM_GREEN_SIZE"
              glib:nick="accum-green-size"/>
      <member name="accum_blue_size"
              value="16"
              c:identifier="GDK_GL_ACCUM_BLUE_SIZE"
              glib:nick="accum-blue-size"/>
      <member name="accum_alpha_size"
              value="17"
              c:identifier="GDK_GL_ACCUM_ALPHA_SIZE"
              glib:nick="accum-alpha-size"/>
      <member name="config_caveat"
              value="32"
              c:identifier="GDK_GL_CONFIG_CAVEAT"
              glib:nick="config-caveat"/>
      <member name="x_visual_type"
              value="34"
              c:identifier="GDK_GL_X_VISUAL_TYPE"
              glib:nick="x-visual-type"/>
      <member name="transparent_type"
              value="35"
              c:identifier="GDK_GL_TRANSPARENT_TYPE"
              glib:nick="transparent-type"/>
      <member name="transparent_index_value"
              value="36"
              c:identifier="GDK_GL_TRANSPARENT_INDEX_VALUE"
              glib:nick="transparent-index-value"/>
      <member name="transparent_red_value"
              value="37"
              c:identifier="GDK_GL_TRANSPARENT_RED_VALUE"
              glib:nick="transparent-red-value"/>
      <member name="transparent_green_value"
              value="38"
              c:identifier="GDK_GL_TRANSPARENT_GREEN_VALUE"
              glib:nick="transparent-green-value"/>
      <member name="transparent_blue_value"
              value="39"
              c:identifier="GDK_GL_TRANSPARENT_BLUE_VALUE"
              glib:nick="transparent-blue-value"/>
      <member name="transparent_alpha_value"
              value="40"
              c:identifier="GDK_GL_TRANSPARENT_ALPHA_VALUE"
              glib:nick="transparent-alpha-value"/>
      <member name="drawable_type"
              value="32784"
              c:identifier="GDK_GL_DRAWABLE_TYPE"
              glib:nick="drawable-type"/>
      <member name="render_type"
              value="32785"
              c:identifier="GDK_GL_RENDER_TYPE"
              glib:nick="render-type"/>
      <member name="x_renderable"
              value="32786"
              c:identifier="GDK_GL_X_RENDERABLE"
              glib:nick="x-renderable"/>
      <member name="fbconfig_id"
              value="32787"
              c:identifier="GDK_GL_FBCONFIG_ID"
              glib:nick="fbconfig-id"/>
      <member name="max_pbuffer_width"
              value="32790"
              c:identifier="GDK_GL_MAX_PBUFFER_WIDTH"
              glib:nick="max-pbuffer-width"/>
      <member name="max_pbuffer_height"
              value="32791"
              c:identifier="GDK_GL_MAX_PBUFFER_HEIGHT"
              glib:nick="max-pbuffer-height"/>
      <member name="max_pbuffer_pixels"
              value="32792"
              c:identifier="GDK_GL_MAX_PBUFFER_PIXELS"
              glib:nick="max-pbuffer-pixels"/>
      <member name="visual_id"
              value="32779"
              c:identifier="GDK_GL_VISUAL_ID"
              glib:nick="visual-id"/>
      <member name="screen"
              value="32780"
              c:identifier="GDK_GL_SCREEN"
              glib:nick="screen"/>
      <member name="sample_buffers"
              value="100000"
              c:identifier="GDK_GL_SAMPLE_BUFFERS"
              glib:nick="sample-buffers"/>
      <member name="samples"
              value="100001"
              c:identifier="GDK_GL_SAMPLES"
              glib:nick="samples"/>
    </enumeration>
    <enumeration name="GLConfigCaveat"
                 glib:type-name="GdkGLConfigCaveat"
                 glib:get-type="gdk_gl_config_caveat_get_type"
                 c:type="GdkGLConfigCaveat">
      <member name="config_caveat_dont_care"
              value="-1"
              c:identifier="GDK_GL_CONFIG_CAVEAT_DONT_CARE"
              glib:nick="config-caveat-dont-care"/>
      <member name="config_caveat_none"
              value="32768"
              c:identifier="GDK_GL_CONFIG_CAVEAT_NONE"
              glib:nick="config-caveat-none"/>
      <member name="slow_config"
              value="32769"
              c:identifier="GDK_GL_SLOW_CONFIG"
              glib:nick="slow-config"/>
      <member name="non_conformant_config"
              value="32781"
              c:identifier="GDK_GL_NON_CONFORMANT_CONFIG"
              glib:nick="non-conformant-config"/>
    </enumeration>
    <record name="GLConfigClass"
            c:type="GdkGLConfigClass"
            glib:is-gtype-struct-for="GLConfig">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="GLConfigError"
                 glib:type-name="GdkGLConfigError"
                 glib:get-type="gdk_gl_config_error_get_type"
                 c:type="GdkGLConfigError">
      <member name="bad_screen"
              value="1"
              c:identifier="GDK_GL_BAD_SCREEN"
              glib:nick="bad-screen"/>
      <member name="bad_attribute"
              value="2"
              c:identifier="GDK_GL_BAD_ATTRIBUTE"
              glib:nick="bad-attribute"/>
      <member name="no_extension"
              value="3"
              c:identifier="GDK_GL_NO_EXTENSION"
              glib:nick="no-extension"/>
      <member name="bad_visual"
              value="4"
              c:identifier="GDK_GL_BAD_VISUAL"
              glib:nick="bad-visual"/>
      <member name="bad_context"
              value="5"
              c:identifier="GDK_GL_BAD_CONTEXT"
              glib:nick="bad-context"/>
      <member name="bad_value"
              value="6"
              c:identifier="GDK_GL_BAD_VALUE"
              glib:nick="bad-value"/>
      <member name="bad_enum"
              value="7"
              c:identifier="GDK_GL_BAD_ENUM"
              glib:nick="bad-enum"/>
    </enumeration>
    <bitfield name="GLConfigMode"
              glib:type-name="GdkGLConfigMode"
              glib:get-type="gdk_gl_config_mode_get_type"
              c:type="GdkGLConfigMode">
      <member name="rgb"
              value="0"
              c:identifier="GDK_GL_MODE_RGB"
              glib:nick="rgb"/>
      <member name="rgba"
              value="0"
              c:identifier="GDK_GL_MODE_RGBA"
              glib:nick="rgba"/>
      <member name="index"
              value="1"
              c:identifier="GDK_GL_MODE_INDEX"
              glib:nick="index"/>
      <member name="single"
              value="0"
              c:identifier="GDK_GL_MODE_SINGLE"
              glib:nick="single"/>
      <member name="double"
              value="2"
              c:identifier="GDK_GL_MODE_DOUBLE"
              glib:nick="double"/>
      <member name="stereo"
              value="4"
              c:identifier="GDK_GL_MODE_STEREO"
              glib:nick="stereo"/>
      <member name="alpha"
              value="8"
              c:identifier="GDK_GL_MODE_ALPHA"
              glib:nick="alpha"/>
      <member name="depth"
              value="16"
              c:identifier="GDK_GL_MODE_DEPTH"
              glib:nick="depth"/>
      <member name="stencil"
              value="32"
              c:identifier="GDK_GL_MODE_STENCIL"
              glib:nick="stencil"/>
      <member name="accum"
              value="64"
              c:identifier="GDK_GL_MODE_ACCUM"
              glib:nick="accum"/>
      <member name="multisample"
              value="128"
              c:identifier="GDK_GL_MODE_MULTISAMPLE"
              glib:nick="multisample"/>
    </bitfield>
    <class name="GLContext"
           c:type="GdkGLContext"
           parent="GObject.Object"
           glib:type-name="GdkGLContext"
           glib:get-type="gdk_gl_context_get_type"
           glib:type-struct="GLContextClass">
      <constructor name="new" c:identifier="gdk_gl_context_new">
        <return-value transfer-ownership="full">
          <type name="GLContext" c:type="GdkGLContext*"/>
        </return-value>
        <parameters>
          <parameter name="gldrawable" transfer-ownership="none">
            <type name="GLDrawable" c:type="GdkGLDrawable*"/>
          </parameter>
          <parameter name="share_list" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
          <parameter name="direct" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="render_type" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_current" c:identifier="gdk_gl_context_get_current">
        <return-value transfer-ownership="full">
          <type name="GLContext" c:type="GdkGLContext*"/>
        </return-value>
      </function>
      <method name="destroy" c:identifier="gdk_gl_context_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gdk_gl_context_copy">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="ulong" c:type="unsigned long"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gl_drawable"
              c:identifier="gdk_gl_context_get_gl_drawable">
        <return-value transfer-ownership="full">
          <type name="GLDrawable" c:type="GdkGLDrawable*"/>
        </return-value>
      </method>
      <method name="get_gl_config" c:identifier="gdk_gl_context_get_gl_config">
        <return-value transfer-ownership="full">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </return-value>
      </method>
      <method name="get_share_list"
              c:identifier="gdk_gl_context_get_share_list">
        <return-value transfer-ownership="full">
          <type name="GLContext" c:type="GdkGLContext*"/>
        </return-value>
      </method>
      <method name="is_direct" c:identifier="gdk_gl_context_is_direct">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_render_type"
              c:identifier="gdk_gl_context_get_render_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="GLContextClass"
            c:type="GdkGLContextClass"
            glib:is-gtype-struct-for="GLContext">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <bitfield name="GLDebugFlag" c:type="GdkGLDebugFlag">
      <member name="misc" value="1" c:identifier="GDK_GL_DEBUG_MISC"/>
      <member name="func" value="2" c:identifier="GDK_GL_DEBUG_FUNC"/>
      <member name="impl" value="4" c:identifier="GDK_GL_DEBUG_IMPL"/>
    </bitfield>
    <interface name="GLDrawable"
               c:type="GdkGLDrawable"
               glib:type-name="GdkGLDrawable"
               glib:get-type="gdk_gl_drawable_get_type"
               glib:type-struct="GLDrawableClass">
      <virtual-method name="create_new_context">
        <return-value transfer-ownership="full">
          <type name="GLContext" c:type="GdkGLContext*"/>
        </return-value>
        <parameters>
          <parameter name="share_list" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
          <parameter name="direct" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="render_type" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_context_current">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="read" transfer-ownership="none">
            <type name="GLDrawable" c:type="GdkGLDrawable*"/>
          </parameter>
          <parameter name="glcontext" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_double_buffered" invoker="is_double_buffered">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="swap_buffers" invoker="swap_buffers">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="wait_gl" invoker="wait_gl">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="wait_gdk" invoker="wait_gdk">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="gl_begin">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="read" transfer-ownership="none">
            <type name="GLDrawable" c:type="GdkGLDrawable*"/>
          </parameter>
          <parameter name="glcontext" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gl_end" invoker="gl_end">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_gl_config" invoker="get_gl_config">
        <return-value transfer-ownership="full">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_size" invoker="get_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="make_current" c:identifier="gdk_gl_drawable_make_current">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="glcontext" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_double_buffered"
              c:identifier="gdk_gl_drawable_is_double_buffered">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="swap_buffers" c:identifier="gdk_gl_drawable_swap_buffers">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="wait_gl" c:identifier="gdk_gl_drawable_wait_gl">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="wait_gdk" c:identifier="gdk_gl_drawable_wait_gdk">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="gl_begin" c:identifier="gdk_gl_drawable_gl_begin">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="glcontext" transfer-ownership="none">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="gl_end" c:identifier="gdk_gl_drawable_gl_end">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_gl_config"
              c:identifier="gdk_gl_drawable_get_gl_config">
        <return-value transfer-ownership="full">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="gdk_gl_drawable_get_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <enumeration name="GLDrawableAttrib"
                 glib:type-name="GdkGLDrawableAttrib"
                 glib:get-type="gdk_gl_drawable_attrib_get_type"
                 c:type="GdkGLDrawableAttrib">
      <member name="preserved_contents"
              value="32795"
              c:identifier="GDK_GL_PRESERVED_CONTENTS"
              glib:nick="preserved-contents"/>
      <member name="largest_pbuffer"
              value="32796"
              c:identifier="GDK_GL_LARGEST_PBUFFER"
              glib:nick="largest-pbuffer"/>
      <member name="width"
              value="32797"
              c:identifier="GDK_GL_WIDTH"
              glib:nick="width"/>
      <member name="height"
              value="32798"
              c:identifier="GDK_GL_HEIGHT"
              glib:nick="height"/>
      <member name="event_mask"
              value="32799"
              c:identifier="GDK_GL_EVENT_MASK"
              glib:nick="event-mask"/>
    </enumeration>
    <record name="GLDrawableClass"
            c:type="GdkGLDrawableClass"
            glib:is-gtype-struct-for="GLDrawable">
      <field name="base_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="create_new_context">
        <callback name="create_new_context" c:type="create_new_context">
          <return-value transfer-ownership="full">
            <type name="GLContext" c:type="GdkGLContext*"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="share_list" transfer-ownership="none">
              <type name="GLContext" c:type="GdkGLContext*"/>
            </parameter>
            <parameter name="direct" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="render_type" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_context_current">
        <callback name="make_context_current" c:type="make_context_current">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="draw" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="read" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="glcontext" transfer-ownership="none">
              <type name="GLContext" c:type="GdkGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_double_buffered">
        <callback name="is_double_buffered" c:type="is_double_buffered">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="swap_buffers">
        <callback name="swap_buffers" c:type="swap_buffers">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_gl">
        <callback name="wait_gl" c:type="wait_gl">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_gdk">
        <callback name="wait_gdk" c:type="wait_gdk">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gl_begin">
        <callback name="gl_begin" c:type="gl_begin">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="draw" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="read" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="glcontext" transfer-ownership="none">
              <type name="GLContext" c:type="GdkGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gl_end">
        <callback name="gl_end" c:type="gl_end">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_gl_config">
        <callback name="get_gl_config" c:type="get_gl_config">
          <return-value transfer-ownership="full">
            <type name="GLConfig" c:type="GdkGLConfig*"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_size">
        <callback name="get_size" c:type="get_size">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gldrawable" transfer-ownership="none">
              <type name="GLDrawable" c:type="GdkGLDrawable*"/>
            </parameter>
            <parameter name="width" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="height" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="GLDrawableType"
                 glib:type-name="GdkGLDrawableType"
                 glib:get-type="gdk_gl_drawable_type_get_type"
                 c:type="GdkGLDrawableType">
      <member name="window"
              value="32802"
              c:identifier="GDK_GL_WINDOW"
              glib:nick="window"/>
      <member name="pbuffer"
              value="32803"
              c:identifier="GDK_GL_PBUFFER"
              glib:nick="pbuffer"/>
    </enumeration>
    <bitfield name="GLDrawableTypeMask"
              glib:type-name="GdkGLDrawableTypeMask"
              glib:get-type="gdk_gl_drawable_type_mask_get_type"
              c:type="GdkGLDrawableTypeMask">
      <member name="window_bit"
              value="1"
              c:identifier="GDK_GL_WINDOW_BIT"
              glib:nick="window-bit"/>
      <member name="pixmap_bit"
              value="2"
              c:identifier="GDK_GL_PIXMAP_BIT"
              glib:nick="pixmap-bit"/>
      <member name="pbuffer_bit"
              value="4"
              c:identifier="GDK_GL_PBUFFER_BIT"
              glib:nick="pbuffer-bit"/>
    </bitfield>
    <bitfield name="GLEventMask"
              glib:type-name="GdkGLEventMask"
              glib:get-type="gdk_gl_event_mask_get_type"
              c:type="GdkGLEventMask">
      <member name="mask"
              value="134217728"
              c:identifier="GDK_GL_PBUFFER_CLOBBER_MASK"
              glib:nick="mask"/>
    </bitfield>
    <enumeration name="GLEventType"
                 glib:type-name="GdkGLEventType"
                 glib:get-type="gdk_gl_event_type_get_type"
                 c:type="GdkGLEventType">
      <member name="damaged"
              value="32800"
              c:identifier="GDK_GL_DAMAGED"
              glib:nick="damaged"/>
      <member name="saved"
              value="32801"
              c:identifier="GDK_GL_SAVED"
              glib:nick="saved"/>
    </enumeration>
    <enumeration name="GLPbufferAttrib"
                 glib:type-name="GdkGLPbufferAttrib"
                 glib:get-type="gdk_gl_pbuffer_attrib_get_type"
                 c:type="GdkGLPbufferAttrib">
      <member name="preserved_contents"
              value="32795"
              c:identifier="GDK_GL_PBUFFER_PRESERVED_CONTENTS"
              glib:nick="preserved-contents"/>
      <member name="largest_pbuffer"
              value="32796"
              c:identifier="GDK_GL_PBUFFER_LARGEST_PBUFFER"
              glib:nick="largest-pbuffer"/>
      <member name="height"
              value="32832"
              c:identifier="GDK_GL_PBUFFER_HEIGHT"
              glib:nick="height"/>
      <member name="width"
              value="32833"
              c:identifier="GDK_GL_PBUFFER_WIDTH"
              glib:nick="width"/>
    </enumeration>
    <class name="GLPixmap"
           c:type="GdkGLPixmap"
           parent="Gdk.Drawable"
           glib:type-name="GdkGLPixmap"
           glib:get-type="gdk_gl_pixmap_get_type"
           glib:type-struct="GLPixmapClass">
      <constructor name="new" c:identifier="gdk_gl_pixmap_new">
        <return-value transfer-ownership="full">
          <type name="GLPixmap" c:type="GdkGLPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="glconfig" transfer-ownership="none">
            <type name="GLConfig" c:type="GdkGLConfig*"/>
          </parameter>
          <parameter name="pixmap" transfer-ownership="none">
            <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
          </parameter>
          <parameter name="attrib_list"
                     direction="out"
                     transfer-ownership="none">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="destroy" c:identifier="gdk_gl_pixmap_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_pixmap" c:identifier="gdk_gl_pixmap_get_pixmap">
        <return-value transfer-ownership="full">
          <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="Gdk.Drawable" c:type="GdkDrawable"/>
      </field>
      <field name="drawable">
        <type name="Gdk.Drawable" c:type="GdkDrawable*"/>
      </field>
    </class>
    <record name="GLPixmapClass"
            c:type="GdkGLPixmapClass"
            glib:is-gtype-struct-for="GLPixmap">
      <field name="parent_class">
        <type name="Gdk.DrawableClass" c:type="GdkDrawableClass"/>
      </field>
    </record>
    <callback name="GLProc" c:type="GdkGLProc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <enumeration name="GLRenderType"
                 glib:type-name="GdkGLRenderType"
                 glib:get-type="gdk_gl_render_type_get_type"
                 c:type="GdkGLRenderType">
      <member name="rgba_type"
              value="32788"
              c:identifier="GDK_GL_RGBA_TYPE"
              glib:nick="rgba-type"/>
      <member name="color_index_type"
              value="32789"
              c:identifier="GDK_GL_COLOR_INDEX_TYPE"
              glib:nick="color-index-type"/>
    </enumeration>
    <bitfield name="GLRenderTypeMask"
              glib:type-name="GdkGLRenderTypeMask"
              glib:get-type="gdk_gl_render_type_mask_get_type"
              c:type="GdkGLRenderTypeMask">
      <member name="rgba_bit"
              value="1"
              c:identifier="GDK_GL_RGBA_BIT"
              glib:nick="rgba-bit"/>
      <member name="color_index_bit"
              value="2"
              c:identifier="GDK_GL_COLOR_INDEX_BIT"
              glib:nick="color-index-bit"/>
    </bitfield>
    <enumeration name="GLTransparentType"
                 glib:type-name="GdkGLTransparentType"
                 glib:get-type="gdk_gl_transparent_type_get_type"
                 c:type="GdkGLTransparentType">
      <member name="none"
              value="32768"
              c:identifier="GDK_GL_TRANSPARENT_NONE"
              glib:nick="none"/>
      <member name="rgb"
              value="32776"
              c:identifier="GDK_GL_TRANSPARENT_RGB"
              glib:nick="rgb"/>
      <member name="index"
              value="32777"
              c:identifier="GDK_GL_TRANSPARENT_INDEX"
              glib:nick="index"/>
    </enumeration>
    <enumeration name="GLVisualType"
                 glib:type-name="GdkGLVisualType"
                 glib:get-type="gdk_gl_visual_type_get_type"
                 c:type="GdkGLVisualType">
      <member name="visual_type_dont_care"
              value="-1"
              c:identifier="GDK_GL_VISUAL_TYPE_DONT_CARE"
              glib:nick="visual-type-dont-care"/>
      <member name="true_color"
              value="32770"
              c:identifier="GDK_GL_TRUE_COLOR"
              glib:nick="true-color"/>
      <member name="direct_color"
              value="32771"
              c:identifier="GDK_GL_DIRECT_COLOR"
              glib:nick="direct-color"/>
      <member name="pseudo_color"
              value="32772"
              c:identifier="GDK_GL_PSEUDO_COLOR"
              glib:nick="pseudo-color"/>
      <member name="static_color"
              value="32773"
              c:identifier="GDK_GL_STATIC_COLOR"
              glib:nick="static-color"/>
      <member name="gray_scale"
              value="32774"
              c:identifier="GDK_GL_GRAY_SCALE"
              glib:nick="gray-scale"/>
      <member name="static_gray"
              value="32775"
              c:identifier="GDK_GL_STATIC_GRAY"
              glib:nick="static-gray"/>
    </enumeration>
    <class name="GLWindow"
           c:type="GdkGLWindow"
           parent="Gdk.Drawable"
           glib:type-name="GdkGLWindow"
           glib:get-type="gdk_gl_window_get_type"
           glib:type-struct="GLWindowClass">
      <constructor name="new" c:identifier="gdk_gl_window_new">
        <return-value transfer-ownership="full">
          <type name="GLWindow" c:type="GdkGLWindow*"/>
        </return-value>
        <parameters>
          <parameter name="glconfig" transfer-ownership="none">
            <type name="GLConfig" c:type="GdkGLConfig*"/>
          </parameter>
          <parameter name="window" transfer-ownership="none">
            <type name="Gdk.Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="attrib_list"
                     direction="out"
                     transfer-ownership="none">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="destroy" c:identifier="gdk_gl_window_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_window" c:identifier="gdk_gl_window_get_window">
        <return-value transfer-ownership="full">
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="Gdk.Drawable" c:type="GdkDrawable"/>
      </field>
      <field name="drawable">
        <type name="Gdk.Drawable" c:type="GdkDrawable*"/>
      </field>
    </class>
    <record name="GLWindowClass"
            c:type="GdkGLWindowClass"
            glib:is-gtype-struct-for="GLWindow">
      <field name="parent_class">
        <type name="Gdk.DrawableClass" c:type="GdkDrawableClass"/>
      </field>
    </record>
    <constant name="GL_ATTRIB_LIST_NONE" value="0">
      <type name="int"/>
    </constant>
    <constant name="GL_DONT_CARE" value="-1">
      <type name="int"/>
    </constant>
    <constant name="GL_NONE" value="32768">
      <type name="int"/>
    </constant>
    <constant name="GL_SGIS_point_parameters" value="1">
      <type name="int"/>
    </constant>
    <constant name="GL_SUCCESS" value="0">
      <type name="int"/>
    </constant>
    <constant name="WIN32_LEAN_AND_MEAN" value="1">
      <type name="int"/>
    </constant>
    <constant name="func__" value="&lt;unknown&gt;">
      <type name="utf8"/>
    </constant>
    <function name="gl_draw_cone" c:identifier="gdk_gl_draw_cone">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="base" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="stacks" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_cube" c:identifier="gdk_gl_draw_cube">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_dodecahedron"
              c:identifier="gdk_gl_draw_dodecahedron">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_icosahedron"
              c:identifier="gdk_gl_draw_icosahedron">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_octahedron" c:identifier="gdk_gl_draw_octahedron">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_sphere" c:identifier="gdk_gl_draw_sphere">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="radius" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="stacks" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_teapot" c:identifier="gdk_gl_draw_teapot">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="scale" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_tetrahedron"
              c:identifier="gdk_gl_draw_tetrahedron">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_draw_torus" c:identifier="gdk_gl_draw_torus">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="solid" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="inner_radius" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
        <parameter name="outer_radius" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
        <parameter name="nsides" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="rings" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_drawable_get_current"
              c:identifier="gdk_gl_drawable_get_current">
      <return-value transfer-ownership="full">
        <type name="GLDrawable" c:type="GdkGLDrawable*"/>
      </return-value>
    </function>
    <function name="gl_font_use_pango_font"
              c:identifier="gdk_gl_font_use_pango_font">
      <return-value transfer-ownership="full">
        <type name="Pango.Font" c:type="PangoFont*"/>
      </return-value>
      <parameters>
        <parameter name="font_desc" transfer-ownership="none">
          <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
        </parameter>
        <parameter name="first" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="list_base" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_get_proc_address"
              c:identifier="gdk_gl_get_proc_address">
      <return-value transfer-ownership="full">
        <type name="GLProc" c:type="GdkGLProc"/>
      </return-value>
      <parameters>
        <parameter name="proc_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_init" c:identifier="gdk_gl_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_init_check" c:identifier="gdk_gl_init_check">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_parse_args" c:identifier="gdk_gl_parse_args">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_query_extension" c:identifier="gdk_gl_query_extension">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="gl_query_gl_extension"
              c:identifier="gdk_gl_query_gl_extension">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_query_version" c:identifier="gdk_gl_query_version">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="major" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="minor" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixmap_get_gl_pixmap"
              c:identifier="gdk_pixmap_get_gl_pixmap">
      <return-value transfer-ownership="full">
        <type name="GLPixmap" c:type="GdkGLPixmap*"/>
      </return-value>
      <parameters>
        <parameter name="pixmap" transfer-ownership="none">
          <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixmap_is_gl_capable"
              c:identifier="gdk_pixmap_is_gl_capable">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pixmap" transfer-ownership="none">
          <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixmap_set_gl_capability"
              c:identifier="gdk_pixmap_set_gl_capability">
      <return-value transfer-ownership="full">
        <type name="GLPixmap" c:type="GdkGLPixmap*"/>
      </return-value>
      <parameters>
        <parameter name="pixmap" transfer-ownership="none">
          <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
        </parameter>
        <parameter name="glconfig" transfer-ownership="none">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </parameter>
        <parameter name="attrib_list"
                   direction="out"
                   transfer-ownership="none">
          <type name="int" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixmap_unset_gl_capability"
              c:identifier="gdk_pixmap_unset_gl_capability">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixmap" transfer-ownership="none">
          <type name="Gdk.Pixmap" c:type="GdkPixmap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_get_gl_window"
              c:identifier="gdk_window_get_gl_window">
      <return-value transfer-ownership="full">
        <type name="GLWindow" c:type="GdkGLWindow*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_is_gl_capable"
              c:identifier="gdk_window_is_gl_capable">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_set_gl_capability"
              c:identifier="gdk_window_set_gl_capability">
      <return-value transfer-ownership="full">
        <type name="GLWindow" c:type="GdkGLWindow*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="glconfig" transfer-ownership="none">
          <type name="GLConfig" c:type="GdkGLConfig*"/>
        </parameter>
        <parameter name="attrib_list"
                   direction="out"
                   transfer-ownership="none">
          <type name="int" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_unset_gl_capability"
              c:identifier="gdk_window_unset_gl_capability">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
