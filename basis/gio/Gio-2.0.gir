<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="gio-2.0"/>
  <package name="gio-unix-2.0"/>
  <c:include name="gio/gio.h"/>
  <namespace name="Gio"
             version="2.0"
             shared-library="libgio-2.0.so.0"
             c:prefix="g">
    <interface name="AppInfo"
               c:type="GAppInfo"
               doc="Information about an installed application and methods to launch
it (with file arguments)."
               glib:type-name="GAppInfo"
               glib:get-type="g_app_info_get_type"
               glib:type-struct="AppInfoIface">
      <virtual-method name="dup" invoker="dup">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo2" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_id" invoker="get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_executable" invoker="get_executable">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="launch" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filenames" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context" transfer-ownership="none">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="supports_uris" invoker="supports_uris">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="supports_files" invoker="supports_files">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="launch_uris" invoker="launch_uris" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uris" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context" transfer-ownership="none">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="should_show" invoker="should_show">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_as_default_for_type"
                      invoker="set_as_default_for_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_as_default_for_extension"
                      invoker="set_as_default_for_extension"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="extension" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_supports_type"
                      invoker="add_supports_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_remove_supports_type"
                      invoker="can_remove_supports_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="remove_supports_type"
                      invoker="remove_supports_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_delete" invoker="can_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="do_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_commandline" invoker="get_commandline">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_display_name" invoker="get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="dup" c:identifier="g_app_info_dup">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="g_app_info_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo2" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="g_app_info_get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_app_info_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_display_name"
              c:identifier="g_app_info_get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_description" c:identifier="g_app_info_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_executable" c:identifier="g_app_info_get_executable">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_commandline" c:identifier="g_app_info_get_commandline">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_app_info_get_icon">
        <return-value transfer-ownership="none">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="launch" c:identifier="g_app_info_launch" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
          <parameter name="launch_context"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_uris" c:identifier="g_app_info_supports_uris">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="supports_files" c:identifier="g_app_info_supports_files">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="launch_uris"
              c:identifier="g_app_info_launch_uris"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uris" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
          <parameter name="launch_context"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="should_show" c:identifier="g_app_info_should_show">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_as_default_for_type"
              c:identifier="g_app_info_set_as_default_for_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_as_default_for_extension"
              c:identifier="g_app_info_set_as_default_for_extension"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="extension" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_supports_type"
              c:identifier="g_app_info_add_supports_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_remove_supports_type"
              c:identifier="g_app_info_can_remove_supports_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="remove_supports_type"
              c:identifier="g_app_info_remove_supports_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_delete" c:identifier="g_app_info_can_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="delete" c:identifier="g_app_info_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </interface>
    <bitfield name="AppInfoCreateFlags"
              doc="Flags used when creating a #GAppInfo."
              glib:type-name="GAppInfoCreateFlags"
              glib:get-type="g_app_info_create_flags_get_type"
              c:type="GAppInfoCreateFlags">
      <member name="none"
              value="0"
              c:identifier="G_APP_INFO_CREATE_NONE"
              glib:nick="none"/>
      <member name="needs_terminal"
              value="1"
              c:identifier="G_APP_INFO_CREATE_NEEDS_TERMINAL"
              glib:nick="needs-terminal"/>
      <member name="supports_uris"
              value="2"
              c:identifier="G_APP_INFO_CREATE_SUPPORTS_URIS"
              glib:nick="supports-uris"/>
    </bitfield>
    <record name="AppInfoIface"
            c:type="GAppInfoIface"
            glib:is-gtype-struct-for="AppInfo"
            doc="&lt;ulink url=&quot;http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt&quot;&gt;
&lt;citetitle&gt;FreeDesktop.Org Startup Notification Specification&lt;/citetitle&gt;&lt;/ulink&gt;.
Application Information interface, for operating system portability.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="dup">
        <callback name="dup" c:type="dup">
          <return-value transfer-ownership="full">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo1" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="appinfo2" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_id">
        <callback name="get_id" c:type="get_id">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description" c:type="get_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_executable">
        <callback name="get_executable" c:type="get_executable">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch">
        <callback name="launch" c:type="launch" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="filenames" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*"/>
            </parameter>
            <parameter name="launch_context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_uris">
        <callback name="supports_uris" c:type="supports_uris">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_files">
        <callback name="supports_files" c:type="supports_files">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch_uris">
        <callback name="launch_uris" c:type="launch_uris" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="uris" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*"/>
            </parameter>
            <parameter name="launch_context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="should_show">
        <callback name="should_show" c:type="should_show">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_as_default_for_type">
        <callback name="set_as_default_for_type"
                  c:type="set_as_default_for_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_as_default_for_extension">
        <callback name="set_as_default_for_extension"
                  c:type="set_as_default_for_extension"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="extension" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_supports_type">
        <callback name="add_supports_type"
                  c:type="add_supports_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_remove_supports_type">
        <callback name="can_remove_supports_type"
                  c:type="can_remove_supports_type">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_supports_type">
        <callback name="remove_supports_type"
                  c:type="remove_supports_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_delete">
        <callback name="can_delete" c:type="can_delete">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="do_delete">
        <callback name="do_delete" c:type="do_delete">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_commandline">
        <callback name="get_commandline" c:type="get_commandline">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_display_name">
        <callback name="get_display_name" c:type="get_display_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="AppLaunchContext"
           c:type="GAppLaunchContext"
           doc="Integrating the launch with the launching application. This is used to
handle for instance startup notification and launching the new application
on the same screen as the launching window."
           parent="GObject.Object"
           glib:type-name="GAppLaunchContext"
           glib:get-type="g_app_launch_context_get_type"
           glib:type-struct="AppLaunchContextClass">
      <constructor name="new" c:identifier="g_app_launch_context_new">
        <return-value transfer-ownership="full">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_display" invoker="get_display">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_startup_notify_id"
                      invoker="get_startup_notify_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="launch_failed" invoker="launch_failed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="startup_notify_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_display"
              c:identifier="g_app_launch_context_get_display">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_startup_notify_id"
              c:identifier="g_app_launch_context_get_startup_notify_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="launch_failed"
              c:identifier="g_app_launch_context_launch_failed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="startup_notify_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="AppLaunchContextPrivate"
              c:type="GAppLaunchContextPrivate*"/>
      </field>
    </class>
    <record name="AppLaunchContextClass"
            c:type="GAppLaunchContextClass"
            glib:is-gtype-struct-for="AppLaunchContext">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_display">
        <callback name="get_display" c:type="get_display">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_startup_notify_id">
        <callback name="get_startup_notify_id" c:type="get_startup_notify_id">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch_failed">
        <callback name="launch_failed" c:type="launch_failed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="startup_notify_id" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AppLaunchContextPrivate" c:type="GAppLaunchContextPrivate">
    </record>
    <bitfield name="AskPasswordFlags"
              doc="#GAskPasswordFlags are used to request specific information from the
user, or to notify the user of their choices in an authentication
situation."
              glib:type-name="GAskPasswordFlags"
              glib:get-type="g_ask_password_flags_get_type"
              c:type="GAskPasswordFlags">
      <member name="need_password"
              value="1"
              c:identifier="G_ASK_PASSWORD_NEED_PASSWORD"
              glib:nick="need-password"/>
      <member name="need_username"
              value="2"
              c:identifier="G_ASK_PASSWORD_NEED_USERNAME"
              glib:nick="need-username"/>
      <member name="need_domain"
              value="4"
              c:identifier="G_ASK_PASSWORD_NEED_DOMAIN"
              glib:nick="need-domain"/>
      <member name="saving_supported"
              value="8"
              c:identifier="G_ASK_PASSWORD_SAVING_SUPPORTED"
              glib:nick="saving-supported"/>
      <member name="anonymous_supported"
              value="16"
              c:identifier="G_ASK_PASSWORD_ANONYMOUS_SUPPORTED"
              glib:nick="anonymous-supported"/>
    </bitfield>
    <interface name="AsyncInitable"
               c:type="GAsyncInitable"
               doc="Interface for asynchronously initializable objects."
               version="2.22"
               glib:type-name="GAsyncInitable"
               glib:get-type="g_async_initable_get_type"
               glib:type-struct="AsyncInitableIface">
      <virtual-method name="init_async" invoker="init_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_finish" invoker="init_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="init_async" c:identifier="g_async_initable_init_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_finish"
              c:identifier="g_async_initable_init_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_finish"
              c:identifier="g_async_initable_new_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="AsyncInitableIface"
            c:type="GAsyncInitableIface"
            glib:is-gtype-struct-for="AsyncInitable"
            doc="Provides an interface for asynchronous initializing object such that
initialization may fail."
            version="2.22">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="init_async">
        <callback name="init_async" c:type="init_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="AsyncInitable" c:type="GAsyncInitable*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_finish">
        <callback name="init_finish" c:type="init_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="AsyncInitable" c:type="GAsyncInitable*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="AsyncReadyCallback"
              c:type="GAsyncReadyCallback"
              doc="Type definition for a function that will be called back when an asynchronous
operation within GIO has been completed.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <interface name="AsyncResult"
               c:type="GAsyncResult"
               doc="Holds results information for an asynchronous operation,
usually passed directly to a asynchronous _finish() operation."
               glib:type-name="GAsyncResult"
               glib:get-type="g_async_result_get_type"
               glib:type-struct="AsyncResultIface">
      <virtual-method name="get_user_data" invoker="get_user_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_source_object" invoker="get_source_object">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </virtual-method>
      <method name="get_user_data" c:identifier="g_async_result_get_user_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_source_object"
              c:identifier="g_async_result_get_source_object">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
    </interface>
    <record name="AsyncResultIface"
            c:type="GAsyncResultIface"
            glib:is-gtype-struct-for="AsyncResult"
            doc="Interface definition for #GAsyncResult.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_user_data">
        <callback name="get_user_data" c:type="get_user_data">
          <return-value transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="async_result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_source_object">
        <callback name="get_source_object" c:type="get_source_object">
          <return-value transfer-ownership="full">
            <type name="GObject.Object" c:type="GObject*"/>
          </return-value>
          <parameters>
            <parameter name="async_result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="BufferedInputStream"
           c:type="GBufferedInputStream"
           doc="Implements #GFilterInputStream with a sized input buffer."
           parent="FilterInputStream"
           glib:type-name="GBufferedInputStream"
           glib:get-type="g_buffered_input_stream_get_type"
           glib:type-struct="BufferedInputStreamClass">
      <constructor name="new" c:identifier="g_buffered_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="BufferedInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sized"
                   c:identifier="g_buffered_input_stream_new_sized">
        <return-value transfer-ownership="full">
          <type name="BufferedInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="fill" invoker="fill" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fill_async" invoker="fill_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fill_finish" invoker="fill_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_buffer_size"
              c:identifier="g_buffered_input_stream_get_buffer_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_input_stream_set_buffer_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available"
              c:identifier="g_buffered_input_stream_get_available">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="peek" c:identifier="g_buffered_input_stream_peek">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_buffer"
              c:identifier="g_buffered_input_stream_peek_buffer">
        <return-value transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </return-value>
        <parameters>
          <parameter name="count" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill"
              c:identifier="g_buffered_input_stream_fill"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_async"
              c:identifier="g_buffered_input_stream_fill_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_finish"
              c:identifier="g_buffered_input_stream_fill_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_byte"
              c:identifier="g_buffered_input_stream_read_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer-size" writable="1" construct="1">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="FilterInputStream" c:type="GFilterInputStream"/>
      </field>
      <field name="priv">
        <type name="BufferedInputStreamPrivate"
              c:type="GBufferedInputStreamPrivate*"/>
      </field>
    </class>
    <record name="BufferedInputStreamClass"
            c:type="GBufferedInputStreamClass"
            glib:is-gtype-struct-for="BufferedInputStream">
      <field name="parent_class">
        <type name="FilterInputStreamClass" c:type="GFilterInputStreamClass"/>
      </field>
      <field name="fill">
        <callback name="fill" c:type="fill" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="ssize_t" c:type="gssize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fill_async">
        <callback name="fill_async" c:type="fill_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="ssize_t" c:type="gssize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fill_finish">
        <callback name="fill_finish" c:type="fill_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BufferedInputStreamPrivate"
            c:type="GBufferedInputStreamPrivate">
    </record>
    <class name="BufferedOutputStream"
           c:type="GBufferedOutputStream"
           doc="An implementation of #GFilterOutputStream with a sized buffer."
           parent="FilterOutputStream"
           glib:type-name="GBufferedOutputStream"
           glib:get-type="g_buffered_output_stream_get_type"
           glib:type-struct="BufferedOutputStreamClass">
      <constructor name="new" c:identifier="g_buffered_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="BufferedOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sized"
                   c:identifier="g_buffered_output_stream_new_sized">
        <return-value transfer-ownership="full">
          <type name="BufferedOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer_size"
              c:identifier="g_buffered_output_stream_get_buffer_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_output_stream_set_buffer_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_grow"
              c:identifier="g_buffered_output_stream_get_auto_grow">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_auto_grow"
              c:identifier="g_buffered_output_stream_set_auto_grow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="auto_grow" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="auto-grow" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="buffer-size" writable="1" construct="1">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="BufferedOutputStreamPrivate"
              c:type="GBufferedOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="BufferedOutputStreamClass"
            c:type="GBufferedOutputStreamClass"
            glib:is-gtype-struct-for="BufferedOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BufferedOutputStreamPrivate"
            c:type="GBufferedOutputStreamPrivate">
    </record>
    <class name="Cancellable"
           c:type="GCancellable"
           doc="Allows actions to be cancelled."
           parent="GObject.Object"
           glib:type-name="GCancellable"
           glib:get-type="g_cancellable_get_type"
           glib:type-struct="CancellableClass">
      <constructor name="new" c:identifier="g_cancellable_new">
        <return-value transfer-ownership="full">
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </constructor>
      <function name="get_current" c:identifier="g_cancellable_get_current">
        <return-value transfer-ownership="full">
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </function>
      <method name="is_cancelled" c:identifier="g_cancellable_is_cancelled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_error_if_cancelled"
              c:identifier="g_cancellable_set_error_if_cancelled"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_cancellable_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="make_pollfd" c:identifier="g_cancellable_make_pollfd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pollfd" transfer-ownership="none">
            <type name="GLib.PollFD" c:type="GPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_fd" c:identifier="g_cancellable_release_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="push_current" c:identifier="g_cancellable_push_current">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="pop_current" c:identifier="g_cancellable_pop_current">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="g_cancellable_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="connect" c:identifier="g_cancellable_connect">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect" c:identifier="g_cancellable_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="ulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel" c:identifier="g_cancellable_cancel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CancellablePrivate" c:type="GCancellablePrivate*"/>
      </field>
      <glib:signal name="cancelled">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CancellableClass"
            c:type="GCancellableClass"
            glib:is-gtype-struct-for="Cancellable">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="cancelled">
        <callback name="cancelled" c:type="cancelled">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CancellablePrivate" c:type="GCancellablePrivate">
    </record>
    <class name="CharsetConverter"
           c:type="GCharsetConverter"
           parent="GObject.Object"
           glib:type-name="GCharsetConverter"
           glib:get-type="g_charset_converter_get_type"
           glib:type-struct="CharsetConverterClass">
      <implements name="Converter"/>
      <implements name="Initable"/>
      <constructor name="new"
                   c:identifier="g_charset_converter_new"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="CharsetConverter" c:type="GCharsetConverter*"/>
        </return-value>
        <parameters>
          <parameter name="to_charset" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="from_charset" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_use_fallback"
              c:identifier="g_charset_converter_set_use_fallback">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="use_fallback" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_use_fallback"
              c:identifier="g_charset_converter_get_use_fallback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_num_fallbacks"
              c:identifier="g_charset_converter_get_num_fallbacks">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <property name="from-charset" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="to-charset" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="use-fallback" writable="1" construct="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="CharsetConverterClass"
            c:type="GCharsetConverterClass"
            glib:is-gtype-struct-for="CharsetConverter">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Converter"
               c:type="GConverter"
               doc="Seek object for streaming operations."
               version="2.24"
               glib:type-name="GConverter"
               glib:get-type="g_converter_get_type"
               glib:type-struct="ConverterIface">
      <virtual-method name="convert" invoker="convert" throws="1">
        <return-value transfer-ownership="full">
          <type name="ConverterResult" c:type="GConverterResult"/>
        </return-value>
        <parameters>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="inbuf_size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="outbuf_size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="ConverterFlags" c:type="GConverterFlags"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reset" invoker="reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="convert" c:identifier="g_converter_convert" throws="1">
        <return-value transfer-ownership="full">
          <type name="ConverterResult" c:type="GConverterResult"/>
        </return-value>
        <parameters>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="inbuf_size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="outbuf_size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="ConverterFlags" c:type="GConverterFlags"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="g_converter_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </interface>
    <bitfield name="ConverterFlags"
              doc="Flags used when calling a g_converter_convert()."
              version="2.24"
              glib:type-name="GConverterFlags"
              glib:get-type="g_converter_flags_get_type"
              c:type="GConverterFlags">
      <member name="none"
              value="0"
              c:identifier="G_CONVERTER_NO_FLAGS"
              glib:nick="none"/>
      <member name="input_at_end"
              value="1"
              c:identifier="G_CONVERTER_INPUT_AT_END"
              glib:nick="input-at-end"/>
      <member name="flush"
              value="2"
              c:identifier="G_CONVERTER_FLUSH"
              glib:nick="flush"/>
    </bitfield>
    <record name="ConverterIface"
            c:type="GConverterIface"
            glib:is-gtype-struct-for="Converter"
            doc="Provides an interface for converting data from one type
to another type. The conversion can be stateful
and may fail at any place."
            version="2.24">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="convert">
        <callback name="convert" c:type="convert" throws="1">
          <return-value transfer-ownership="full">
            <type name="ConverterResult" c:type="GConverterResult"/>
          </return-value>
          <parameters>
            <parameter name="converter" transfer-ownership="none">
              <type name="Converter" c:type="GConverter*"/>
            </parameter>
            <parameter name="inbuf" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="inbuf_size" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="outbuf" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="outbuf_size" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="ConverterFlags" c:type="GConverterFlags"/>
            </parameter>
            <parameter name="bytes_read"
                       direction="out"
                       transfer-ownership="full">
              <type name="size_t" c:type="gsize*"/>
            </parameter>
            <parameter name="bytes_written"
                       direction="out"
                       transfer-ownership="full">
              <type name="size_t" c:type="gsize*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset" c:type="reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="converter" transfer-ownership="none">
              <type name="Converter" c:type="GConverter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ConverterInputStream"
           c:type="GConverterInputStream"
           doc="An implementation of #GFilterInputStream that allows data
conversion."
           parent="FilterInputStream"
           glib:type-name="GConverterInputStream"
           glib:get-type="g_converter_input_stream_get_type"
           glib:type-struct="ConverterInputStreamClass">
      <constructor name="new" c:identifier="g_converter_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="ConverterInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="converter" transfer-ownership="none">
            <type name="Converter" c:type="GConverter*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_converter"
              c:identifier="g_converter_input_stream_get_converter">
        <return-value transfer-ownership="full">
          <type name="Converter" c:type="GConverter*"/>
        </return-value>
      </method>
      <property name="converter" writable="1" construct-only="1">
        <type name="Converter" c:type="GConverter"/>
      </property>
      <field name="parent_instance">
        <type name="FilterInputStream" c:type="GFilterInputStream"/>
      </field>
      <field name="priv">
        <type name="ConverterInputStreamPrivate"
              c:type="GConverterInputStreamPrivate*"/>
      </field>
    </class>
    <record name="ConverterInputStreamClass"
            c:type="GConverterInputStreamClass"
            glib:is-gtype-struct-for="ConverterInputStream">
      <field name="parent_class">
        <type name="FilterInputStreamClass" c:type="GFilterInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ConverterInputStreamPrivate"
            c:type="GConverterInputStreamPrivate">
    </record>
    <class name="ConverterOutputStream"
           c:type="GConverterOutputStream"
           doc="An implementation of #GFilterOutputStream that allows data
conversion."
           parent="FilterOutputStream"
           glib:type-name="GConverterOutputStream"
           glib:get-type="g_converter_output_stream_get_type"
           glib:type-struct="ConverterOutputStreamClass">
      <constructor name="new" c:identifier="g_converter_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="ConverterOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="converter" transfer-ownership="none">
            <type name="Converter" c:type="GConverter*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_converter"
              c:identifier="g_converter_output_stream_get_converter">
        <return-value transfer-ownership="full">
          <type name="Converter" c:type="GConverter*"/>
        </return-value>
      </method>
      <property name="converter" writable="1" construct-only="1">
        <type name="Converter" c:type="GConverter"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="ConverterOutputStreamPrivate"
              c:type="GConverterOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="ConverterOutputStreamClass"
            c:type="GConverterOutputStreamClass"
            glib:is-gtype-struct-for="ConverterOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ConverterOutputStreamPrivate"
            c:type="GConverterOutputStreamPrivate">
    </record>
    <enumeration name="ConverterResult"
                 doc="Results returned from g_converter_convert()."
                 version="2.24"
                 glib:type-name="GConverterResult"
                 glib:get-type="g_converter_result_get_type"
                 c:type="GConverterResult">
      <member name="error"
              value="0"
              c:identifier="G_CONVERTER_ERROR"
              glib:nick="error"/>
      <member name="converted"
              value="1"
              c:identifier="G_CONVERTER_CONVERTED"
              glib:nick="converted"/>
      <member name="finished"
              value="2"
              c:identifier="G_CONVERTER_FINISHED"
              glib:nick="finished"/>
      <member name="flushed"
              value="3"
              c:identifier="G_CONVERTER_FLUSHED"
              glib:nick="flushed"/>
    </enumeration>
    <constant name="DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME"
              value="gio-desktop-app-info-lookup">
      <type name="utf8"/>
    </constant>
    <class name="DataInputStream"
           c:type="GDataInputStream"
           doc="An implementation of #GBufferedInputStream that allows for high-level
data manipulation of arbitrary data (including binary operations)."
           parent="BufferedInputStream"
           glib:type-name="GDataInputStream"
           glib:get-type="g_data_input_stream_get_type"
           glib:type-struct="DataInputStreamClass">
      <constructor name="new" c:identifier="g_data_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="DataInputStream" c:type="GDataInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_input_stream_set_byte_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="order" transfer-ownership="none">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_input_stream_get_byte_order">
        <return-value transfer-ownership="full">
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
      </method>
      <method name="set_newline_type"
              c:identifier="g_data_input_stream_set_newline_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="DataStreamNewlineType"
                  c:type="GDataStreamNewlineType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_newline_type"
              c:identifier="g_data_input_stream_get_newline_type">
        <return-value transfer-ownership="full">
          <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
        </return-value>
      </method>
      <method name="read_byte"
              c:identifier="g_data_input_stream_read_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint8" c:type="guchar"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int16"
              c:identifier="g_data_input_stream_read_int16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int16" c:type="gint16"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint16"
              c:identifier="g_data_input_stream_read_uint16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int32"
              c:identifier="g_data_input_stream_read_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint32"
              c:identifier="g_data_input_stream_read_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int64"
              c:identifier="g_data_input_stream_read_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint64"
              c:identifier="g_data_input_stream_read_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line"
              c:identifier="g_data_input_stream_read_line"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line_async"
              c:identifier="g_data_input_stream_read_line_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line_finish"
              c:identifier="g_data_input_stream_read_line_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until"
              c:identifier="g_data_input_stream_read_until"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stop_chars" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until_async"
              c:identifier="g_data_input_stream_read_until_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stop_chars" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until_finish"
              c:identifier="g_data_input_stream_read_until_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order" writable="1">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <property name="newline-type" writable="1">
        <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
      </property>
      <field name="parent_instance">
        <type name="BufferedInputStream" c:type="GBufferedInputStream"/>
      </field>
      <field name="priv">
        <type name="DataInputStreamPrivate" c:type="GDataInputStreamPrivate*"/>
      </field>
    </class>
    <record name="DataInputStreamClass"
            c:type="GDataInputStreamClass"
            glib:is-gtype-struct-for="DataInputStream">
      <field name="parent_class">
        <type name="BufferedInputStreamClass"
              c:type="GBufferedInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataInputStreamPrivate" c:type="GDataInputStreamPrivate">
    </record>
    <class name="DataOutputStream"
           c:type="GDataOutputStream"
           doc="An implementation of #GBufferedOutputStream that allows for high-level
data manipulation of arbitrary data (including binary operations)."
           parent="FilterOutputStream"
           glib:type-name="GDataOutputStream"
           glib:get-type="g_data_output_stream_get_type"
           glib:type-struct="DataOutputStreamClass">
      <constructor name="new" c:identifier="g_data_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="DataOutputStream" c:type="GDataOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_output_stream_set_byte_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="order" transfer-ownership="none">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_output_stream_get_byte_order">
        <return-value transfer-ownership="full">
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
      </method>
      <method name="put_byte"
              c:identifier="g_data_output_stream_put_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint8" c:type="guchar"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int16"
              c:identifier="g_data_output_stream_put_int16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int16" c:type="gint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint16"
              c:identifier="g_data_output_stream_put_uint16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int32"
              c:identifier="g_data_output_stream_put_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint32"
              c:identifier="g_data_output_stream_put_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int64"
              c:identifier="g_data_output_stream_put_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint64"
              c:identifier="g_data_output_stream_put_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string"
              c:identifier="g_data_output_stream_put_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order" writable="1">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="DataOutputStreamPrivate"
              c:type="GDataOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="DataOutputStreamClass"
            c:type="GDataOutputStreamClass"
            glib:is-gtype-struct-for="DataOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataOutputStreamPrivate" c:type="GDataOutputStreamPrivate">
    </record>
    <enumeration name="DataStreamByteOrder"
                 doc="#GDataStreamByteOrder is used to ensure proper endianness of streaming data sources
across various machine architectures."
                 glib:type-name="GDataStreamByteOrder"
                 glib:get-type="g_data_stream_byte_order_get_type"
                 c:type="GDataStreamByteOrder">
      <member name="big_endian"
              value="0"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN"
              glib:nick="big-endian"/>
      <member name="little_endian"
              value="1"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN"
              glib:nick="little-endian"/>
      <member name="host_endian"
              value="2"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN"
              glib:nick="host-endian"/>
    </enumeration>
    <enumeration name="DataStreamNewlineType"
                 doc="#GDataStreamNewlineType is used when checking for or setting the line endings for a given file."
                 glib:type-name="GDataStreamNewlineType"
                 glib:get-type="g_data_stream_newline_type_get_type"
                 c:type="GDataStreamNewlineType">
      <member name="lf"
              value="0"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_LF"
              glib:nick="lf"/>
      <member name="cr"
              value="1"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR"
              glib:nick="cr"/>
      <member name="cr_lf"
              value="2"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR_LF"
              glib:nick="cr-lf"/>
      <member name="any"
              value="3"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_ANY"
              glib:nick="any"/>
    </enumeration>
    <class name="DesktopAppInfo"
           c:type="GDesktopAppInfo"
           parent="GObject.Object"
           glib:type-name="GDesktopAppInfo"
           glib:get-type="g_desktop_app_info_get_type"
           glib:type-struct="DesktopAppInfoClass">
      <implements name="AppInfo"/>
      <constructor name="new_from_filename"
                   c:identifier="g_desktop_app_info_new_from_filename">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_keyfile"
                   c:identifier="g_desktop_app_info_new_from_keyfile">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="key_file" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="g_desktop_app_info_new">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="set_desktop_env"
                c:identifier="g_desktop_app_info_set_desktop_env">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_env" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_filename"
              c:identifier="g_desktop_app_info_get_filename">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_is_hidden"
              c:identifier="g_desktop_app_info_get_is_hidden">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </class>
    <record name="DesktopAppInfoClass"
            c:type="GDesktopAppInfoClass"
            glib:is-gtype-struct-for="DesktopAppInfo">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="DesktopAppInfoLookup"
               c:type="GDesktopAppInfoLookup"
               doc="Interface that is used by backends to associate default
handlers with URI schemes."
               glib:type-name="GDesktopAppInfoLookup"
               glib:get-type="g_desktop_app_info_lookup_get_type"
               glib:type-struct="DesktopAppInfoLookupIface">
      <virtual-method name="get_default_for_uri_scheme"
                      invoker="get_default_for_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_default_for_uri_scheme"
              c:identifier="g_desktop_app_info_lookup_get_default_for_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="DesktopAppInfoLookupIface"
            c:type="GDesktopAppInfoLookupIface"
            glib:is-gtype-struct-for="DesktopAppInfoLookup">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_default_for_uri_scheme">
        <callback name="get_default_for_uri_scheme"
                  c:type="get_default_for_uri_scheme">
          <return-value transfer-ownership="full">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </return-value>
          <parameters>
            <parameter name="lookup" transfer-ownership="none">
              <type name="DesktopAppInfoLookup"
                    c:type="GDesktopAppInfoLookup*"/>
            </parameter>
            <parameter name="uri_scheme" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="Drive"
               c:type="GDrive"
               doc="Opaque drive object."
               glib:type-name="GDrive"
               glib:get-type="g_drive_get_type"
               glib:type-struct="DriveIface">
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_volumes" invoker="has_volumes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volumes" invoker="get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_media_removable" invoker="is_media_removable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_media" invoker="has_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_media_check_automatic"
                      invoker="is_media_check_automatic">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_poll_for_media" invoker="can_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_for_media" invoker="poll_for_media">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_for_media_finish"
                      invoker="poll_for_media_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_identifier" invoker="get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_identifiers"
                      invoker="enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="get_start_stop_type" invoker="get_start_stop_type">
        <return-value transfer-ownership="full">
          <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_start" invoker="can_start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_start_degraded" invoker="can_start_degraded">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="start" invoker="start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_finish" invoker="start_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_stop" invoker="can_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="stop" invoker="stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_finish" invoker="stop_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="g_drive_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_drive_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="has_volumes" c:identifier="g_drive_has_volumes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_volumes" c:identifier="g_drive_get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </method>
      <method name="is_media_removable"
              c:identifier="g_drive_is_media_removable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_media" c:identifier="g_drive_has_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_media_check_automatic"
              c:identifier="g_drive_is_media_check_automatic">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_poll_for_media"
              c:identifier="g_drive_can_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_drive_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="eject" c:identifier="g_drive_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_drive_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_for_media" c:identifier="g_drive_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_for_media_finish"
              c:identifier="g_drive_poll_for_media_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_identifier" c:identifier="g_drive_get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_identifiers"
              c:identifier="g_drive_enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_start_stop_type"
              c:identifier="g_drive_get_start_stop_type">
        <return-value transfer-ownership="full">
          <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
        </return-value>
      </method>
      <method name="can_start" c:identifier="g_drive_can_start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_start_degraded"
              c:identifier="g_drive_can_start_degraded">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="start" c:identifier="g_drive_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_finish"
              c:identifier="g_drive_start_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_stop" c:identifier="g_drive_can_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="g_drive_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_finish" c:identifier="g_drive_stop_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_drive_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_drive_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disconnected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="eject-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="stop-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DriveIface"
            c:type="GDriveIface"
            glib:is-gtype-struct-for="Drive"
            doc="the #GDrive doesn&apos;t have one.
of identifiers which the #GDrive has.
Interface for creating #GDrive implementations.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="disconnected">
        <callback name="disconnected" c:type="disconnected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_button">
        <callback name="eject_button" c:type="eject_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_volumes">
        <callback name="has_volumes" c:type="has_volumes">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volumes">
        <callback name="get_volumes" c:type="get_volumes">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_media_removable">
        <callback name="is_media_removable" c:type="is_media_removable">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_media">
        <callback name="has_media" c:type="has_media">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_media_check_automatic">
        <callback name="is_media_check_automatic"
                  c:type="is_media_check_automatic">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_poll_for_media">
        <callback name="can_poll_for_media" c:type="can_poll_for_media">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_for_media">
        <callback name="poll_for_media" c:type="poll_for_media">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_for_media_finish">
        <callback name="poll_for_media_finish"
                  c:type="poll_for_media_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_identifier">
        <callback name="get_identifier" c:type="get_identifier">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="kind" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_identifiers">
        <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
          <return-value transfer-ownership="full">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_start_stop_type">
        <callback name="get_start_stop_type" c:type="get_start_stop_type">
          <return-value transfer-ownership="full">
            <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_start">
        <callback name="can_start" c:type="can_start">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_start_degraded">
        <callback name="can_start_degraded" c:type="can_start_degraded">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start">
        <callback name="start" c:type="start">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_finish">
        <callback name="start_finish" c:type="start_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_stop">
        <callback name="can_stop" c:type="can_stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop" c:type="stop">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_finish">
        <callback name="stop_finish" c:type="stop_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_button">
        <callback name="stop_button" c:type="stop_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="DriveStartFlags"
                 doc="Flags used when starting a drive."
                 version="2.22"
                 glib:type-name="GDriveStartFlags"
                 glib:get-type="g_drive_start_flags_get_type"
                 c:type="GDriveStartFlags">
      <member name="none"
              value="0"
              c:identifier="G_DRIVE_START_NONE"
              glib:nick="none"/>
    </enumeration>
    <enumeration name="DriveStartStopType"
                 doc="start/stop.
shut down the drive and e.g. power down the port the drive is
attached to.
for connecting/disconnect to the drive over the network.
assemble/disassemble a virtual drive from several physical
drives.
unlock/lock the disk (for example using the ATA &lt;quote&gt;SECURITY
UNLOCK DEVICE&lt;/quote&gt; command)
Enumeration describing how a drive can be started/stopped."
                 version="2.22"
                 glib:type-name="GDriveStartStopType"
                 glib:get-type="g_drive_start_stop_type_get_type"
                 c:type="GDriveStartStopType">
      <member name="unknown"
              value="0"
              c:identifier="G_DRIVE_START_STOP_TYPE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="shutdown"
              value="1"
              c:identifier="G_DRIVE_START_STOP_TYPE_SHUTDOWN"
              glib:nick="shutdown"/>
      <member name="network"
              value="2"
              c:identifier="G_DRIVE_START_STOP_TYPE_NETWORK"
              glib:nick="network"/>
      <member name="multidisk"
              value="3"
              c:identifier="G_DRIVE_START_STOP_TYPE_MULTIDISK"
              glib:nick="multidisk"/>
      <member name="password"
              value="4"
              c:identifier="G_DRIVE_START_STOP_TYPE_PASSWORD"
              glib:nick="password"/>
    </enumeration>
    <class name="Emblem"
           c:type="GEmblem"
           doc="An object for Emblems"
           parent="GObject.Object"
           glib:type-name="GEmblem"
           glib:get-type="g_emblem_get_type"
           glib:type-struct="EmblemClass">
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_emblem_new">
        <return-value transfer-ownership="full">
          <type name="Emblem" c:type="GEmblem*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_origin"
                   c:identifier="g_emblem_new_with_origin">
        <return-value transfer-ownership="full">
          <type name="Emblem" c:type="GEmblem*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="origin" transfer-ownership="none">
            <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon" c:identifier="g_emblem_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_origin" c:identifier="g_emblem_get_origin">
        <return-value transfer-ownership="full">
          <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
        </return-value>
      </method>
      <property name="icon" writable="1" construct-only="1">
        <type name="GObject.Object" c:type="GObject"/>
      </property>
      <property name="origin" writable="1" construct-only="1">
        <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
      </property>
    </class>
    <record name="EmblemClass"
            c:type="GEmblemClass"
            glib:is-gtype-struct-for="Emblem">
    </record>
    <enumeration name="EmblemOrigin"
                 doc="GEmblemOrigin is used to add information about the origin of the emblem
to #GEmblem."
                 version="2.18"
                 glib:type-name="GEmblemOrigin"
                 glib:get-type="g_emblem_origin_get_type"
                 c:type="GEmblemOrigin">
      <member name="unknown"
              value="0"
              c:identifier="G_EMBLEM_ORIGIN_UNKNOWN"
              glib:nick="unknown"/>
      <member name="device"
              value="1"
              c:identifier="G_EMBLEM_ORIGIN_DEVICE"
              glib:nick="device"/>
      <member name="livemetadata"
              value="2"
              c:identifier="G_EMBLEM_ORIGIN_LIVEMETADATA"
              glib:nick="livemetadata"/>
      <member name="tag"
              value="3"
              c:identifier="G_EMBLEM_ORIGIN_TAG"
              glib:nick="tag"/>
    </enumeration>
    <class name="EmblemedIcon"
           c:type="GEmblemedIcon"
           doc="An implementation of #GIcon for icons with emblems."
           parent="GObject.Object"
           glib:type-name="GEmblemedIcon"
           glib:get-type="g_emblemed_icon_get_type"
           glib:type-struct="EmblemedIconClass">
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_emblemed_icon_new">
        <return-value transfer-ownership="full">
          <type name="EmblemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="emblem" transfer-ownership="none">
            <type name="Emblem" c:type="GEmblem*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon" c:identifier="g_emblemed_icon_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_emblems" c:identifier="g_emblemed_icon_get_emblems">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </method>
      <method name="add_emblem" c:identifier="g_emblemed_icon_add_emblem">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="emblem" transfer-ownership="none">
            <type name="Emblem" c:type="GEmblem*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="EmblemedIconClass"
            c:type="GEmblemedIconClass"
            glib:is-gtype-struct-for="EmblemedIcon">
    </record>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_DELETE"
              value="access::can-delete">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE"
              value="access::can-execute">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_READ" value="access::can-read">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_RENAME"
              value="access::can-rename">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_TRASH" value="access::can-trash">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_WRITE" value="access::can-write">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_DOS_IS_ARCHIVE" value="dos::is-archive">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_DOS_IS_SYSTEM" value="dos::is-system">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ETAG_VALUE" value="etag::value">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_FREE" value="filesystem::free">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_READONLY"
              value="filesystem::readonly">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_SIZE" value="filesystem::size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_TYPE" value="filesystem::type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW"
              value="filesystem::use-preview">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_GVFS_BACKEND" value="gvfs::backend">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ID_FILE" value="id::file">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ID_FILESYSTEM" value="id::filesystem">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT"
              value="mountable::can-eject">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT"
              value="mountable::can-mount">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL"
              value="mountable::can-poll">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START"
              value="mountable::can-start">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED"
              value="mountable::can-start-degraded">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP"
              value="mountable::can-stop">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT"
              value="mountable::can-unmount">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI"
              value="mountable::hal-udi">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC"
              value="mountable::is-media-check-automatic">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE"
              value="mountable::start-stop-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE"
              value="mountable::unix-device">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE"
              value="mountable::unix-device-file">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_GROUP" value="owner::group">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_USER" value="owner::user">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_USER_REAL" value="owner::user-real">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_PREVIEW_ICON" value="preview::icon">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_SELINUX_CONTEXT" value="selinux::context">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE"
              value="standard::allocated-size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE"
              value="standard::content-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_COPY_NAME"
              value="standard::copy-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_DESCRIPTION"
              value="standard::description">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME"
              value="standard::display-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_EDIT_NAME"
              value="standard::edit-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE"
              value="standard::fast-content-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_ICON" value="standard::icon">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_BACKUP"
              value="standard::is-backup">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_HIDDEN"
              value="standard::is-hidden">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_SYMLINK"
              value="standard::is-symlink">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL"
              value="standard::is-virtual">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_NAME" value="standard::name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SIZE" value="standard::size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SORT_ORDER"
              value="standard::sort-order">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET"
              value="standard::symlink-target">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_TARGET_URI"
              value="standard::target-uri">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_TYPE" value="standard::type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_THUMBNAILING_FAILED"
              value="thumbnail::failed">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_THUMBNAIL_PATH" value="thumbnail::path">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_ACCESS" value="time::access">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_ACCESS_USEC" value="time::access-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CHANGED" value="time::changed">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CHANGED_USEC"
              value="time::changed-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CREATED" value="time::created">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CREATED_USEC"
              value="time::created-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_MODIFIED" value="time::modified">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_MODIFIED_USEC"
              value="time::modified-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_DELETION_DATE"
              value="trash::deletion-date">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_ITEM_COUNT" value="trash::item-count">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_ORIG_PATH" value="trash::orig-path">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_BLOCKS" value="unix::blocks">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_BLOCK_SIZE" value="unix::block-size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_DEVICE" value="unix::device">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_GID" value="unix::gid">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_INODE" value="unix::inode">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT"
              value="unix::is-mountpoint">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_MODE" value="unix::mode">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_NLINK" value="unix::nlink">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_RDEV" value="unix::rdev">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_UID" value="unix::uid">
      <type name="utf8"/>
    </constant>
    <interface name="File"
               c:type="GFile"
               doc="A handle to an object implementing the #GFileIface interface.
Generally stores a location within the file system. Handles do not
necessarily represent files or directories that currently exist."
               glib:type-name="GFile"
               glib:get-type="g_file_get_type"
               glib:type-struct="FileIface">
      <virtual-method name="dup" invoker="dup">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="hash">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file2" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_native" invoker="is_native">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_uri_scheme" invoker="has_uri_scheme">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_uri_scheme" invoker="get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_basename" invoker="get_basename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_path" invoker="get_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_parse_name" invoker="get_parse_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_parent" invoker="get_parent">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="prefix_matches">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_relative_path" invoker="get_relative_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="descendant" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="resolve_relative_path"
                      invoker="resolve_relative_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="relative_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_child_for_display_name"
                      invoker="get_child_for_display_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children"
                      invoker="enumerate_children"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children_async"
                      invoker="enumerate_children_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children_finish"
                      invoker="enumerate_children_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish"
                      invoker="query_info_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info"
                      invoker="query_filesystem_info"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info_async"
                      invoker="query_filesystem_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info_finish"
                      invoker="query_filesystem_info_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount"
                      invoker="find_enclosing_mount"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount_async"
                      invoker="find_enclosing_mount_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount_finish"
                      invoker="find_enclosing_mount_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name"
                      invoker="set_display_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name_async"
                      invoker="set_display_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name_finish"
                      invoker="set_display_name_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_settable_attributes"
                      invoker="query_settable_attributes"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_writable_namespaces"
                      invoker="query_writable_namespaces"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attribute" invoker="set_attribute" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_from_info"
                      invoker="set_attributes_from_info"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_async"
                      invoker="set_attributes_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_finish"
                      invoker="set_attributes_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_fn" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_async" invoker="read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_finish" invoker="read_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to" invoker="append_to" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to_async" invoker="append_to_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to_finish"
                      invoker="append_to_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create" invoker="create" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_async" invoker="create_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_finish" invoker="create_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace" invoker="replace" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_async" invoker="replace_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="7">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_finish"
                      invoker="replace_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_file" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="trash" invoker="trash" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_directory"
                      invoker="make_directory"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_symbolic_link"
                      invoker="make_symbolic_link"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="symlink_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy" invoker="copy" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_async" invoker="copy_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="8">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_finish" invoker="copy_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move" invoker="move" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_mountable" invoker="mount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_mountable_finish"
                      invoker="mount_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable" invoker="unmount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_finish"
                      invoker="unmount_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable" invoker="eject_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_finish"
                      invoker="eject_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_enclosing_volume"
                      invoker="mount_enclosing_volume">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_enclosing_volume_finish"
                      invoker="mount_enclosing_volume_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="monitor_dir" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="monitor_file" invoker="monitor_file" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite"
                      invoker="open_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite_async"
                      invoker="open_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite_finish"
                      invoker="open_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite"
                      invoker="create_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite_async"
                      invoker="create_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite_finish"
                      invoker="create_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite"
                      invoker="replace_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite_async"
                      invoker="replace_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="7">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite_finish"
                      invoker="replace_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_mountable" invoker="start_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="start_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_mountable_finish"
                      invoker="start_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_mountable" invoker="stop_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_mountable_finish"
                      invoker="stop_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_with_operation"
                      invoker="unmount_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_with_operation_finish"
                      invoker="unmount_mountable_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_with_operation"
                      invoker="eject_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_with_operation_finish"
                      invoker="eject_mountable_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_mountable" invoker="poll_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_mountable_finish"
                      invoker="poll_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="dup" c:identifier="g_file_dup">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="g_file_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file2" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_basename" c:identifier="g_file_get_basename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_path" c:identifier="g_file_get_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_uri" c:identifier="g_file_get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_parse_name" c:identifier="g_file_get_parse_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_parent" c:identifier="g_file_get_parent">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="has_parent" c:identifier="g_file_has_parent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child" c:identifier="g_file_get_child">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_for_display_name"
              c:identifier="g_file_get_child_for_display_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_prefix" c:identifier="g_file_has_prefix">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_relative_path" c:identifier="g_file_get_relative_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="descendant" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="resolve_relative_path"
              c:identifier="g_file_resolve_relative_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="relative_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_native" c:identifier="g_file_is_native">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_uri_scheme" c:identifier="g_file_has_uri_scheme">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uri_scheme" c:identifier="g_file_get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="read" c:identifier="g_file_read" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_async" c:identifier="g_file_read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_finish" c:identifier="g_file_read_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to" c:identifier="g_file_append_to" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create" c:identifier="g_file_create" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace" c:identifier="g_file_replace" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to_async" c:identifier="g_file_append_to_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to_finish"
              c:identifier="g_file_append_to_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_async" c:identifier="g_file_create_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_finish"
              c:identifier="g_file_create_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_async" c:identifier="g_file_replace_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_finish"
              c:identifier="g_file_replace_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite"
              c:identifier="g_file_open_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite_async"
              c:identifier="g_file_open_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite_finish"
              c:identifier="g_file_open_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite"
              c:identifier="g_file_create_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite_async"
              c:identifier="g_file_create_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite_finish"
              c:identifier="g_file_create_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite"
              c:identifier="g_file_replace_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite_async"
              c:identifier="g_file_replace_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite_finish"
              c:identifier="g_file_replace_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_exists" c:identifier="g_file_query_exists">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_file_type" c:identifier="g_file_query_file_type">
        <return-value transfer-ownership="full">
          <type name="FileType" c:type="GFileType"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info" c:identifier="g_file_query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async" c:identifier="g_file_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info"
              c:identifier="g_file_query_filesystem_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info_async"
              c:identifier="g_file_query_filesystem_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info_finish"
              c:identifier="g_file_query_filesystem_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount"
              c:identifier="g_file_find_enclosing_mount"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount_async"
              c:identifier="g_file_find_enclosing_mount_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount_finish"
              c:identifier="g_file_find_enclosing_mount_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children"
              c:identifier="g_file_enumerate_children"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children_async"
              c:identifier="g_file_enumerate_children_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children_finish"
              c:identifier="g_file_enumerate_children_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="g_file_set_display_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name_async"
              c:identifier="g_file_set_display_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name_finish"
              c:identifier="g_file_set_display_name_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete" c:identifier="g_file_delete" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trash" c:identifier="g_file_trash" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="g_file_copy" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_async" c:identifier="g_file_copy_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="6">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_finish" c:identifier="g_file_copy_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="move" c:identifier="g_file_move" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_directory"
              c:identifier="g_file_make_directory"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_directory_with_parents"
              c:identifier="g_file_make_directory_with_parents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_symbolic_link"
              c:identifier="g_file_make_symbolic_link"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="symlink_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_settable_attributes"
              c:identifier="g_file_query_settable_attributes"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_writable_namespaces"
              c:identifier="g_file_query_writable_namespaces"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute"
              c:identifier="g_file_set_attribute"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_from_info"
              c:identifier="g_file_set_attributes_from_info"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_async"
              c:identifier="g_file_set_attributes_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_finish"
              c:identifier="g_file_set_attributes_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info" direction="out" transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_string"
              c:identifier="g_file_set_attribute_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_byte_string"
              c:identifier="g_file_set_attribute_byte_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint32"
              c:identifier="g_file_set_attribute_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int32"
              c:identifier="g_file_set_attribute_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint64"
              c:identifier="g_file_set_attribute_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int64"
              c:identifier="g_file_set_attribute_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_enclosing_volume"
              c:identifier="g_file_mount_enclosing_volume">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_enclosing_volume_finish"
              c:identifier="g_file_mount_enclosing_volume_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_mountable" c:identifier="g_file_mount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_mountable_finish"
              c:identifier="g_file_mount_mountable_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable" c:identifier="g_file_unmount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_finish"
              c:identifier="g_file_unmount_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_with_operation"
              c:identifier="g_file_unmount_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_with_operation_finish"
              c:identifier="g_file_unmount_mountable_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable" c:identifier="g_file_eject_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_finish"
              c:identifier="g_file_eject_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_with_operation"
              c:identifier="g_file_eject_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_with_operation_finish"
              c:identifier="g_file_eject_mountable_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_attributes"
              c:identifier="g_file_copy_attributes"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor_directory"
              c:identifier="g_file_monitor_directory"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor_file"
              c:identifier="g_file_monitor_file"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor" c:identifier="g_file_monitor" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_mountable" c:identifier="g_file_start_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="start_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_mountable_finish"
              c:identifier="g_file_start_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_mountable" c:identifier="g_file_stop_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_mountable_finish"
              c:identifier="g_file_stop_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_mountable" c:identifier="g_file_poll_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_mountable_finish"
              c:identifier="g_file_poll_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_default_handler"
              c:identifier="g_file_query_default_handler"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents"
              c:identifier="g_file_load_contents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="contents" direction="out" transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents_async"
              c:identifier="g_file_load_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents_finish"
              c:identifier="g_file_load_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="contents" direction="out" transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_partial_contents_async"
              c:identifier="g_file_load_partial_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="read_more_callback"
                     transfer-ownership="none"
                     scope="call">
            <type name="FileReadMoreCallback" c:type="GFileReadMoreCallback"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_partial_contents_finish"
              c:identifier="g_file_load_partial_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="contents" direction="out" transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents"
              c:identifier="g_file_replace_contents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="contents" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="new_etag"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents_async"
              c:identifier="g_file_replace_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="contents" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents_finish"
              c:identifier="g_file_replace_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="new_etag"
                     direction="out"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_thread_contexts"
              c:identifier="g_file_supports_thread_contexts">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </interface>
    <record name="FileAttributeInfo"
            c:type="GFileAttributeInfo"
            doc="Information about a specific attribute.">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="type" writable="1">
        <type name="FileAttributeType" c:type="GFileAttributeType"/>
      </field>
      <field name="flags" writable="1">
        <type name="FileAttributeInfoFlags" c:type="GFileAttributeInfoFlags"/>
      </field>
    </record>
    <bitfield name="FileAttributeInfoFlags"
              doc="Flags specifying the behaviour of an attribute."
              glib:type-name="GFileAttributeInfoFlags"
              glib:get-type="g_file_attribute_info_flags_get_type"
              c:type="GFileAttributeInfoFlags">
      <member name="none"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_INFO_NONE"
              glib:nick="none"/>
      <member name="copy_with_file"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE"
              glib:nick="copy-with-file"/>
      <member name="copy_when_moved"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED"
              glib:nick="copy-when-moved"/>
    </bitfield>
    <record name="FileAttributeInfoList"
            c:type="GFileAttributeInfoList"
            doc="Acts as a lightweight registry for possible valid file attributes.
The registry stores Key-Value pair formats as #GFileAttributeInfo&lt;!-- --&gt;s."
            glib:type-name="GFileAttributeInfoList"
            glib:get-type="g_file_attribute_info_list_get_type">
      <field name="infos" writable="1">
        <type name="FileAttributeInfo" c:type="GFileAttributeInfo*"/>
      </field>
      <field name="n_infos" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <constructor name="new" c:identifier="g_file_attribute_info_list_new">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </constructor>
      <method name="ref" c:identifier="g_file_attribute_info_list_ref">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_file_attribute_info_list_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="dup" c:identifier="g_file_attribute_info_list_dup">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </method>
      <method name="lookup" c:identifier="g_file_attribute_info_list_lookup">
        <return-value transfer-ownership="none">
          <type name="FileAttributeInfo" c:type="GFileAttributeInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add" c:identifier="g_file_attribute_info_list_add">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileAttributeInfoFlags"
                  c:type="GFileAttributeInfoFlags"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="FileAttributeMatcher"
            c:type="GFileAttributeMatcher"
            doc="Determines if a string matches a file attribute.">
      <constructor name="new" c:identifier="g_file_attribute_matcher_new">
        <return-value transfer-ownership="full">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref" c:identifier="g_file_attribute_matcher_ref">
        <return-value transfer-ownership="full">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_file_attribute_matcher_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="matches" c:identifier="g_file_attribute_matcher_matches">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="matches_only"
              c:identifier="g_file_attribute_matcher_matches_only">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_namespace"
              c:identifier="g_file_attribute_matcher_enumerate_namespace">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="ns" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_next"
              c:identifier="g_file_attribute_matcher_enumerate_next">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="FileAttributeStatus"
                 doc="Used by g_file_set_attributes_from_info() when setting file attributes."
                 glib:type-name="GFileAttributeStatus"
                 glib:get-type="g_file_attribute_status_get_type"
                 c:type="GFileAttributeStatus">
      <member name="unset"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_UNSET"
              glib:nick="unset"/>
      <member name="set"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_SET"
              glib:nick="set"/>
      <member name="error_setting"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING"
              glib:nick="error-setting"/>
    </enumeration>
    <enumeration name="FileAttributeType"
                 doc="The data types for file attributes."
                 glib:type-name="GFileAttributeType"
                 glib:get-type="g_file_attribute_type_get_type"
                 c:type="GFileAttributeType">
      <member name="invalid"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="string"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_STRING"
              glib:nick="string"/>
      <member name="byte_string"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING"
              glib:nick="byte-string"/>
      <member name="boolean"
              value="3"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BOOLEAN"
              glib:nick="boolean"/>
      <member name="uint32"
              value="4"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT32"
              glib:nick="uint32"/>
      <member name="int32"
              value="5"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT32"
              glib:nick="int32"/>
      <member name="uint64"
              value="6"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT64"
              glib:nick="uint64"/>
      <member name="int64"
              value="7"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT64"
              glib:nick="int64"/>
      <member name="object"
              value="8"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_OBJECT"
              glib:nick="object"/>
      <member name="stringv"
              value="9"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_STRINGV"
              glib:nick="stringv"/>
    </enumeration>
    <bitfield name="FileCopyFlags"
              doc="Flags used when copying or moving files."
              glib:type-name="GFileCopyFlags"
              glib:get-type="g_file_copy_flags_get_type"
              c:type="GFileCopyFlags">
      <member name="none"
              value="0"
              c:identifier="G_FILE_COPY_NONE"
              glib:nick="none"/>
      <member name="overwrite"
              value="1"
              c:identifier="G_FILE_COPY_OVERWRITE"
              glib:nick="overwrite"/>
      <member name="backup"
              value="2"
              c:identifier="G_FILE_COPY_BACKUP"
              glib:nick="backup"/>
      <member name="nofollow_symlinks"
              value="4"
              c:identifier="G_FILE_COPY_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
      <member name="all_metadata"
              value="8"
              c:identifier="G_FILE_COPY_ALL_METADATA"
              glib:nick="all-metadata"/>
      <member name="no_fallback_for_move"
              value="16"
              c:identifier="G_FILE_COPY_NO_FALLBACK_FOR_MOVE"
              glib:nick="no-fallback-for-move"/>
      <member name="target_default_perms"
              value="32"
              c:identifier="G_FILE_COPY_TARGET_DEFAULT_PERMS"
              glib:nick="target-default-perms"/>
    </bitfield>
    <bitfield name="FileCreateFlags"
              doc="accessed by the current user.
as if it didn&apos;t exist before. Don&apos;t try to keep any old
permissions, replace instead of following links. This
is generally useful if you&apos;re doing a &quot;copy over&quot;
rather than a &quot;save new version of&quot; replace operation.
You can think of it as &quot;unlink destination&quot; before
writing to it, although the implementation may not
be exactly like that. Since 2.20
Flags used when an operation may create a file."
              glib:type-name="GFileCreateFlags"
              glib:get-type="g_file_create_flags_get_type"
              c:type="GFileCreateFlags">
      <member name="none"
              value="0"
              c:identifier="G_FILE_CREATE_NONE"
              glib:nick="none"/>
      <member name="private"
              value="1"
              c:identifier="G_FILE_CREATE_PRIVATE"
              glib:nick="private"/>
      <member name="replace_destination"
              value="2"
              c:identifier="G_FILE_CREATE_REPLACE_DESTINATION"
              glib:nick="replace-destination"/>
    </bitfield>
    <interface name="FileDescriptorBased"
               c:type="GFileDescriptorBased"
               doc="An interface for file descriptor based io objects."
               glib:type-name="GFileDescriptorBased"
               glib:get-type="g_file_descriptor_based_get_type"
               glib:type-struct="FileDescriptorBasedIface">
      <virtual-method name="get_fd" invoker="get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <method name="get_fd" c:identifier="g_file_descriptor_based_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
    </interface>
    <record name="FileDescriptorBasedIface"
            c:type="GFileDescriptorBasedIface"
            glib:is-gtype-struct-for="FileDescriptorBased">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_fd">
        <callback name="get_fd" c:type="get_fd">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="fd_based" transfer-ownership="none">
              <type name="FileDescriptorBased" c:type="GFileDescriptorBased*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="FileEnumerator"
           c:type="GFileEnumerator"
           doc="A per matched file iterator."
           parent="GObject.Object"
           glib:type-name="GFileEnumerator"
           glib:get-type="g_file_enumerator_get_type"
           glib:type-struct="FileEnumeratorClass">
      <virtual-method name="next_file" invoker="next_file" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_files_async" invoker="next_files_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="num_files" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_files_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="next_file"
              c:identifier="g_file_enumerator_next_file"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_file_enumerator_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_async"
              c:identifier="g_file_enumerator_next_files_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="num_files" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_finish"
              c:identifier="g_file_enumerator_next_files_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_file_enumerator_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_file_enumerator_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_file_enumerator_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_file_enumerator_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending" c:identifier="g_file_enumerator_set_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pending" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_container"
              c:identifier="g_file_enumerator_get_container">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <property name="container" readable="0" writable="1" construct-only="1">
        <type name="File" c:type="GFile"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FileEnumeratorPrivate" c:type="GFileEnumeratorPrivate*"/>
      </field>
    </class>
    <record name="FileEnumeratorClass"
            c:type="GFileEnumeratorClass"
            glib:is-gtype-struct-for="FileEnumerator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="next_file">
        <callback name="next_file" c:type="next_file" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_files_async">
        <callback name="next_files_async" c:type="next_files_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="num_files" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_files_finish">
        <callback name="next_files_finish"
                  c:type="next_files_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileEnumeratorPrivate" c:type="GFileEnumeratorPrivate">
    </record>
    <class name="FileIOStream"
           c:type="GFileIOStream"
           doc="A subclass of GIOStream for opened files. This adds
a few file-specific operations and seeking and truncating.
#GFileIOStream implements GSeekable."
           parent="IOStream"
           glib:type-name="GFileIOStream"
           glib:get-type="g_file_io_stream_get_type"
           glib:type-struct="FileIOStreamClass">
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_etag" invoker="get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_io_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_io_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_io_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_io_stream_get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="IOStream" c:type="GIOStream"/>
      </field>
      <field name="priv">
        <type name="FileIOStreamPrivate" c:type="GFileIOStreamPrivate*"/>
      </field>
    </class>
    <record name="FileIOStreamClass"
            c:type="GFileIOStreamClass"
            glib:is-gtype-struct-for="FileIOStream">
      <field name="parent_class">
        <type name="IOStreamClass" c:type="GIOStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_etag">
        <callback name="get_etag" c:type="get_etag">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileIOStreamPrivate" c:type="GFileIOStreamPrivate">
    </record>
    <class name="FileIcon"
           c:type="GFileIcon"
           doc="Gets an icon for a #GFile. Implements #GLoadableIcon."
           parent="GObject.Object"
           glib:type-name="GFileIcon"
           glib:get-type="g_file_icon_get_type"
           glib:type-struct="FileIconClass">
      <implements name="Icon"/>
      <implements name="LoadableIcon"/>
      <constructor name="new" c:identifier="g_file_icon_new">
        <return-value transfer-ownership="full">
          <type name="FileIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_file" c:identifier="g_file_icon_get_file">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <property name="file" writable="1" construct-only="1">
        <type name="File" c:type="GFile"/>
      </property>
    </class>
    <record name="FileIconClass"
            c:type="GFileIconClass"
            glib:is-gtype-struct-for="FileIcon">
    </record>
    <record name="FileIface"
            c:type="GFileIface"
            glib:is-gtype-struct-for="File"
            doc="An interface for writing VFS file handles.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="dup">
        <callback name="dup" c:type="dup">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hash">
        <callback name="hash" c:type="hash">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file1" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="file2" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_native">
        <callback name="is_native" c:type="is_native">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_uri_scheme">
        <callback name="has_uri_scheme" c:type="has_uri_scheme">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="uri_scheme" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri_scheme">
        <callback name="get_uri_scheme" c:type="get_uri_scheme">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_basename">
        <callback name="get_basename" c:type="get_basename">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_path">
        <callback name="get_path" c:type="get_path">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri">
        <callback name="get_uri" c:type="get_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parse_name">
        <callback name="get_parse_name" c:type="get_parse_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent">
        <callback name="get_parent" c:type="get_parent">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="prefix_matches">
        <callback name="prefix_matches" c:type="prefix_matches">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="prefix" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_relative_path">
        <callback name="get_relative_path" c:type="get_relative_path">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="descendant" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="resolve_relative_path">
        <callback name="resolve_relative_path" c:type="resolve_relative_path">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="relative_path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_child_for_display_name">
        <callback name="get_child_for_display_name"
                  c:type="get_child_for_display_name"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children">
        <callback name="enumerate_children"
                  c:type="enumerate_children"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children_async">
        <callback name="enumerate_children_async"
                  c:type="enumerate_children_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children_finish">
        <callback name="enumerate_children_finish"
                  c:type="enumerate_children_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info">
        <callback name="query_filesystem_info"
                  c:type="query_filesystem_info"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info_async">
        <callback name="query_filesystem_info_async"
                  c:type="query_filesystem_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info_finish">
        <callback name="query_filesystem_info_finish"
                  c:type="query_filesystem_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount">
        <callback name="find_enclosing_mount"
                  c:type="find_enclosing_mount"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount_async">
        <callback name="find_enclosing_mount_async"
                  c:type="find_enclosing_mount_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount_finish">
        <callback name="find_enclosing_mount_finish"
                  c:type="find_enclosing_mount_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name">
        <callback name="set_display_name" c:type="set_display_name" throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name_async">
        <callback name="set_display_name_async"
                  c:type="set_display_name_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name_finish">
        <callback name="set_display_name_finish"
                  c:type="set_display_name_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_settable_attributes">
        <callback name="query_settable_attributes"
                  c:type="query_settable_attributes"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_settable_attributes_async">
        <callback name="query_settable_attributes_async"
                  c:type="_query_settable_attributes_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_settable_attributes_finish">
        <callback name="query_settable_attributes_finish"
                  c:type="_query_settable_attributes_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_writable_namespaces">
        <callback name="query_writable_namespaces"
                  c:type="query_writable_namespaces"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_writable_namespaces_async">
        <callback name="query_writable_namespaces_async"
                  c:type="_query_writable_namespaces_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_writable_namespaces_finish">
        <callback name="query_writable_namespaces_finish"
                  c:type="_query_writable_namespaces_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="set_attribute">
        <callback name="set_attribute" c:type="set_attribute" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attribute" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="FileAttributeType" c:type="GFileAttributeType"/>
            </parameter>
            <parameter name="value_p" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_from_info">
        <callback name="set_attributes_from_info"
                  c:type="set_attributes_from_info"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_async">
        <callback name="set_attributes_async" c:type="set_attributes_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_finish">
        <callback name="set_attributes_finish"
                  c:type="set_attributes_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_fn">
        <callback name="read_fn" c:type="read_fn" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_async">
        <callback name="read_async" c:type="read_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_finish">
        <callback name="read_finish" c:type="read_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to">
        <callback name="append_to" c:type="append_to" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to_async">
        <callback name="append_to_async" c:type="append_to_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to_finish">
        <callback name="append_to_finish" c:type="append_to_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create">
        <callback name="create" c:type="create" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_async">
        <callback name="create_async" c:type="create_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_finish">
        <callback name="create_finish" c:type="create_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace">
        <callback name="replace" c:type="replace" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_async">
        <callback name="replace_async" c:type="replace_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="7">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_finish">
        <callback name="replace_finish" c:type="replace_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_file">
        <callback name="delete_file" c:type="delete_file" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_file_async">
        <callback name="delete_file_async" c:type="_delete_file_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="delete_file_finish">
        <callback name="delete_file_finish" c:type="_delete_file_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="trash">
        <callback name="trash" c:type="trash" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="trash_async">
        <callback name="trash_async" c:type="_trash_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="trash_finish">
        <callback name="trash_finish" c:type="_trash_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_directory">
        <callback name="make_directory" c:type="make_directory" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_directory_async">
        <callback name="make_directory_async" c:type="_make_directory_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_directory_finish">
        <callback name="make_directory_finish" c:type="_make_directory_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_symbolic_link">
        <callback name="make_symbolic_link"
                  c:type="make_symbolic_link"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="symlink_value" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_symbolic_link_async">
        <callback name="make_symbolic_link_async"
                  c:type="_make_symbolic_link_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_symbolic_link_finish">
        <callback name="make_symbolic_link_finish"
                  c:type="_make_symbolic_link_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="copy">
        <callback name="copy" c:type="copy" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_async">
        <callback name="copy_async" c:type="copy_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="8">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_finish">
        <callback name="copy_finish" c:type="copy_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move">
        <callback name="move" c:type="move" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_async">
        <callback name="move_async" c:type="_move_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="move_finish">
        <callback name="move_finish" c:type="_move_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="mount_mountable">
        <callback name="mount_mountable" c:type="mount_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_mountable_finish">
        <callback name="mount_mountable_finish"
                  c:type="mount_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable">
        <callback name="unmount_mountable" c:type="unmount_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable_finish">
        <callback name="unmount_mountable_finish"
                  c:type="unmount_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable">
        <callback name="eject_mountable" c:type="eject_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_finish">
        <callback name="eject_mountable_finish"
                  c:type="eject_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_enclosing_volume">
        <callback name="mount_enclosing_volume"
                  c:type="mount_enclosing_volume">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="location" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_enclosing_volume_finish">
        <callback name="mount_enclosing_volume_finish"
                  c:type="mount_enclosing_volume_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="location" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="monitor_dir">
        <callback name="monitor_dir" c:type="monitor_dir" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="monitor_file">
        <callback name="monitor_file" c:type="monitor_file" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite">
        <callback name="open_readwrite" c:type="open_readwrite" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite_async">
        <callback name="open_readwrite_async" c:type="open_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite_finish">
        <callback name="open_readwrite_finish"
                  c:type="open_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite">
        <callback name="create_readwrite" c:type="create_readwrite" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite_async">
        <callback name="create_readwrite_async"
                  c:type="create_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite_finish">
        <callback name="create_readwrite_finish"
                  c:type="create_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite">
        <callback name="replace_readwrite"
                  c:type="replace_readwrite"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite_async">
        <callback name="replace_readwrite_async"
                  c:type="replace_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="7">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite_finish">
        <callback name="replace_readwrite_finish"
                  c:type="replace_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_mountable">
        <callback name="start_mountable" c:type="start_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
            </parameter>
            <parameter name="start_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_mountable_finish">
        <callback name="start_mountable_finish"
                  c:type="start_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_mountable">
        <callback name="stop_mountable" c:type="stop_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_mountable_finish">
        <callback name="stop_mountable_finish"
                  c:type="stop_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_thread_contexts">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="unmount_mountable_with_operation">
        <callback name="unmount_mountable_with_operation"
                  c:type="unmount_mountable_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable_with_operation_finish">
        <callback name="unmount_mountable_with_operation_finish"
                  c:type="unmount_mountable_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_with_operation">
        <callback name="eject_mountable_with_operation"
                  c:type="eject_mountable_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_with_operation_finish">
        <callback name="eject_mountable_with_operation_finish"
                  c:type="eject_mountable_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_mountable">
        <callback name="poll_mountable" c:type="poll_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_mountable_finish">
        <callback name="poll_mountable_finish"
                  c:type="poll_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="FileInfo"
           c:type="GFileInfo"
           doc="Stores information about a file system object referenced by a #GFile."
           parent="GObject.Object"
           glib:type-name="GFileInfo"
           glib:get-type="g_file_info_get_type"
           glib:type-struct="FileInfoClass">
      <constructor name="new" c:identifier="g_file_info_new">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </constructor>
      <method name="dup" c:identifier="g_file_info_dup">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </method>
      <method name="copy_into" c:identifier="g_file_info_copy_into">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dest_info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_attribute" c:identifier="g_file_info_has_attribute">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_namespace" c:identifier="g_file_info_has_namespace">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name_space" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_attributes"
              c:identifier="g_file_info_list_attributes">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="name_space" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_data"
              c:identifier="g_file_info_get_attribute_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType*"/>
          </parameter>
          <parameter name="value_pp" direction="out" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="FileAttributeStatus" c:type="GFileAttributeStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_type"
              c:identifier="g_file_info_get_attribute_type">
        <return-value transfer-ownership="full">
          <type name="FileAttributeType" c:type="GFileAttributeType"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_attribute"
              c:identifier="g_file_info_remove_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_status"
              c:identifier="g_file_info_get_attribute_status">
        <return-value transfer-ownership="full">
          <type name="FileAttributeStatus" c:type="GFileAttributeStatus"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_status"
              c:identifier="g_file_info_set_attribute_status">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="FileAttributeStatus" c:type="GFileAttributeStatus"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_as_string"
              c:identifier="g_file_info_get_attribute_as_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_string"
              c:identifier="g_file_info_get_attribute_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_byte_string"
              c:identifier="g_file_info_get_attribute_byte_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_boolean"
              c:identifier="g_file_info_get_attribute_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint32"
              c:identifier="g_file_info_get_attribute_uint32">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int32"
              c:identifier="g_file_info_get_attribute_int32">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint64"
              c:identifier="g_file_info_get_attribute_uint64">
        <return-value transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int64"
              c:identifier="g_file_info_get_attribute_int64">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_object"
              c:identifier="g_file_info_get_attribute_object">
        <return-value transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_stringv"
              c:identifier="g_file_info_get_attribute_stringv">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="g_file_info_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_string"
              c:identifier="g_file_info_set_attribute_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_byte_string"
              c:identifier="g_file_info_set_attribute_byte_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_boolean"
              c:identifier="g_file_info_set_attribute_boolean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint32"
              c:identifier="g_file_info_set_attribute_uint32">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int32"
              c:identifier="g_file_info_set_attribute_int32">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint64"
              c:identifier="g_file_info_set_attribute_uint64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int64"
              c:identifier="g_file_info_set_attribute_int64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_object"
              c:identifier="g_file_info_set_attribute_object">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_stringv"
              c:identifier="g_file_info_set_attribute_stringv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="clear_status" c:identifier="g_file_info_clear_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_file_type" c:identifier="g_file_info_get_file_type">
        <return-value transfer-ownership="full">
          <type name="FileType" c:type="GFileType"/>
        </return-value>
      </method>
      <method name="get_is_hidden" c:identifier="g_file_info_get_is_hidden">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_backup" c:identifier="g_file_info_get_is_backup">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_symlink" c:identifier="g_file_info_get_is_symlink">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_file_info_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_display_name"
              c:identifier="g_file_info_get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_edit_name" c:identifier="g_file_info_get_edit_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_file_info_get_icon">
        <return-value transfer-ownership="none">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_content_type"
              c:identifier="g_file_info_get_content_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="g_file_info_get_size">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </method>
      <method name="get_modification_time"
              c:identifier="g_file_info_get_modification_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_symlink_target"
              c:identifier="g_file_info_get_symlink_target">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_etag" c:identifier="g_file_info_get_etag">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_sort_order" c:identifier="g_file_info_get_sort_order">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
      </method>
      <method name="set_attribute_mask"
              c:identifier="g_file_info_set_attribute_mask">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unset_attribute_mask"
              c:identifier="g_file_info_unset_attribute_mask">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_file_type" c:identifier="g_file_info_set_file_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="FileType" c:type="GFileType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_hidden" c:identifier="g_file_info_set_is_hidden">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_hidden" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_symlink" c:identifier="g_file_info_set_is_symlink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_symlink" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="g_file_info_set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="g_file_info_set_display_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_edit_name" c:identifier="g_file_info_set_edit_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="edit_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon" c:identifier="g_file_info_set_icon">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="g_file_info_set_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="g_file_info_set_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_time"
              c:identifier="g_file_info_set_modification_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mtime" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symlink_target"
              c:identifier="g_file_info_set_symlink_target">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="symlink_target" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sort_order" c:identifier="g_file_info_set_sort_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sort_order" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FileInfoClass"
            c:type="GFileInfoClass"
            glib:is-gtype-struct-for="FileInfo">
    </record>
    <class name="FileInputStream"
           c:type="GFileInputStream"
           doc="A subclass of GInputStream for opened files. This adds
a few file-specific operations and seeking.
#GFileInputStream implements #GSeekable."
           parent="InputStream"
           glib:type-name="GFileInputStream"
           glib:get-type="g_file_input_stream_get_type"
           glib:type-struct="FileInputStreamClass">
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_input_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_input_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_input_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="FileInputStreamPrivate" c:type="GFileInputStreamPrivate*"/>
      </field>
    </class>
    <record name="FileInputStreamClass"
            c:type="GFileInputStreamClass"
            glib:is-gtype-struct-for="FileInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileInputStreamPrivate" c:type="GFileInputStreamPrivate">
    </record>
    <class name="FileMonitor"
           c:type="GFileMonitor"
           doc="Watches for changes to a file."
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GFileMonitor"
           glib:get-type="g_file_monitor_get_type"
           glib:type-struct="FileMonitorClass">
      <virtual-method name="cancel" invoker="cancel">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <method name="cancel" c:identifier="g_file_monitor_cancel">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_cancelled" c:identifier="g_file_monitor_is_cancelled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_rate_limit"
              c:identifier="g_file_monitor_set_rate_limit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="limit_msecs" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_event" c:identifier="g_file_monitor_emit_event">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="child" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="other_file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </method>
      <property name="cancelled">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="rate-limit" writable="1">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FileMonitorPrivate" c:type="GFileMonitorPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FileMonitorClass"
            c:type="GFileMonitorClass"
            glib:is-gtype-struct-for="FileMonitor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="monitor" transfer-ownership="none">
              <type name="FileMonitor" c:type="GFileMonitor*"/>
            </parameter>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="other_file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="event_type" transfer-ownership="none">
              <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cancel">
        <callback name="cancel" c:type="cancel">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="monitor" transfer-ownership="none">
              <type name="FileMonitor" c:type="GFileMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="FileMonitorEvent"
                 doc="Specifies what type of event a monitor event is."
                 glib:type-name="GFileMonitorEvent"
                 glib:get-type="g_file_monitor_event_get_type"
                 c:type="GFileMonitorEvent">
      <member name="changed"
              value="0"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGED"
              glib:nick="changed"/>
      <member name="changes_done_hint"
              value="1"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT"
              glib:nick="changes-done-hint"/>
      <member name="deleted"
              value="2"
              c:identifier="G_FILE_MONITOR_EVENT_DELETED"
              glib:nick="deleted"/>
      <member name="created"
              value="3"
              c:identifier="G_FILE_MONITOR_EVENT_CREATED"
              glib:nick="created"/>
      <member name="attribute_changed"
              value="4"
              c:identifier="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED"
              glib:nick="attribute-changed"/>
      <member name="pre_unmount"
              value="5"
              c:identifier="G_FILE_MONITOR_EVENT_PRE_UNMOUNT"
              glib:nick="pre-unmount"/>
      <member name="unmounted"
              value="6"
              c:identifier="G_FILE_MONITOR_EVENT_UNMOUNTED"
              glib:nick="unmounted"/>
      <member name="moved"
              value="7"
              c:identifier="G_FILE_MONITOR_EVENT_MOVED"
              glib:nick="moved"/>
    </enumeration>
    <bitfield name="FileMonitorFlags"
              doc="by file renames (moves) and send a single G_FILE_MONITOR_EVENT_MOVED
behaviour -without specifying this flag- is to send single DELETED
and CREATED events).
Flags used to set what a #GFileMonitor will watch for."
              glib:type-name="GFileMonitorFlags"
              glib:get-type="g_file_monitor_flags_get_type"
              c:type="GFileMonitorFlags">
      <member name="none"
              value="0"
              c:identifier="G_FILE_MONITOR_NONE"
              glib:nick="none"/>
      <member name="watch_mounts"
              value="1"
              c:identifier="G_FILE_MONITOR_WATCH_MOUNTS"
              glib:nick="watch-mounts"/>
      <member name="send_moved"
              value="2"
              c:identifier="G_FILE_MONITOR_SEND_MOVED"
              glib:nick="send-moved"/>
    </bitfield>
    <record name="FileMonitorPrivate" c:type="GFileMonitorPrivate">
    </record>
    <class name="FileOutputStream"
           c:type="GFileOutputStream"
           doc="A subclass of GOutputStream for opened files. This adds
a few file-specific operations and seeking and truncating.
#GFileOutputStream implements GSeekable."
           parent="OutputStream"
           glib:type-name="GFileOutputStream"
           glib:get-type="g_file_output_stream_get_type"
           glib:type-struct="FileOutputStreamClass">
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_etag" invoker="get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_output_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_output_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_output_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_output_stream_get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="FileOutputStreamPrivate"
              c:type="GFileOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="FileOutputStreamClass"
            c:type="GFileOutputStreamClass"
            glib:is-gtype-struct-for="FileOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_etag">
        <callback name="get_etag" c:type="get_etag">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileOutputStreamPrivate" c:type="GFileOutputStreamPrivate">
    </record>
    <callback name="FileProgressCallback"
              c:type="GFileProgressCallback"
              doc="When doing file operations that may take a while, such as moving
a file or copying a file, a progress callback is used to pass how
far along that operation is to the application.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="current_num_bytes" transfer-ownership="none">
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="total_num_bytes" transfer-ownership="none">
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="FileQueryInfoFlags"
              doc="Flags used when querying a #GFileInfo."
              glib:type-name="GFileQueryInfoFlags"
              glib:get-type="g_file_query_info_flags_get_type"
              c:type="GFileQueryInfoFlags">
      <member name="none"
              value="0"
              c:identifier="G_FILE_QUERY_INFO_NONE"
              glib:nick="none"/>
      <member name="nofollow_symlinks"
              value="1"
              c:identifier="G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
    </bitfield>
    <callback name="FileReadMoreCallback"
              c:type="GFileReadMoreCallback"
              doc="When loading the partial contents of a file with g_file_load_partial_contents_async(),
it may become necessary to determine if any more data from the file should be loaded.
A #GFileReadMoreCallback function facilitates this by returning %TRUE if more data
should be read, or %FALSE otherwise.">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file_contents" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="file_size" transfer-ownership="none">
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="callback_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="FileType"
                 doc="(Unix systems).
block device, or character device.
Indicates the file&apos;s on-disk type."
                 glib:type-name="GFileType"
                 glib:get-type="g_file_type_get_type"
                 c:type="GFileType">
      <member name="unknown"
              value="0"
              c:identifier="G_FILE_TYPE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="regular"
              value="1"
              c:identifier="G_FILE_TYPE_REGULAR"
              glib:nick="regular"/>
      <member name="directory"
              value="2"
              c:identifier="G_FILE_TYPE_DIRECTORY"
              glib:nick="directory"/>
      <member name="symbolic_link"
              value="3"
              c:identifier="G_FILE_TYPE_SYMBOLIC_LINK"
              glib:nick="symbolic-link"/>
      <member name="special"
              value="4"
              c:identifier="G_FILE_TYPE_SPECIAL"
              glib:nick="special"/>
      <member name="shortcut"
              value="5"
              c:identifier="G_FILE_TYPE_SHORTCUT"
              glib:nick="shortcut"/>
      <member name="mountable"
              value="6"
              c:identifier="G_FILE_TYPE_MOUNTABLE"
              glib:nick="mountable"/>
    </enumeration>
    <class name="FilenameCompleter"
           c:type="GFilenameCompleter"
           doc="Completes filenames based on files that exist within the file system."
           parent="GObject.Object"
           glib:type-name="GFilenameCompleter"
           glib:get-type="g_filename_completer_get_type"
           glib:type-struct="FilenameCompleterClass">
      <constructor name="new" c:identifier="g_filename_completer_new">
        <return-value transfer-ownership="full">
          <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
        </return-value>
      </constructor>
      <method name="get_completion_suffix"
              c:identifier="g_filename_completer_get_completion_suffix">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="initial_text" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_completions"
              c:identifier="g_filename_completer_get_completions">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="initial_text" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dirs_only"
              c:identifier="g_filename_completer_set_dirs_only">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dirs_only" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="got-completion-data">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="FilenameCompleterClass"
            c:type="GFilenameCompleterClass"
            glib:is-gtype-struct-for="FilenameCompleter">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="got_completion_data">
        <callback name="got_completion_data" c:type="got_completion_data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="filename_completer" transfer-ownership="none">
              <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="FilesystemPreviewType"
                 doc="Indicates a hint from the file system whether files should be
previewed in a file manager. Returned as the value of the key
#G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW."
                 glib:type-name="GFilesystemPreviewType"
                 glib:get-type="g_filesystem_preview_type_get_type"
                 c:type="GFilesystemPreviewType">
      <member name="if_always"
              value="0"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS"
              glib:nick="if-always"/>
      <member name="if_local"
              value="1"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL"
              glib:nick="if-local"/>
      <member name="never"
              value="2"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_NEVER"
              glib:nick="never"/>
    </enumeration>
    <class name="FilterInputStream"
           c:type="GFilterInputStream"
           doc="A base class for all input streams that work on an underlying stream."
           parent="InputStream"
           glib:type-name="GFilterInputStream"
           glib:get-type="g_filter_input_stream_get_type"
           glib:type-struct="FilterInputStreamClass">
      <method name="get_base_stream"
              c:identifier="g_filter_input_stream_get_base_stream">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </method>
      <method name="get_close_base_stream"
              c:identifier="g_filter_input_stream_get_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_close_base_stream"
              c:identifier="g_filter_input_stream_set_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_base" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream" writable="1" construct-only="1">
        <type name="InputStream" c:type="GInputStream"/>
      </property>
      <property name="close-base-stream" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="base_stream">
        <type name="InputStream" c:type="GInputStream*"/>
      </field>
    </class>
    <record name="FilterInputStreamClass"
            c:type="GFilterInputStreamClass"
            glib:is-gtype-struct-for="FilterInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="FilterOutputStream"
           c:type="GFilterOutputStream"
           doc="A base class for all output streams that work on an underlying stream."
           parent="OutputStream"
           glib:type-name="GFilterOutputStream"
           glib:get-type="g_filter_output_stream_get_type"
           glib:type-struct="FilterOutputStreamClass">
      <method name="get_base_stream"
              c:identifier="g_filter_output_stream_get_base_stream">
        <return-value transfer-ownership="full">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </method>
      <method name="get_close_base_stream"
              c:identifier="g_filter_output_stream_get_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_close_base_stream"
              c:identifier="g_filter_output_stream_set_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_base" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream" writable="1" construct-only="1">
        <type name="OutputStream" c:type="GOutputStream"/>
      </property>
      <property name="close-base-stream" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="base_stream">
        <type name="OutputStream" c:type="GOutputStream*"/>
      </field>
    </class>
    <record name="FilterOutputStreamClass"
            c:type="GFilterOutputStreamClass"
            glib:is-gtype-struct-for="FilterOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IOErrorEnum"
                 doc="already interacted with the user. Do not display any error dialog.
open and can&apos;t open any more. Duplicate descriptors do count toward
this limit. Since 2.20
Error codes returned by GIO functions."
                 glib:type-name="GIOErrorEnum"
                 glib:get-type="g_io_error_enum_get_type"
                 c:type="GIOErrorEnum"
                 glib:error-quark="g_io_error_quark">
      <member name="failed"
              value="0"
              c:identifier="G_IO_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="not_found"
              value="1"
              c:identifier="G_IO_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="exists"
              value="2"
              c:identifier="G_IO_ERROR_EXISTS"
              glib:nick="exists"/>
      <member name="is_directory"
              value="3"
              c:identifier="G_IO_ERROR_IS_DIRECTORY"
              glib:nick="is-directory"/>
      <member name="not_directory"
              value="4"
              c:identifier="G_IO_ERROR_NOT_DIRECTORY"
              glib:nick="not-directory"/>
      <member name="not_empty"
              value="5"
              c:identifier="G_IO_ERROR_NOT_EMPTY"
              glib:nick="not-empty"/>
      <member name="not_regular_file"
              value="6"
              c:identifier="G_IO_ERROR_NOT_REGULAR_FILE"
              glib:nick="not-regular-file"/>
      <member name="not_symbolic_link"
              value="7"
              c:identifier="G_IO_ERROR_NOT_SYMBOLIC_LINK"
              glib:nick="not-symbolic-link"/>
      <member name="not_mountable_file"
              value="8"
              c:identifier="G_IO_ERROR_NOT_MOUNTABLE_FILE"
              glib:nick="not-mountable-file"/>
      <member name="filename_too_long"
              value="9"
              c:identifier="G_IO_ERROR_FILENAME_TOO_LONG"
              glib:nick="filename-too-long"/>
      <member name="invalid_filename"
              value="10"
              c:identifier="G_IO_ERROR_INVALID_FILENAME"
              glib:nick="invalid-filename"/>
      <member name="too_many_links"
              value="11"
              c:identifier="G_IO_ERROR_TOO_MANY_LINKS"
              glib:nick="too-many-links"/>
      <member name="no_space"
              value="12"
              c:identifier="G_IO_ERROR_NO_SPACE"
              glib:nick="no-space"/>
      <member name="invalid_argument"
              value="13"
              c:identifier="G_IO_ERROR_INVALID_ARGUMENT"
              glib:nick="invalid-argument"/>
      <member name="permission_denied"
              value="14"
              c:identifier="G_IO_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied"/>
      <member name="not_supported"
              value="15"
              c:identifier="G_IO_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported"/>
      <member name="not_mounted"
              value="16"
              c:identifier="G_IO_ERROR_NOT_MOUNTED"
              glib:nick="not-mounted"/>
      <member name="already_mounted"
              value="17"
              c:identifier="G_IO_ERROR_ALREADY_MOUNTED"
              glib:nick="already-mounted"/>
      <member name="closed"
              value="18"
              c:identifier="G_IO_ERROR_CLOSED"
              glib:nick="closed"/>
      <member name="cancelled"
              value="19"
              c:identifier="G_IO_ERROR_CANCELLED"
              glib:nick="cancelled"/>
      <member name="pending"
              value="20"
              c:identifier="G_IO_ERROR_PENDING"
              glib:nick="pending"/>
      <member name="read_only"
              value="21"
              c:identifier="G_IO_ERROR_READ_ONLY"
              glib:nick="read-only"/>
      <member name="cant_create_backup"
              value="22"
              c:identifier="G_IO_ERROR_CANT_CREATE_BACKUP"
              glib:nick="cant-create-backup"/>
      <member name="wrong_etag"
              value="23"
              c:identifier="G_IO_ERROR_WRONG_ETAG"
              glib:nick="wrong-etag"/>
      <member name="timed_out"
              value="24"
              c:identifier="G_IO_ERROR_TIMED_OUT"
              glib:nick="timed-out"/>
      <member name="would_recurse"
              value="25"
              c:identifier="G_IO_ERROR_WOULD_RECURSE"
              glib:nick="would-recurse"/>
      <member name="busy"
              value="26"
              c:identifier="G_IO_ERROR_BUSY"
              glib:nick="busy"/>
      <member name="would_block"
              value="27"
              c:identifier="G_IO_ERROR_WOULD_BLOCK"
              glib:nick="would-block"/>
      <member name="host_not_found"
              value="28"
              c:identifier="G_IO_ERROR_HOST_NOT_FOUND"
              glib:nick="host-not-found"/>
      <member name="would_merge"
              value="29"
              c:identifier="G_IO_ERROR_WOULD_MERGE"
              glib:nick="would-merge"/>
      <member name="failed_handled"
              value="30"
              c:identifier="G_IO_ERROR_FAILED_HANDLED"
              glib:nick="failed-handled"/>
      <member name="too_many_open_files"
              value="31"
              c:identifier="G_IO_ERROR_TOO_MANY_OPEN_FILES"
              glib:nick="too-many-open-files"/>
      <member name="not_initialized"
              value="32"
              c:identifier="G_IO_ERROR_NOT_INITIALIZED"
              glib:nick="not-initialized"/>
      <member name="address_in_use"
              value="33"
              c:identifier="G_IO_ERROR_ADDRESS_IN_USE"
              glib:nick="address-in-use"/>
      <member name="partial_input"
              value="34"
              c:identifier="G_IO_ERROR_PARTIAL_INPUT"
              glib:nick="partial-input"/>
      <member name="invalid_data"
              value="35"
              c:identifier="G_IO_ERROR_INVALID_DATA"
              glib:nick="invalid-data"/>
    </enumeration>
    <record name="IOExtension" c:type="GIOExtension">
      <method name="get_name" c:identifier="g_io_extension_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_priority" c:identifier="g_io_extension_get_priority">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="ref_class" c:identifier="g_io_extension_ref_class">
        <return-value transfer-ownership="full">
          <type name="GObject.TypeClass" c:type="GTypeClass*"/>
        </return-value>
      </method>
    </record>
    <record name="IOExtensionPoint" c:type="GIOExtensionPoint">
      <method name="set_required_type"
              c:identifier="g_io_extension_point_set_required_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_required_type"
              c:identifier="g_io_extension_point_get_required_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="get_extensions"
              c:identifier="g_io_extension_point_get_extensions">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </method>
      <method name="get_extension_by_name"
              c:identifier="g_io_extension_point_get_extension_by_name">
        <return-value transfer-ownership="full">
          <type name="IOExtension" c:type="GIOExtension*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="IOModule"
           c:type="GIOModule"
           doc="Opaque module base class for extending GIO."
           parent="GObject.TypeModule"
           glib:type-name="GIOModule"
           glib:get-type="g_io_module_get_type"
           glib:type-struct="IOModuleClass">
      <implements name="GObject.TypePlugin"/>
      <constructor name="new" c:identifier="g_io_module_new">
        <return-value transfer-ownership="full">
          <type name="IOModule" c:type="GIOModule*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="query"
                c:identifier="g_io_module_query"
                doc="Optional API for GIO modules to implement.
Should return a list of all the extension points that may be
implemented in this module.
This method will not be called in normal use, however it may be
called when probing existing modules and recording which extension
points that this modle is used for. This means we won&apos;t have to
load and initialze this module unless its needed.
If this function is not implemented by the module the module will
always be loaded, initialized and then unloaded on application startup
so that it can register its extension points during init.
Note that a module need not actually implement all the extension points
that g_io_module_query returns, since the exact list of extension may
depend on runtime issues. However all extension points actually implemented
must be returned by g_io_module_query() (if defined).
When installing a module that implements g_io_module_query you must
run gio-querymodules in order to build the cache files required for
lazy loading.
extension points of the module. The array must be suitable for
freeing with g_strfreev()."
                version="2.24">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <method name="load"
              c:identifier="g_io_module_load"
              doc="Required API for GIO modules to implement.
This function is ran after the module has been loaded into GIO,
to initialize the module.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unload"
              c:identifier="g_io_module_unload"
              doc="Required API for GIO modules to implement.
This function is ran when the module is being unloaded from GIO,
to finalize the module.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </class>
    <record name="IOModuleClass"
            c:type="GIOModuleClass"
            glib:is-gtype-struct-for="IOModule">
    </record>
    <record name="IOSchedulerJob"
            c:type="GIOSchedulerJob"
            doc="Opaque class for definining and scheduling IO jobs.">
      <method name="send_to_mainloop"
              c:identifier="g_io_scheduler_job_send_to_mainloop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_to_mainloop_async"
              c:identifier="g_io_scheduler_job_send_to_mainloop_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="IOSchedulerJobFunc"
              c:type="GIOSchedulerJobFunc"
              doc="I/O Job function.
Note that depending on whether threads are available, the
#GIOScheduler may run jobs in separate threads or in an idle
in the mainloop.
Long-running jobs should periodically check the @cancellable
to see if they have been cancelled.
complete the job, %FALSE if the job is complete (or cancelled)">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="job" transfer-ownership="none">
          <type name="IOSchedulerJob" c:type="GIOSchedulerJob*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="IOStream"
           c:type="GIOStream"
           doc="Base class for read-write streams."
           parent="GObject.Object"
           glib:type-name="GIOStream"
           glib:get-type="g_io_stream_get_type"
           glib:type-struct="IOStreamClass">
      <virtual-method name="get_input_stream" invoker="get_input_stream">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_output_stream" invoker="get_output_stream">
        <return-value transfer-ownership="full">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_input_stream"
              c:identifier="g_io_stream_get_input_stream">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </method>
      <method name="get_output_stream"
              c:identifier="g_io_stream_get_output_stream">
        <return-value transfer-ownership="full">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </method>
      <method name="close" c:identifier="g_io_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_io_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_io_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_io_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_io_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_io_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending" c:identifier="g_io_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="closed" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="input-stream">
        <type name="InputStream" c:type="GInputStream"/>
      </property>
      <property name="output-stream">
        <type name="OutputStream" c:type="GOutputStream"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="IOStreamPrivate" c:type="GIOStreamPrivate*"/>
      </field>
    </class>
    <record name="IOStreamClass"
            c:type="GIOStreamClass"
            glib:is-gtype-struct-for="IOStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_input_stream">
        <callback name="get_input_stream" c:type="get_input_stream">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_output_stream">
        <callback name="get_output_stream" c:type="get_output_stream">
          <return-value transfer-ownership="full">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="IOStreamPrivate" c:type="GIOStreamPrivate">
    </record>
    <interface name="Icon"
               c:type="GIcon"
               doc="An abstract type that specifies an icon."
               glib:type-name="GIcon"
               glib:get-type="g_icon_get_type"
               glib:type-struct="IconIface">
      <virtual-method name="hash">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon2" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="to_tokens">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tokens" transfer-ownership="none">
            <type name="GLib.PtrArray" c:type="GPtrArray*"/>
          </parameter>
          <parameter name="out_version"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="equal" c:identifier="g_icon_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon2" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="g_icon_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </interface>
    <record name="IconIface"
            c:type="GIconIface"
            glib:is-gtype-struct-for="Icon"
            doc="contain any whitespace. Don&apos;t implement if the #GIcon can&apos;t be
serialized (Since 2.20).
the tokens are malformed. Don&apos;t implement if the #GIcon can&apos;t be
serialized (Since 2.20).
GIconIface is used to implement GIcon types for various
different systems. See #GThemedIcon and #GLoadableIcon for
examples of how to implement this interface.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="hash">
        <callback name="hash" c:type="hash">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="icon1" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
            <parameter name="icon2" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_tokens">
        <callback name="to_tokens" c:type="to_tokens">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
            <parameter name="tokens" transfer-ownership="none">
              <type name="GLib.PtrArray" c:type="GPtrArray*"/>
            </parameter>
            <parameter name="out_version"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="from_tokens">
        <callback name="from_tokens" c:type="from_tokens" throws="1">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="tokens" transfer-ownership="none">
              <array c:type="gchar**">
                <type name="utf8"/>
              </array>
            </parameter>
            <parameter name="num_tokens" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="version" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InetAddress"
           c:type="GInetAddress"
           parent="GObject.Object"
           glib:type-name="GInetAddress"
           glib:get-type="g_inet_address_get_type"
           glib:type-struct="InetAddressClass">
      <constructor name="new_from_string"
                   c:identifier="g_inet_address_new_from_string">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_bytes"
                   c:identifier="g_inet_address_new_from_bytes">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="bytes" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_loopback"
                   c:identifier="g_inet_address_new_loopback">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_any" c:identifier="g_inet_address_new_any">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="to_string" invoker="to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="to_bytes" invoker="to_bytes">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </virtual-method>
      <method name="to_string" c:identifier="g_inet_address_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="to_bytes" c:identifier="g_inet_address_to_bytes">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="get_native_size"
              c:identifier="g_inet_address_get_native_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_family" c:identifier="g_inet_address_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="get_is_any" c:identifier="g_inet_address_get_is_any">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_loopback"
              c:identifier="g_inet_address_get_is_loopback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_link_local"
              c:identifier="g_inet_address_get_is_link_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_site_local"
              c:identifier="g_inet_address_get_is_site_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_multicast"
              c:identifier="g_inet_address_get_is_multicast">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_global"
              c:identifier="g_inet_address_get_is_mc_global">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_link_local"
              c:identifier="g_inet_address_get_is_mc_link_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_node_local"
              c:identifier="g_inet_address_get_is_mc_node_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_org_local"
              c:identifier="g_inet_address_get_is_mc_org_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_site_local"
              c:identifier="g_inet_address_get_is_mc_site_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="bytes" writable="1" construct-only="1">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="family" writable="1" construct-only="1">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="is-any">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-link-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-loopback">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-global">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-link-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-node-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-org-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-site-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-multicast">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-site-local">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InetAddressPrivate" c:type="GInetAddressPrivate*"/>
      </field>
    </class>
    <record name="InetAddressClass"
            c:type="GInetAddressClass"
            glib:is-gtype-struct-for="InetAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="to_string">
        <callback name="to_string" c:type="to_string">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_bytes">
        <callback name="to_bytes" c:type="to_bytes">
          <return-value transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="InetAddressPrivate" c:type="GInetAddressPrivate">
    </record>
    <class name="InetSocketAddress"
           c:type="GInetSocketAddress"
           parent="SocketAddress"
           glib:type-name="GInetSocketAddress"
           glib:get-type="g_inet_socket_address_get_type"
           glib:type-struct="InetSocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_inet_socket_address_new">
        <return-value transfer-ownership="full">
          <type name="InetSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="g_inet_socket_address_get_address">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_inet_socket_address_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <property name="address" writable="1" construct-only="1">
        <type name="InetAddress" c:type="GInetAddress"/>
      </property>
      <property name="port" writable="1" construct-only="1">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </field>
      <field name="priv">
        <type name="InetSocketAddressPrivate"
              c:type="GInetSocketAddressPrivate*"/>
      </field>
    </class>
    <record name="InetSocketAddressClass"
            c:type="GInetSocketAddressClass"
            glib:is-gtype-struct-for="InetSocketAddress">
      <field name="parent_class">
        <type name="SocketAddressClass" c:type="GSocketAddressClass"/>
      </field>
    </record>
    <record name="InetSocketAddressPrivate" c:type="GInetSocketAddressPrivate">
    </record>
    <interface name="Initable"
               c:type="GInitable"
               doc="Interface for initializable objects."
               version="2.22"
               glib:type-name="GInitable"
               glib:get-type="g_initable_get_type"
               glib:type-struct="InitableIface">
      <virtual-method name="init" invoker="init" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="init" c:identifier="g_initable_init" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="InitableIface"
            c:type="GInitableIface"
            glib:is-gtype-struct-for="Initable"
            doc="Provides an interface for initializing object such that initialization
may fail."
            version="2.22">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="init">
        <callback name="init" c:type="init" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="Initable" c:type="GInitable*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InputStream"
           c:type="GInputStream"
           doc="Base class for streaming input operations."
           parent="GObject.Object"
           glib:type-name="GInputStream"
           glib:get-type="g_input_stream_get_type"
           glib:type-struct="InputStreamClass">
      <virtual-method name="read_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip" invoker="skip" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_async" invoker="read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_finish" invoker="read_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip_async" invoker="skip_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip_finish" invoker="skip_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="read" c:identifier="g_input_stream_read" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_all"
              c:identifier="g_input_stream_read_all"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip" c:identifier="g_input_stream_skip" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_input_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_async" c:identifier="g_input_stream_read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_finish"
              c:identifier="g_input_stream_read_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_async" c:identifier="g_input_stream_skip_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_finish"
              c:identifier="g_input_stream_skip_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_input_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_input_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_input_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_input_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_input_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending" c:identifier="g_input_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InputStreamPrivate" c:type="GInputStreamPrivate*"/>
      </field>
    </class>
    <record name="InputStreamClass"
            c:type="GInputStreamClass"
            glib:is-gtype-struct-for="InputStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="read_fn">
        <callback name="read_fn" c:type="read_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip">
        <callback name="skip" c:type="skip" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_async">
        <callback name="read_async" c:type="read_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_finish">
        <callback name="read_finish" c:type="read_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip_async">
        <callback name="skip_async" c:type="skip_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip_finish">
        <callback name="skip_finish" c:type="skip_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="InputStreamPrivate" c:type="GInputStreamPrivate">
    </record>
    <record name="InputVector"
            c:type="GInputVector"
            doc="Structure used for scatter/gather data input.
You generally pass in an array of #GInputVector&lt;!-- --&gt;s
and the operation will store the read data starting in the
first buffer, switching to the next as needed."
            version="2.22">
      <field name="buffer" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="size" writable="1">
        <type name="size_t" c:type="gsize"/>
      </field>
    </record>
    <interface name="LoadableIcon"
               c:type="GLoadableIcon"
               doc="Generic type for all kinds of icons that can be loaded
as a stream."
               glib:type-name="GLoadableIcon"
               glib:get-type="g_loadable_icon_get_type"
               glib:type-struct="LoadableIconIface">
      <prerequisite name="Icon"/>
      <virtual-method name="load" invoker="load" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_async" invoker="load_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_finish" invoker="load_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="load" c:identifier="g_loadable_icon_load" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_async" c:identifier="g_loadable_icon_load_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_finish"
              c:identifier="g_loadable_icon_load_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="LoadableIconIface"
            c:type="GLoadableIconIface"
            glib:is-gtype-struct-for="LoadableIcon"
            doc="Interface for icons that can be loaded as a stream.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="load">
        <callback name="load" c:type="load" throws="1">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <array c:type="char**">
                <type name="utf8"/>
              </array>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_async">
        <callback name="load_async" c:type="load_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_finish">
        <callback name="load_finish" c:type="load_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <array c:type="char**">
                <type name="utf8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="MemoryInputStream"
           c:type="GMemoryInputStream"
           doc="Implements #GInputStream for arbitrary memory chunks."
           parent="InputStream"
           glib:type-name="GMemoryInputStream"
           glib:get-type="g_memory_input_stream_get_type"
           glib:type-struct="MemoryInputStreamClass">
      <implements name="Seekable"/>
      <constructor name="new" c:identifier="g_memory_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="MemoryInputStream" c:type="GInputStream*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_data"
                   c:identifier="g_memory_input_stream_new_from_data">
        <return-value transfer-ownership="full">
          <type name="MemoryInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_data" c:identifier="g_memory_input_stream_add_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="MemoryInputStreamPrivate"
              c:type="GMemoryInputStreamPrivate*"/>
      </field>
    </class>
    <record name="MemoryInputStreamClass"
            c:type="GMemoryInputStreamClass"
            glib:is-gtype-struct-for="MemoryInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MemoryInputStreamPrivate" c:type="GMemoryInputStreamPrivate">
    </record>
    <class name="MemoryOutputStream"
           c:type="GMemoryOutputStream"
           doc="Implements #GOutputStream for arbitrary memory chunks."
           parent="OutputStream"
           glib:type-name="GMemoryOutputStream"
           glib:get-type="g_memory_output_stream_get_type"
           glib:type-struct="MemoryOutputStreamClass">
      <implements name="Seekable"/>
      <constructor name="new" c:identifier="g_memory_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="MemoryOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="realloc_function"
                     transfer-ownership="none"
                     scope="call"
                     destroy="3">
            <type name="ReallocFunc" c:type="GReallocFunc"/>
          </parameter>
          <parameter name="destroy_function"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_data" c:identifier="g_memory_output_stream_get_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="g_memory_output_stream_get_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_data_size"
              c:identifier="g_memory_output_stream_get_data_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <property name="data" writable="1" construct-only="1">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="data-size">
        <type name="ulong" c:type="gulong"/>
      </property>
      <property name="destroy-function" writable="1" construct-only="1">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="realloc-function" writable="1" construct-only="1">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="size" writable="1" construct-only="1">
        <type name="ulong" c:type="gulong"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="MemoryOutputStreamPrivate"
              c:type="GMemoryOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="MemoryOutputStreamClass"
            c:type="GMemoryOutputStreamClass"
            glib:is-gtype-struct-for="MemoryOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MemoryOutputStreamPrivate"
            c:type="GMemoryOutputStreamPrivate">
    </record>
    <interface name="Mount"
               c:type="GMount"
               doc="A handle to an object implementing the #GMountIface interface."
               glib:type-name="GMount"
               glib:get-type="g_mount_get_type"
               glib:type-struct="MountIface">
      <virtual-method name="get_root" invoker="get_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uuid" invoker="get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volume" invoker="get_volume">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_drive" invoker="get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_unmount" invoker="can_unmount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="unmount" invoker="unmount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_finish"
                      invoker="unmount_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remount" invoker="remount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remount_finish"
                      invoker="remount_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type" invoker="guess_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type_finish"
                      invoker="guess_content_type_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type_sync"
                      invoker="guess_content_type_sync"
                      throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_with_operation"
                      invoker="unmount_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_with_operation_finish"
                      invoker="unmount_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_default_location"
                      invoker="get_default_location">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <method name="get_root" c:identifier="g_mount_get_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="get_default_location"
              c:identifier="g_mount_get_default_location">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_mount_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_mount_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_uuid" c:identifier="g_mount_get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_volume" c:identifier="g_mount_get_volume">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
      </method>
      <method name="get_drive" c:identifier="g_mount_get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </method>
      <method name="can_unmount" c:identifier="g_mount_can_unmount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_mount_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="unmount" c:identifier="g_mount_unmount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_finish"
              c:identifier="g_mount_unmount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject" c:identifier="g_mount_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_mount_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remount" c:identifier="g_mount_remount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remount_finish"
              c:identifier="g_mount_remount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type"
              c:identifier="g_mount_guess_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type_finish"
              c:identifier="g_mount_guess_content_type_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type_sync"
              c:identifier="g_mount_guess_content_type_sync"
              throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_shadowed" c:identifier="g_mount_is_shadowed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="shadow" c:identifier="g_mount_shadow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unshadow" c:identifier="g_mount_unshadow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unmount_with_operation"
              c:identifier="g_mount_unmount_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_with_operation_finish"
              c:identifier="g_mount_unmount_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_mount_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_mount_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="pre-unmount">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unmounted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="MountIface"
            c:type="GMountIface"
            glib:is-gtype-struct-for="Mount"
            doc="See g_mount_guess_content_type() for more information on content
type guessing. This operation was added in 2.18.
Interface for implementing operations for mounts.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmounted">
        <callback name="unmounted" c:type="unmounted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_root">
        <callback name="get_root" c:type="get_root">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uuid">
        <callback name="get_uuid" c:type="get_uuid">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volume">
        <callback name="get_volume" c:type="get_volume">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_drive">
        <callback name="get_drive" c:type="get_drive">
          <return-value transfer-ownership="full">
            <type name="Drive" c:type="GDrive*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_unmount">
        <callback name="can_unmount" c:type="can_unmount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount">
        <callback name="unmount" c:type="unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_finish">
        <callback name="unmount_finish" c:type="unmount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remount">
        <callback name="remount" c:type="remount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remount_finish">
        <callback name="remount_finish" c:type="remount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type">
        <callback name="guess_content_type" c:type="guess_content_type">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="force_rescan" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type_finish">
        <callback name="guess_content_type_finish"
                  c:type="guess_content_type_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type_sync">
        <callback name="guess_content_type_sync"
                  c:type="guess_content_type_sync"
                  throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="force_rescan" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pre_unmount">
        <callback name="pre_unmount" c:type="pre_unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_with_operation">
        <callback name="unmount_with_operation"
                  c:type="unmount_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_with_operation_finish">
        <callback name="unmount_with_operation_finish"
                  c:type="unmount_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_default_location">
        <callback name="get_default_location" c:type="get_default_location">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="MountMountFlags"
                 doc="Flags used when mounting a mount."
                 glib:type-name="GMountMountFlags"
                 glib:get-type="g_mount_mount_flags_get_type"
                 c:type="GMountMountFlags">
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_MOUNT_NONE"
              glib:nick="none"/>
    </enumeration>
    <class name="MountOperation"
           c:type="GMountOperation"
           doc="Class for providing authentication methods for mounting operations,
such as mounting a file locally, or authenticating with a server."
           parent="GObject.Object"
           glib:type-name="GMountOperation"
           glib:get-type="g_mount_operation_get_type"
           glib:type-struct="MountOperationClass">
      <constructor name="new" c:identifier="g_mount_operation_new">
        <return-value transfer-ownership="full">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </return-value>
      </constructor>
      <method name="get_username"
              c:identifier="g_mount_operation_get_username">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_username"
              c:identifier="g_mount_operation_set_username">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="username" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password"
              c:identifier="g_mount_operation_get_password">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_password"
              c:identifier="g_mount_operation_set_password">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="password" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_anonymous"
              c:identifier="g_mount_operation_get_anonymous">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_anonymous"
              c:identifier="g_mount_operation_set_anonymous">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="anonymous" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_domain" c:identifier="g_mount_operation_get_domain">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_domain" c:identifier="g_mount_operation_set_domain">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password_save"
              c:identifier="g_mount_operation_get_password_save">
        <return-value transfer-ownership="full">
          <type name="PasswordSave" c:type="GPasswordSave"/>
        </return-value>
      </method>
      <method name="set_password_save"
              c:identifier="g_mount_operation_set_password_save">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="save" transfer-ownership="none">
            <type name="PasswordSave" c:type="GPasswordSave"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_choice" c:identifier="g_mount_operation_get_choice">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="set_choice" c:identifier="g_mount_operation_set_choice">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="choice" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="reply" c:identifier="g_mount_operation_reply">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </method>
      <property name="anonymous" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="choice" writable="1">
        <type name="int" c:type="gint"/>
      </property>
      <property name="domain" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="password" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="password-save" writable="1">
        <type name="PasswordSave" c:type="GPasswordSave"/>
      </property>
      <property name="username" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MountOperationPrivate" c:type="GMountOperationPrivate*"/>
      </field>
      <glib:signal name="aborted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="ask-password">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p2" transfer-ownership="none">
            <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ask-question">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="reply">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show-processes">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GLib.Array" c:type="GArray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MountOperationClass"
            c:type="GMountOperationClass"
            glib:is-gtype-struct-for="MountOperation">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="ask_password">
        <callback name="ask_password" c:type="ask_password">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="default_user" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="default_domain" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ask_question">
        <callback name="ask_question" c:type="ask_question">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="choices" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reply">
        <callback name="reply" c:type="reply">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="MountOperationResult"
                    c:type="GMountOperationResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="aborted">
        <callback name="aborted" c:type="aborted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_processes">
        <callback name="show_processes" c:type="show_processes">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="processes" transfer-ownership="none">
              <type name="GLib.Array" c:type="GArray*"/>
            </parameter>
            <parameter name="choices" transfer-ownership="full">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MountOperationPrivate" c:type="GMountOperationPrivate">
    </record>
    <enumeration name="MountOperationResult"
                 doc="user specified data is now available
to be aborted
implemented)
#GMountOperationResult is returned as a result when a request for
information is send by the mounting operation."
                 glib:type-name="GMountOperationResult"
                 glib:get-type="g_mount_operation_result_get_type"
                 c:type="GMountOperationResult">
      <member name="handled"
              value="0"
              c:identifier="G_MOUNT_OPERATION_HANDLED"
              glib:nick="handled"/>
      <member name="aborted"
              value="1"
              c:identifier="G_MOUNT_OPERATION_ABORTED"
              glib:nick="aborted"/>
      <member name="unhandled"
              value="2"
              c:identifier="G_MOUNT_OPERATION_UNHANDLED"
              glib:nick="unhandled"/>
    </enumeration>
    <bitfield name="MountUnmountFlags"
              doc="file operations on the mount.
Flags used when an unmounting a mount."
              glib:type-name="GMountUnmountFlags"
              glib:get-type="g_mount_unmount_flags_get_type"
              c:type="GMountUnmountFlags">
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_UNMOUNT_NONE"
              glib:nick="none"/>
      <member name="force"
              value="1"
              c:identifier="G_MOUNT_UNMOUNT_FORCE"
              glib:nick="force"/>
    </bitfield>
    <constant name="NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME"
              value="gio-native-volume-monitor">
      <type name="utf8"/>
    </constant>
    <class name="NativeVolumeMonitor"
           c:type="GNativeVolumeMonitor"
           parent="VolumeMonitor"
           abstract="1"
           glib:type-name="GNativeVolumeMonitor"
           glib:get-type="g_native_volume_monitor_get_type"
           glib:type-struct="NativeVolumeMonitorClass">
      <field name="parent_instance">
        <type name="VolumeMonitor" c:type="GVolumeMonitor"/>
      </field>
    </class>
    <record name="NativeVolumeMonitorClass"
            c:type="GNativeVolumeMonitorClass"
            glib:is-gtype-struct-for="NativeVolumeMonitor">
      <field name="parent_class">
        <type name="VolumeMonitorClass" c:type="GVolumeMonitorClass"/>
      </field>
      <field name="get_mount_for_mount_path">
        <callback name="get_mount_for_mount_path"
                  c:type="get_mount_for_mount_path">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="mount_path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="NetworkAddress"
           c:type="GNetworkAddress"
           parent="GObject.Object"
           glib:type-name="GNetworkAddress"
           glib:get-type="g_network_address_get_type"
           glib:type-struct="NetworkAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_network_address_new">
        <return-value transfer-ownership="full">
          <type name="NetworkAddress" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="parse" c:identifier="g_network_address_parse" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnectable" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_hostname"
              c:identifier="g_network_address_get_hostname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_network_address_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <property name="hostname" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="port" writable="1" construct-only="1">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NetworkAddressPrivate" c:type="GNetworkAddressPrivate*"/>
      </field>
    </class>
    <record name="NetworkAddressClass"
            c:type="GNetworkAddressClass"
            glib:is-gtype-struct-for="NetworkAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NetworkAddressPrivate" c:type="GNetworkAddressPrivate">
    </record>
    <class name="NetworkService"
           c:type="GNetworkService"
           parent="GObject.Object"
           glib:type-name="GNetworkService"
           glib:get-type="g_network_service_get_type"
           glib:type-struct="NetworkServiceClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_network_service_new">
        <return-value transfer-ownership="full">
          <type name="NetworkService" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_service" c:identifier="g_network_service_get_service">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_protocol"
              c:identifier="g_network_service_get_protocol">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_domain" c:identifier="g_network_service_get_domain">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="domain" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="protocol" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="service" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NetworkServicePrivate" c:type="GNetworkServicePrivate*"/>
      </field>
    </class>
    <record name="NetworkServiceClass"
            c:type="GNetworkServiceClass"
            glib:is-gtype-struct-for="NetworkService">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NetworkServicePrivate" c:type="GNetworkServicePrivate">
    </record>
    <class name="OutputStream"
           c:type="GOutputStream"
           doc="Base class for writing output.
All classes derived from GOutputStream should implement synchronous
writing, splicing, flushing and closing streams, but may implement
asynchronous versions."
           parent="GObject.Object"
           glib:type-name="GOutputStream"
           glib:get-type="g_output_stream_get_type"
           glib:type-struct="OutputStreamClass">
      <virtual-method name="write_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice" invoker="splice" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush" invoker="flush" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_async" invoker="write_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_finish" invoker="write_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice_finish" invoker="splice_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush_async" invoker="flush_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush_finish" invoker="flush_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="write" c:identifier="g_output_stream_write" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_all"
              c:identifier="g_output_stream_write_all"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice" c:identifier="g_output_stream_splice" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="g_output_stream_flush" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_output_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_async" c:identifier="g_output_stream_write_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_finish"
              c:identifier="g_output_stream_write_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_async" c:identifier="g_output_stream_splice_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_finish"
              c:identifier="g_output_stream_splice_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_async" c:identifier="g_output_stream_flush_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_finish"
              c:identifier="g_output_stream_flush_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_output_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_output_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_output_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_closing" c:identifier="g_output_stream_is_closing">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_output_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_output_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending"
              c:identifier="g_output_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="OutputStreamPrivate" c:type="GOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="OutputStreamClass"
            c:type="GOutputStreamClass"
            glib:is-gtype-struct-for="OutputStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="write_fn">
        <callback name="write_fn" c:type="write_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice">
        <callback name="splice" c:type="splice" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="OutputStreamSpliceFlags"
                    c:type="GOutputStreamSpliceFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush">
        <callback name="flush" c:type="flush" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_async">
        <callback name="write_async" c:type="write_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_finish">
        <callback name="write_finish" c:type="write_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice_async">
        <callback name="splice_async" c:type="splice_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="OutputStreamSpliceFlags"
                    c:type="GOutputStreamSpliceFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice_finish">
        <callback name="splice_finish" c:type="splice_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush_async">
        <callback name="flush_async" c:type="flush_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush_finish">
        <callback name="flush_finish" c:type="flush_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OutputStreamPrivate" c:type="GOutputStreamPrivate">
    </record>
    <bitfield name="OutputStreamSpliceFlags"
              doc="the splice.
the splice.
GOutputStreamSpliceFlags determine how streams should be spliced."
              glib:type-name="GOutputStreamSpliceFlags"
              glib:get-type="g_output_stream_splice_flags_get_type"
              c:type="GOutputStreamSpliceFlags">
      <member name="none"
              value="0"
              c:identifier="G_OUTPUT_STREAM_SPLICE_NONE"
              glib:nick="none"/>
      <member name="close_source"
              value="1"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE"
              glib:nick="close-source"/>
      <member name="close_target"
              value="2"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET"
              glib:nick="close-target"/>
    </bitfield>
    <record name="OutputVector"
            c:type="GOutputVector"
            doc="Structure used for scatter/gather data output.
You generally pass in an array of #GOutputVector&lt;!-- --&gt;s
and the operation will use all the buffers as if they were
one buffer."
            version="2.22">
      <field name="buffer" writable="1">
        <type name="any" c:type="gconstpointer"/>
      </field>
      <field name="size" writable="1">
        <type name="size_t" c:type="gsize"/>
      </field>
    </record>
    <enumeration name="PasswordSave"
                 doc="#GPasswordSave is used to indicate the lifespan of a saved password.
#Gvfs stores passwords in the Gnome keyring when this flag allows it
to, and later retrieves it again from there."
                 glib:type-name="GPasswordSave"
                 glib:get-type="g_password_save_get_type"
                 c:type="GPasswordSave">
      <member name="never"
              value="0"
              c:identifier="G_PASSWORD_SAVE_NEVER"
              glib:nick="never"/>
      <member name="for_session"
              value="1"
              c:identifier="G_PASSWORD_SAVE_FOR_SESSION"
              glib:nick="for-session"/>
      <member name="permanently"
              value="2"
              c:identifier="G_PASSWORD_SAVE_PERMANENTLY"
              glib:nick="permanently"/>
    </enumeration>
    <callback name="ReallocFunc"
              c:type="GReallocFunc"
              doc="Changes the size of the memory block pointed to by @data to
The function should have the same semantics as realloc().">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Resolver"
           c:type="GResolver"
           parent="GObject.Object"
           glib:type-name="GResolver"
           glib:get-type="g_resolver_get_type"
           glib:type-struct="ResolverClass">
      <function name="get_default" c:identifier="g_resolver_get_default">
        <return-value transfer-ownership="full">
          <type name="Resolver" c:type="GResolver*"/>
        </return-value>
      </function>
      <function name="free_addresses" c:identifier="g_resolver_free_addresses">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="addresses" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </function>
      <function name="free_targets" c:identifier="g_resolver_free_targets">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="targets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="lookup_by_name"
                      invoker="lookup_by_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_name_async"
                      invoker="lookup_by_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_name_finish"
                      invoker="lookup_by_name_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address"
                      invoker="lookup_by_address"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address_async"
                      invoker="lookup_by_address_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address_finish"
                      invoker="lookup_by_address_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service" throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="rrname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rrname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service_finish"
                      invoker="lookup_service_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_default" c:identifier="g_resolver_set_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="lookup_by_name"
              c:identifier="g_resolver_lookup_by_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_name_async"
              c:identifier="g_resolver_lookup_by_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_name_finish"
              c:identifier="g_resolver_lookup_by_name_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address"
              c:identifier="g_resolver_lookup_by_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address_async"
              c:identifier="g_resolver_lookup_by_address_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address_finish"
              c:identifier="g_resolver_lookup_by_address_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service"
              c:identifier="g_resolver_lookup_service"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service_async"
              c:identifier="g_resolver_lookup_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service_finish"
              c:identifier="g_resolver_lookup_service_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ResolverPrivate" c:type="GResolverPrivate*"/>
      </field>
      <glib:signal name="reload">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ResolverClass"
            c:type="GResolverClass"
            glib:is-gtype-struct-for="Resolver">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="reload">
        <callback name="reload" c:type="reload">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name">
        <callback name="lookup_by_name" c:type="lookup_by_name" throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="hostname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name_async">
        <callback name="lookup_by_name_async" c:type="lookup_by_name_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="hostname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name_finish">
        <callback name="lookup_by_name_finish"
                  c:type="lookup_by_name_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address">
        <callback name="lookup_by_address"
                  c:type="lookup_by_address"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address_async">
        <callback name="lookup_by_address_async"
                  c:type="lookup_by_address_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address_finish">
        <callback name="lookup_by_address_finish"
                  c:type="lookup_by_address_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service">
        <callback name="lookup_service" c:type="lookup_service" throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="rrname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service_async">
        <callback name="lookup_service_async" c:type="lookup_service_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="rrname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service_finish">
        <callback name="lookup_service_finish"
                  c:type="lookup_service_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ResolverError"
                 doc="found
be looked up due to a network error or similar problem
An error code used with %G_RESOLVER_ERROR in a #GError returned
from a #GResolver routine."
                 version="2.22"
                 glib:type-name="GResolverError"
                 glib:get-type="g_resolver_error_get_type"
                 c:type="GResolverError"
                 glib:error-quark="g_resolver_error_quark">
      <member name="not_found"
              value="0"
              c:identifier="G_RESOLVER_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="temporary_failure"
              value="1"
              c:identifier="G_RESOLVER_ERROR_TEMPORARY_FAILURE"
              glib:nick="temporary-failure"/>
      <member name="internal"
              value="2"
              c:identifier="G_RESOLVER_ERROR_INTERNAL"
              glib:nick="internal"/>
    </enumeration>
    <record name="ResolverPrivate" c:type="GResolverPrivate">
    </record>
    <interface name="Seekable"
               c:type="GSeekable"
               doc="Seek object for streaming operations."
               glib:type-name="GSeekable"
               glib:get-type="g_seekable_get_type"
               glib:type-struct="SeekableIface">
      <virtual-method name="tell" invoker="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek" invoker="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" invoker="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate" invoker="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="tell" c:identifier="g_seekable_tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </method>
      <method name="can_seek" c:identifier="g_seekable_can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="seek" c:identifier="g_seekable_seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_truncate" c:identifier="g_seekable_can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="truncate" c:identifier="g_seekable_truncate" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="SeekableIface"
            c:type="GSeekableIface"
            glib:is-gtype-struct-for="Seekable"
            doc="Provides an interface for implementing seekable functionality on I/O Streams.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SimpleAsyncResult"
           c:type="GSimpleAsyncResult"
           doc="A simple implementation of #GAsyncResult."
           parent="GObject.Object"
           glib:type-name="GSimpleAsyncResult"
           glib:get-type="g_simple_async_result_get_type"
           glib:type-struct="SimpleAsyncResultClass">
      <implements name="AsyncResult"/>
      <constructor name="new" c:identifier="g_simple_async_result_new">
        <return-value transfer-ownership="full">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="source_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_error"
                   c:identifier="g_simple_async_result_new_error">
        <return-value transfer-ownership="full">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_valid" c:identifier="g_simple_async_result_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="source_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="set_op_res_gpointer"
              c:identifier="g_simple_async_result_set_op_res_gpointer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_op_res"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gpointer"
              c:identifier="g_simple_async_result_get_op_res_gpointer">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="set_op_res_gssize"
              c:identifier="g_simple_async_result_set_op_res_gssize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gssize"
              c:identifier="g_simple_async_result_get_op_res_gssize">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
      </method>
      <method name="set_op_res_gboolean"
              c:identifier="g_simple_async_result_set_op_res_gboolean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gboolean"
              c:identifier="g_simple_async_result_get_op_res_gboolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_source_tag"
              c:identifier="g_simple_async_result_get_source_tag">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="set_handle_cancellation"
              c:identifier="g_simple_async_result_set_handle_cancellation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handle_cancellation" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete" c:identifier="g_simple_async_result_complete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="complete_in_idle"
              c:identifier="g_simple_async_result_complete_in_idle">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="run_in_thread"
              c:identifier="g_simple_async_result_run_in_thread">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="SimpleAsyncThreadFunc"
                  c:type="GSimpleAsyncThreadFunc"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_error" c:identifier="g_simple_async_result_set_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SimpleAsyncResultClass"
            c:type="GSimpleAsyncResultClass"
            glib:is-gtype-struct-for="SimpleAsyncResult">
    </record>
    <callback name="SimpleAsyncThreadFunc"
              c:type="GSimpleAsyncThreadFunc"
              doc="Simple thread function that runs an asynchronous operation and
checks for cancellation.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Socket"
           c:type="GSocket"
           doc="A lowlevel network socket object."
           version="2.22"
           parent="GObject.Object"
           glib:type-name="GSocket"
           glib:get-type="g_socket_get_type"
           glib:type-struct="SocketClass">
      <implements name="Initable"/>
      <constructor name="new" c:identifier="g_socket_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_fd"
                   c:identifier="g_socket_new_from_fd"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fd" c:identifier="g_socket_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="get_family" c:identifier="g_socket_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="get_socket_type" c:identifier="g_socket_get_socket_type">
        <return-value transfer-ownership="full">
          <type name="SocketType" c:type="GSocketType"/>
        </return-value>
      </method>
      <method name="get_protocol" c:identifier="g_socket_get_protocol">
        <return-value transfer-ownership="full">
          <type name="SocketProtocol" c:type="GSocketProtocol"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_get_local_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="get_remote_address"
              c:identifier="g_socket_get_remote_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="set_blocking" c:identifier="g_socket_set_blocking">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="blocking" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocking" c:identifier="g_socket_get_blocking">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_keepalive" c:identifier="g_socket_set_keepalive">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="keepalive" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_keepalive" c:identifier="g_socket_get_keepalive">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_listen_backlog"
              c:identifier="g_socket_get_listen_backlog">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_listen_backlog"
              c:identifier="g_socket_set_listen_backlog">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="backlog" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_connected" c:identifier="g_socket_is_connected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="bind" c:identifier="g_socket_bind" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="allow_reuse" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect" c:identifier="g_socket_connect" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_connect_result"
              c:identifier="g_socket_check_connect_result"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="condition_check" c:identifier="g_socket_condition_check">
        <return-value transfer-ownership="full">
          <type name="GObject.IOCondition" c:type="GIOCondition"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
        </parameters>
      </method>
      <method name="condition_wait"
              c:identifier="g_socket_condition_wait"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept" c:identifier="g_socket_accept" throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="listen" c:identifier="g_socket_listen" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="receive" c:identifier="g_socket_receive" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_from"
              c:identifier="g_socket_receive_from"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="g_socket_send" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_to" c:identifier="g_socket_send_to" throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_message"
              c:identifier="g_socket_receive_message"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
          <parameter name="vectors" transfer-ownership="none">
            <type name="InputVector" c:type="GInputVector*"/>
          </parameter>
          <parameter name="num_vectors" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="messages" transfer-ownership="none">
            <type name="SocketControlMessage"
                  c:type="GSocketControlMessage***"/>
          </parameter>
          <parameter name="num_messages"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="flags" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message"
              c:identifier="g_socket_send_message"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="vectors" transfer-ownership="none">
            <type name="OutputVector" c:type="GOutputVector*"/>
          </parameter>
          <parameter name="num_vectors" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="messages" transfer-ownership="none">
            <type name="SocketControlMessage"
                  c:type="GSocketControlMessage**"/>
          </parameter>
          <parameter name="num_messages" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_socket_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="shutdown" c:identifier="g_socket_shutdown" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="shutdown_read" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="shutdown_write" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_socket_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="create_source" c:identifier="g_socket_create_source">
        <return-value transfer-ownership="full">
          <type name="GLib.Source" c:type="GSource*"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="speaks_ipv4" c:identifier="g_socket_speaks_ipv4">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="connection_factory_create_connection"
              c:identifier="g_socket_connection_factory_create_connection">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
      </method>
      <property name="blocking" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="family" writable="1" construct-only="1">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="fd" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
      <property name="keepalive" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="listen-backlog" writable="1">
        <type name="int" c:type="gint"/>
      </property>
      <property name="local-address">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="protocol" writable="1" construct-only="1">
        <type name="SocketProtocol" c:type="GSocketProtocol"/>
      </property>
      <property name="remote-address">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="type" writable="1" construct-only="1">
        <type name="SocketType" c:type="GSocketType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketPrivate" c:type="GSocketPrivate*"/>
      </field>
    </class>
    <class name="SocketAddress"
           c:type="GSocketAddress"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketAddress"
           glib:get-type="g_socket_address_get_type"
           glib:type-struct="SocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new_from_native"
                   c:identifier="g_socket_address_new_from_native">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_family" invoker="get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_native_size" invoker="get_native_size">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
      </virtual-method>
      <virtual-method name="to_native" invoker="to_native" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_family" c:identifier="g_socket_address_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="to_native"
              c:identifier="g_socket_address_to_native"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_native_size"
              c:identifier="g_socket_address_get_native_size">
        <return-value transfer-ownership="none">
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
      </method>
      <property name="family">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SocketAddressClass"
            c:type="GSocketAddressClass"
            glib:is-gtype-struct-for="SocketAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_family">
        <callback name="get_family" c:type="get_family">
          <return-value transfer-ownership="full">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_native_size">
        <callback name="get_native_size" c:type="get_native_size">
          <return-value transfer-ownership="none">
            <type name="ssize_t" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_native">
        <callback name="to_native" c:type="to_native" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="destlen" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SocketAddressEnumerator"
           c:type="GSocketAddressEnumerator"
           doc="Enumerator type for objects that contain or generate
#GSocketAddress&lt;!-- --&gt;es."
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketAddressEnumerator"
           glib:get-type="g_socket_address_enumerator_get_type"
           glib:type-struct="SocketAddressEnumeratorClass">
      <virtual-method name="next" invoker="next" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_async" invoker="next_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_finish" invoker="next_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="next"
              c:identifier="g_socket_address_enumerator_next"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_async"
              c:identifier="g_socket_address_enumerator_next_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_finish"
              c:identifier="g_socket_address_enumerator_next_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SocketAddressEnumeratorClass"
            c:type="GSocketAddressEnumeratorClass"
            glib:is-gtype-struct-for="SocketAddressEnumerator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="next">
        <callback name="next" c:type="next" throws="1">
          <return-value transfer-ownership="full">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_async">
        <callback name="next_async" c:type="next_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_finish">
        <callback name="next_finish" c:type="next_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SocketClass"
            c:type="GSocketClass"
            glib:is-gtype-struct-for="Socket">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="SocketClient"
           c:type="GSocketClient"
           doc="A helper class for network servers to listen for and accept connections."
           version="2.22"
           parent="GObject.Object"
           glib:type-name="GSocketClient"
           glib:get-type="g_socket_client_get_type"
           glib:type-struct="SocketClientClass">
      <constructor name="new" c:identifier="g_socket_client_new">
        <return-value transfer-ownership="full">
          <type name="SocketClient" c:type="GSocketClient*"/>
        </return-value>
      </constructor>
      <method name="get_family" c:identifier="g_socket_client_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="set_family" c:identifier="g_socket_client_set_family">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_socket_type"
              c:identifier="g_socket_client_get_socket_type">
        <return-value transfer-ownership="full">
          <type name="SocketType" c:type="GSocketType"/>
        </return-value>
      </method>
      <method name="set_socket_type"
              c:identifier="g_socket_client_set_socket_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_protocol" c:identifier="g_socket_client_get_protocol">
        <return-value transfer-ownership="full">
          <type name="SocketProtocol" c:type="GSocketProtocol"/>
        </return-value>
      </method>
      <method name="set_protocol" c:identifier="g_socket_client_set_protocol">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_client_get_local_address">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="set_local_address"
              c:identifier="g_socket_client_set_local_address">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect" c:identifier="g_socket_client_connect" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="connectable" transfer-ownership="none">
            <type name="SocketConnectable" c:type="GSocketConnectable*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host"
              c:identifier="g_socket_client_connect_to_host"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service"
              c:identifier="g_socket_client_connect_to_service"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_async"
              c:identifier="g_socket_client_connect_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connectable" transfer-ownership="none">
            <type name="SocketConnectable" c:type="GSocketConnectable*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="g_socket_client_connect_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host_async"
              c:identifier="g_socket_client_connect_to_host_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host_finish"
              c:identifier="g_socket_client_connect_to_host_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service_async"
              c:identifier="g_socket_client_connect_to_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service_finish"
              c:identifier="g_socket_client_connect_to_service_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="family" writable="1" construct="1">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="local-address" writable="1" construct="1">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="protocol" writable="1" construct="1">
        <type name="SocketProtocol" c:type="GSocketProtocol"/>
      </property>
      <property name="type" writable="1" construct="1">
        <type name="SocketType" c:type="GSocketType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketClientPrivate" c:type="GSocketClientPrivate*"/>
      </field>
    </class>
    <record name="SocketClientClass"
            c:type="GSocketClientClass"
            glib:is-gtype-struct-for="SocketClient">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketClientPrivate" c:type="GSocketClientPrivate">
    </record>
    <interface name="SocketConnectable"
               c:type="GSocketConnectable"
               doc="Interface for objects that contain or generate #GSocketAddress&lt;!-- --&gt;es."
               glib:type-name="GSocketConnectable"
               glib:get-type="g_socket_connectable_get_type"
               glib:type-struct="SocketConnectableIface">
      <virtual-method name="enumerate" invoker="enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </virtual-method>
      <method name="enumerate" c:identifier="g_socket_connectable_enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </method>
    </interface>
    <record name="SocketConnectableIface"
            c:type="GSocketConnectableIface"
            glib:is-gtype-struct-for="SocketConnectable"
            doc="Provides an interface for returning a #GSocketAddressEnumerator">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="enumerate">
        <callback name="enumerate" c:type="enumerate">
          <return-value transfer-ownership="full">
            <type name="SocketAddressEnumerator"
                  c:type="GSocketAddressEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="connectable" transfer-ownership="none">
              <type name="SocketConnectable" c:type="GSocketConnectable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SocketConnection"
           c:type="GSocketConnection"
           doc="A socket connection GIOStream object for connection-oriented sockets."
           version="2.22"
           parent="IOStream"
           glib:type-name="GSocketConnection"
           glib:get-type="g_socket_connection_get_type"
           glib:type-struct="SocketConnectionClass">
      <function name="factory_register_type"
                c:identifier="g_socket_connection_factory_register_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="factory_lookup_type"
                c:identifier="g_socket_connection_factory_lookup_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol_id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_socket" c:identifier="g_socket_connection_get_socket">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_connection_get_local_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="get_remote_address"
              c:identifier="g_socket_connection_get_remote_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <property name="socket" writable="1" construct-only="1">
        <type name="Socket" c:type="GSocket"/>
      </property>
      <field name="parent_instance">
        <type name="IOStream" c:type="GIOStream"/>
      </field>
      <field name="priv">
        <type name="SocketConnectionPrivate"
              c:type="GSocketConnectionPrivate*"/>
      </field>
    </class>
    <record name="SocketConnectionClass"
            c:type="GSocketConnectionClass"
            glib:is-gtype-struct-for="SocketConnection">
      <field name="parent_class">
        <type name="IOStreamClass" c:type="GIOStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketConnectionPrivate" c:type="GSocketConnectionPrivate">
    </record>
    <class name="SocketControlMessage"
           c:type="GSocketControlMessage"
           doc="Base class for socket-type specific control messages that can be sent and
received over #GSocket."
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketControlMessage"
           glib:get-type="g_socket_control_message_get_type"
           glib:type-struct="SocketControlMessageClass">
      <function name="deserialize"
                c:identifier="g_socket_control_message_deserialize">
        <return-value transfer-ownership="full">
          <type name="SocketControlMessage" c:type="GSocketControlMessage*"/>
        </return-value>
        <parameters>
          <parameter name="level" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_size" invoker="get_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_level" invoker="get_level">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <virtual-method name="serialize" invoker="serialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_size" c:identifier="g_socket_control_message_get_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_level"
              c:identifier="g_socket_control_message_get_level">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="get_msg_type"
              c:identifier="g_socket_control_message_get_msg_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="serialize"
              c:identifier="g_socket_control_message_serialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketControlMessagePrivate"
              c:type="GSocketControlMessagePrivate*"/>
      </field>
    </class>
    <record name="SocketControlMessageClass"
            c:type="GSocketControlMessageClass"
            glib:is-gtype-struct-for="SocketControlMessage">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_size">
        <callback name="get_size" c:type="get_size">
          <return-value transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_level">
        <callback name="get_level" c:type="get_level">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_type">
        <callback name="get_type" c:type="get_type">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="serialize">
        <callback name="serialize" c:type="serialize">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deserialize">
        <callback name="deserialize" c:type="deserialize">
          <return-value transfer-ownership="full">
            <type name="SocketControlMessage" c:type="GSocketControlMessage*"/>
          </return-value>
          <parameters>
            <parameter name="level" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="size_t" c:type="gsize"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketControlMessagePrivate"
            c:type="GSocketControlMessagePrivate">
    </record>
    <enumeration name="SocketFamily"
                 doc="The protocol family of a #GSocketAddress. (These values are
identical to the system defines %AF_INET, %AF_INET6 and %AF_UNIX,
if available.)"
                 version="2.22"
                 glib:type-name="GSocketFamily"
                 glib:get-type="g_socket_family_get_type"
                 c:type="GSocketFamily">
      <member name="invalid"
              value="0"
              c:identifier="G_SOCKET_FAMILY_INVALID"
              glib:nick="invalid"/>
      <member name="unix"
              value="1"
              c:identifier="G_SOCKET_FAMILY_UNIX"
              glib:nick="unix"/>
      <member name="ipv4"
              value="2"
              c:identifier="G_SOCKET_FAMILY_IPV4"
              glib:nick="ipv4"/>
      <member name="ipv6"
              value="10"
              c:identifier="G_SOCKET_FAMILY_IPV6"
              glib:nick="ipv6"/>
    </enumeration>
    <class name="SocketListener"
           c:type="GSocketListener"
           parent="GObject.Object"
           glib:type-name="GSocketListener"
           glib:get-type="g_socket_listener_get_type"
           glib:type-struct="SocketListenerClass">
      <constructor name="new" c:identifier="g_socket_listener_new">
        <return-value transfer-ownership="full">
          <type name="SocketListener" c:type="GSocketListener*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="set_backlog" c:identifier="g_socket_listener_set_backlog">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="listen_backlog" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_socket"
              c:identifier="g_socket_listener_add_socket"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <type name="Socket" c:type="GSocket*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_address"
              c:identifier="g_socket_listener_add_address"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="effective_address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_inet_port"
              c:identifier="g_socket_listener_add_inet_port"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_any_inet_port"
              c:identifier="g_socket_listener_add_any_inet_port"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket"
              c:identifier="g_socket_listener_accept_socket"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket_async"
              c:identifier="g_socket_listener_accept_socket_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket_finish"
              c:identifier="g_socket_listener_accept_socket_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept" c:identifier="g_socket_listener_accept" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_async"
              c:identifier="g_socket_listener_accept_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_finish"
              c:identifier="g_socket_listener_accept_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_socket_listener_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="listen-backlog" writable="1" construct="1">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketListenerPrivate" c:type="GSocketListenerPrivate*"/>
      </field>
    </class>
    <record name="SocketListenerClass"
            c:type="GSocketListenerClass"
            glib:is-gtype-struct-for="SocketListener">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="listener" transfer-ownership="none">
              <type name="SocketListener" c:type="GSocketListener*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketListenerPrivate" c:type="GSocketListenerPrivate">
    </record>
    <enumeration name="SocketMsgFlags"
                 doc="the queue.
only send to hosts on directly connected networks.
Flags used in g_socket_receive_message() and g_socket_send_message().
The flags listed in the enum are some commonly available flags, but the
values used for them are the same as on the platform, and any other flags
are passed in/out as is. So to use a platform specific flag, just include
the right system header and pass in the flag."
                 version="2.22"
                 glib:type-name="GSocketMsgFlags"
                 glib:get-type="g_socket_msg_flags_get_type"
                 c:type="GSocketMsgFlags">
      <member name="none"
              value="0"
              c:identifier="G_SOCKET_MSG_NONE"
              glib:nick="none"/>
      <member name="oob"
              value="1"
              c:identifier="G_SOCKET_MSG_OOB"
              glib:nick="oob"/>
      <member name="peek"
              value="2"
              c:identifier="G_SOCKET_MSG_PEEK"
              glib:nick="peek"/>
      <member name="dontroute"
              value="4"
              c:identifier="G_SOCKET_MSG_DONTROUTE"
              glib:nick="dontroute"/>
    </enumeration>
    <record name="SocketPrivate" c:type="GSocketPrivate">
    </record>
    <enumeration name="SocketProtocol"
                 doc="A protocol identifier is specified when creating a #GSocket, which is a
family/type specific identifier, where 0 means the default protocol for
the particular family/type.
This enum contains a set of commonly available and used protocols. You
can also pass any other identifiers handled by the platform in order to
use protocols not listed here."
                 version="2.22"
                 glib:type-name="GSocketProtocol"
                 glib:get-type="g_socket_protocol_get_type"
                 c:type="GSocketProtocol">
      <member name="unknown"
              value="-1"
              c:identifier="G_SOCKET_PROTOCOL_UNKNOWN"
              glib:nick="unknown"/>
      <member name="default"
              value="0"
              c:identifier="G_SOCKET_PROTOCOL_DEFAULT"
              glib:nick="default"/>
      <member name="tcp"
              value="6"
              c:identifier="G_SOCKET_PROTOCOL_TCP"
              glib:nick="tcp"/>
      <member name="udp"
              value="17"
              c:identifier="G_SOCKET_PROTOCOL_UDP"
              glib:nick="udp"/>
      <member name="sctp"
              value="132"
              c:identifier="G_SOCKET_PROTOCOL_SCTP"
              glib:nick="sctp"/>
    </enumeration>
    <class name="SocketService"
           c:type="GSocketService"
           doc="A helper class for handling accepting incomming connections in the
glib mainloop."
           version="2.22"
           parent="SocketListener"
           glib:type-name="GSocketService"
           glib:get-type="g_socket_service_get_type"
           glib:type-struct="SocketServiceClass">
      <constructor name="new" c:identifier="g_socket_service_new">
        <return-value transfer-ownership="full">
          <type name="SocketService" c:type="GSocketService*"/>
        </return-value>
      </constructor>
      <method name="start" c:identifier="g_socket_service_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="g_socket_service_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_active" c:identifier="g_socket_service_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="SocketListener" c:type="GSocketListener"/>
      </field>
      <field name="priv">
        <type name="SocketServicePrivate" c:type="GSocketServicePrivate*"/>
      </field>
      <glib:signal name="incoming">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="SocketConnection" c:type="GSocketConnection"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SocketServiceClass"
            c:type="GSocketServiceClass"
            glib:is-gtype-struct-for="SocketService">
      <field name="parent_class">
        <type name="SocketListenerClass" c:type="GSocketListenerClass"/>
      </field>
      <field name="incoming">
        <callback name="incoming" c:type="incoming">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="service" transfer-ownership="none">
              <type name="SocketService" c:type="GSocketService*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="SocketConnection" c:type="GSocketConnection*"/>
            </parameter>
            <parameter name="source_object" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketServicePrivate" c:type="GSocketServicePrivate">
    </record>
    <callback name="SocketSourceFunc"
              c:type="GSocketSourceFunc"
              doc="This is the function type of the callback used for the #GSource
returned by g_socket_create_source()."
              version="2.22">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="socket" transfer-ownership="none">
          <type name="Socket" c:type="GSocket*"/>
        </parameter>
        <parameter name="condition" transfer-ownership="none">
          <type name="GObject.IOCondition" c:type="GIOCondition"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="SocketType"
                 doc="(e.g. UDP)
of fixed maximum length (e.g. SCTP).
Flags used when creating a #GSocket. Some protocols may not implement
all the socket types."
                 version="2.22"
                 glib:type-name="GSocketType"
                 glib:get-type="g_socket_type_get_type"
                 c:type="GSocketType">
      <member name="invalid"
              value="0"
              c:identifier="G_SOCKET_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="stream"
              value="1"
              c:identifier="G_SOCKET_TYPE_STREAM"
              glib:nick="stream"/>
      <member name="datagram"
              value="2"
              c:identifier="G_SOCKET_TYPE_DATAGRAM"
              glib:nick="datagram"/>
      <member name="seqpacket"
              value="3"
              c:identifier="G_SOCKET_TYPE_SEQPACKET"
              glib:nick="seqpacket"/>
    </enumeration>
    <record name="SrvTarget"
            c:type="GSrvTarget"
            glib:type-name="GSrvTarget"
            glib:get-type="g_srv_target_get_type">
      <constructor name="new" c:identifier="g_srv_target_new">
        <return-value transfer-ownership="full">
          <type name="SrvTarget" c:type="GSrvTarget*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="weight" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="g_srv_target_copy">
        <return-value transfer-ownership="full">
          <type name="SrvTarget" c:type="GSrvTarget*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="g_srv_target_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_hostname" c:identifier="g_srv_target_get_hostname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_srv_target_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_priority" c:identifier="g_srv_target_get_priority">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_weight" c:identifier="g_srv_target_get_weight">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
    </record>
    <class name="TcpConnection"
           c:type="GTcpConnection"
           doc="A #GSocketConnection for UNIX domain socket connections."
           version="2.22"
           parent="SocketConnection"
           glib:type-name="GTcpConnection"
           glib:get-type="g_tcp_connection_get_type"
           glib:type-struct="TcpConnectionClass">
      <method name="set_graceful_disconnect"
              c:identifier="g_tcp_connection_set_graceful_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="graceful_disconnect" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_graceful_disconnect"
              c:identifier="g_tcp_connection_get_graceful_disconnect">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="graceful-disconnect" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="SocketConnection" c:type="GSocketConnection"/>
      </field>
      <field name="priv">
        <type name="TcpConnectionPrivate" c:type="GTcpConnectionPrivate*"/>
      </field>
    </class>
    <record name="TcpConnectionClass"
            c:type="GTcpConnectionClass"
            glib:is-gtype-struct-for="TcpConnection">
      <field name="parent_class">
        <type name="SocketConnectionClass" c:type="GSocketConnectionClass"/>
      </field>
    </record>
    <record name="TcpConnectionPrivate" c:type="GTcpConnectionPrivate">
    </record>
    <class name="ThemedIcon"
           c:type="GThemedIcon"
           doc="An implementation of #GIcon for themed icons."
           parent="GObject.Object"
           glib:type-name="GThemedIcon"
           glib:get-type="g_themed_icon_get_type"
           glib:type-struct="ThemedIconClass">
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_themed_icon_new">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_default_fallbacks"
                   c:identifier="g_themed_icon_new_with_default_fallbacks">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_names"
                   c:identifier="g_themed_icon_new_from_names">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconnames" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="prepend_name" c:identifier="g_themed_icon_prepend_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_name" c:identifier="g_themed_icon_append_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_names" c:identifier="g_themed_icon_get_names">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <property name="name" readable="0" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="names" writable="1" construct-only="1">
        <type name="GObject.Strv" c:type="GStrv"/>
      </property>
      <property name="use-default-fallbacks" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ThemedIconClass"
            c:type="GThemedIconClass"
            glib:is-gtype-struct-for="ThemedIcon">
    </record>
    <class name="ThreadedSocketService"
           c:type="GThreadedSocketService"
           doc="A helper class for handling accepting incomming connections in the
glib mainloop and handling them in a thread."
           version="2.22"
           parent="SocketService"
           glib:type-name="GThreadedSocketService"
           glib:get-type="g_threaded_socket_service_get_type"
           glib:type-struct="ThreadedSocketServiceClass">
      <constructor name="new" c:identifier="g_threaded_socket_service_new">
        <return-value transfer-ownership="full">
          <type name="ThreadedSocketService" c:type="GSocketService*"/>
        </return-value>
        <parameters>
          <parameter name="max_threads" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="max-threads" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="SocketService" c:type="GSocketService"/>
      </field>
      <field name="priv">
        <type name="ThreadedSocketServicePrivate"
              c:type="GThreadedSocketServicePrivate*"/>
      </field>
      <glib:signal name="run">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="SocketConnection" c:type="GSocketConnection"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ThreadedSocketServiceClass"
            c:type="GThreadedSocketServiceClass"
            glib:is-gtype-struct-for="ThreadedSocketService">
      <field name="parent_class">
        <type name="SocketServiceClass" c:type="GSocketServiceClass"/>
      </field>
      <field name="run">
        <callback name="run" c:type="run">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="service" transfer-ownership="none">
              <type name="ThreadedSocketService"
                    c:type="GThreadedSocketService*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="SocketConnection" c:type="GSocketConnection*"/>
            </parameter>
            <parameter name="source_object" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ThreadedSocketServicePrivate"
            c:type="GThreadedSocketServicePrivate">
    </record>
    <class name="UnixConnection"
           c:type="GUnixConnection"
           parent="SocketConnection"
           glib:type-name="GUnixConnection"
           glib:get-type="g_unix_connection_get_type"
           glib:type-struct="UnixConnectionClass">
      <method name="send_fd"
              c:identifier="g_unix_connection_send_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_fd"
              c:identifier="g_unix_connection_receive_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SocketConnection" c:type="GSocketConnection"/>
      </field>
      <field name="priv">
        <type name="UnixConnectionPrivate" c:type="GUnixConnectionPrivate*"/>
      </field>
    </class>
    <record name="UnixConnectionClass"
            c:type="GUnixConnectionClass"
            glib:is-gtype-struct-for="UnixConnection">
      <field name="parent_class">
        <type name="SocketConnectionClass" c:type="GSocketConnectionClass"/>
      </field>
    </record>
    <record name="UnixConnectionPrivate" c:type="GUnixConnectionPrivate">
    </record>
    <class name="UnixFDList"
           c:type="GUnixFDList"
           parent="GObject.Object"
           glib:type-name="GUnixFDList"
           glib:get-type="g_unix_fd_list_get_type"
           glib:type-struct="UnixFDListClass">
      <constructor name="new" c:identifier="g_unix_fd_list_new">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_array"
                   c:identifier="g_unix_fd_list_new_from_array">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
        <parameters>
          <parameter name="fds" direction="out" transfer-ownership="none">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="n_fds" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append" c:identifier="g_unix_fd_list_append" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="g_unix_fd_list_get_length">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get" c:identifier="g_unix_fd_list_get" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_fds" c:identifier="g_unix_fd_list_peek_fds">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_fds" c:identifier="g_unix_fd_list_steal_fds">
        <return-value transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="UnixFDListPrivate" c:type="GUnixFDListPrivate*"/>
      </field>
    </class>
    <record name="UnixFDListClass"
            c:type="GUnixFDListClass"
            glib:is-gtype-struct-for="UnixFDList">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixFDListPrivate" c:type="GUnixFDListPrivate">
    </record>
    <class name="UnixFDMessage"
           c:type="GUnixFDMessage"
           parent="SocketControlMessage"
           glib:type-name="GUnixFDMessage"
           glib:get-type="g_unix_fd_message_get_type"
           glib:type-struct="UnixFDMessageClass">
      <constructor name="new_with_fd_list"
                   c:identifier="g_unix_fd_message_new_with_fd_list">
        <return-value transfer-ownership="full">
          <type name="UnixFDMessage" c:type="GSocketControlMessage*"/>
        </return-value>
        <parameters>
          <parameter name="fd_list" transfer-ownership="none">
            <type name="UnixFDList" c:type="GUnixFDList*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="g_unix_fd_message_new">
        <return-value transfer-ownership="full">
          <type name="UnixFDMessage" c:type="GSocketControlMessage*"/>
        </return-value>
      </constructor>
      <method name="get_fd_list" c:identifier="g_unix_fd_message_get_fd_list">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
      </method>
      <method name="steal_fds" c:identifier="g_unix_fd_message_steal_fds">
        <return-value transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_fd"
              c:identifier="g_unix_fd_message_append_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="fd-list" writable="1" construct-only="1">
        <type name="UnixFDList" c:type="GUnixFDList"/>
      </property>
      <field name="parent_instance">
        <type name="SocketControlMessage" c:type="GSocketControlMessage"/>
      </field>
      <field name="priv">
        <type name="UnixFDMessagePrivate" c:type="GUnixFDMessagePrivate*"/>
      </field>
    </class>
    <record name="UnixFDMessageClass"
            c:type="GUnixFDMessageClass"
            glib:is-gtype-struct-for="UnixFDMessage">
      <field name="parent_class">
        <type name="SocketControlMessageClass"
              c:type="GSocketControlMessageClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixFDMessagePrivate" c:type="GUnixFDMessagePrivate">
    </record>
    <class name="UnixInputStream"
           c:type="GUnixInputStream"
           doc="Implements #GInputStream for reading from selectable unix file descriptors"
           parent="InputStream"
           glib:type-name="GUnixInputStream"
           glib:get-type="g_unix_input_stream_get_type"
           glib:type-struct="UnixInputStreamClass">
      <constructor name="new" c:identifier="g_unix_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="UnixInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_close_fd"
              c:identifier="g_unix_input_stream_set_close_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_close_fd"
              c:identifier="g_unix_input_stream_get_close_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_unix_input_stream_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="close-fd" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="fd" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="UnixInputStreamPrivate" c:type="GUnixInputStreamPrivate*"/>
      </field>
    </class>
    <record name="UnixInputStreamClass"
            c:type="GUnixInputStreamClass"
            glib:is-gtype-struct-for="UnixInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixInputStreamPrivate" c:type="GUnixInputStreamPrivate">
    </record>
    <record name="UnixMountEntry"
            c:type="GUnixMountEntry"
            doc="Defines a Unix mount entry (e.g. &lt;filename&gt;/media/cdrom&lt;/filename&gt;).
This corresponds roughly to a mtab entry.">
    </record>
    <class name="UnixMountMonitor"
           c:type="GUnixMountMonitor"
           doc="Watches #GUnixMount&lt;!-- --&gt;s for changes."
           parent="GObject.Object"
           glib:type-name="GUnixMountMonitor"
           glib:get-type="g_unix_mount_monitor_get_type"
           glib:type-struct="UnixMountMonitorClass">
      <constructor name="new" c:identifier="g_unix_mount_monitor_new">
        <return-value transfer-ownership="full">
          <type name="UnixMountMonitor" c:type="GUnixMountMonitor*"/>
        </return-value>
      </constructor>
      <method name="set_rate_limit"
              c:identifier="g_unix_mount_monitor_set_rate_limit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="limit_msec" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="mountpoints-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="mounts-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="UnixMountMonitorClass"
            c:type="GUnixMountMonitorClass"
            glib:is-gtype-struct-for="UnixMountMonitor">
    </record>
    <record name="UnixMountPoint"
            c:type="GUnixMountPoint"
            doc="Defines a Unix mount point (e.g. &lt;filename&gt;/dev&lt;/filename&gt;).
This corresponds roughly to a fstab entry.">
      <method name="free" c:identifier="g_unix_mount_point_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="compare" c:identifier="g_unix_mount_point_compare">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="mount2" transfer-ownership="none">
            <type name="UnixMountPoint" c:type="GUnixMountPoint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mount_path"
              c:identifier="g_unix_mount_point_get_mount_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_device_path"
              c:identifier="g_unix_mount_point_get_device_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_fs_type" c:identifier="g_unix_mount_point_get_fs_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="is_readonly" c:identifier="g_unix_mount_point_is_readonly">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_user_mountable"
              c:identifier="g_unix_mount_point_is_user_mountable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_loopback" c:identifier="g_unix_mount_point_is_loopback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="guess_can_eject"
              c:identifier="g_unix_mount_point_guess_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="guess_name" c:identifier="g_unix_mount_point_guess_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="guess_icon" c:identifier="g_unix_mount_point_guess_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
    </record>
    <class name="UnixOutputStream"
           c:type="GUnixOutputStream"
           doc="Implements #GOutputStream for outputting to selectable unix file descriptors"
           parent="OutputStream"
           glib:type-name="GUnixOutputStream"
           glib:get-type="g_unix_output_stream_get_type"
           glib:type-struct="UnixOutputStreamClass">
      <constructor name="new" c:identifier="g_unix_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="UnixOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_close_fd"
              c:identifier="g_unix_output_stream_set_close_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_close_fd"
              c:identifier="g_unix_output_stream_get_close_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_unix_output_stream_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="close-fd" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="fd" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="UnixOutputStreamPrivate"
              c:type="GUnixOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="UnixOutputStreamClass"
            c:type="GUnixOutputStreamClass"
            glib:is-gtype-struct-for="UnixOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixOutputStreamPrivate" c:type="GUnixOutputStreamPrivate">
    </record>
    <class name="UnixSocketAddress"
           c:type="GUnixSocketAddress"
           parent="SocketAddress"
           glib:type-name="GUnixSocketAddress"
           glib:get-type="g_unix_socket_address_get_type"
           glib:type-struct="UnixSocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_unix_socket_address_new">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_abstract"
                   c:identifier="g_unix_socket_address_new_abstract">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="path_len" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="abstract_names_supported"
                c:identifier="g_unix_socket_address_abstract_names_supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </function>
      <method name="get_path" c:identifier="g_unix_socket_address_get_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_path_len"
              c:identifier="g_unix_socket_address_get_path_len">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_is_abstract"
              c:identifier="g_unix_socket_address_get_is_abstract">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="abstract" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="path" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="path-as-array" writable="1" construct-only="1">
        <type name="GLib.ByteArray" c:type="GByteArray"/>
      </property>
      <field name="parent_instance">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </field>
      <field name="priv">
        <type name="UnixSocketAddressPrivate"
              c:type="GUnixSocketAddressPrivate*"/>
      </field>
    </class>
    <record name="UnixSocketAddressClass"
            c:type="GUnixSocketAddressClass"
            glib:is-gtype-struct-for="UnixSocketAddress">
      <field name="parent_class">
        <type name="SocketAddressClass" c:type="GSocketAddressClass"/>
      </field>
    </record>
    <record name="UnixSocketAddressPrivate" c:type="GUnixSocketAddressPrivate">
    </record>
    <constant name="VFS_EXTENSION_POINT_NAME" value="gio-vfs">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_HAL_UDI" value="hal-udi">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_LABEL" value="label">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_NFS_MOUNT" value="nfs-mount">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_UNIX_DEVICE" value="unix-device">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_UUID" value="uuid">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_MONITOR_EXTENSION_POINT_NAME"
              value="gio-volume-monitor">
      <type name="utf8"/>
    </constant>
    <class name="Vfs"
           c:type="GVfs"
           doc="Virtual File System object."
           parent="GObject.Object"
           glib:type-name="GVfs"
           glib:get-type="g_vfs_get_type"
           glib:type-struct="VfsClass">
      <function name="get_default" c:identifier="g_vfs_get_default">
        <return-value transfer-ownership="full">
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </function>
      <function name="get_local" c:identifier="g_vfs_get_local">
        <return-value transfer-ownership="full">
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </function>
      <virtual-method name="is_active" invoker="is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_file_for_path" invoker="get_file_for_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_file_for_uri" invoker="get_file_for_uri">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_supported_uri_schemes"
                      invoker="get_supported_uri_schemes">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="parse_name" invoker="parse_name">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="parse_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_add_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="attribute_matcher" transfer-ownership="none">
            <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="extra_data" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="free_extra_data" transfer-ownership="none">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_writable_namespaces">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_set_attributes" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_removed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_moved">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="is_active" c:identifier="g_vfs_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_file_for_path" c:identifier="g_vfs_get_file_for_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_for_uri" c:identifier="g_vfs_get_file_for_uri">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_uri_schemes"
              c:identifier="g_vfs_get_supported_uri_schemes">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="parse_name" c:identifier="g_vfs_parse_name">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="parse_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="VfsClass" c:type="GVfsClass" glib:is-gtype-struct-for="Vfs">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="is_active">
        <callback name="is_active" c:type="is_active">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_file_for_path">
        <callback name="get_file_for_path" c:type="get_file_for_path">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_file_for_uri">
        <callback name="get_file_for_uri" c:type="get_file_for_uri">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_supported_uri_schemes">
        <callback name="get_supported_uri_schemes"
                  c:type="get_supported_uri_schemes">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_name">
        <callback name="parse_name" c:type="parse_name">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="parse_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_add_info">
        <callback name="local_file_add_info" c:type="local_file_add_info">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="uint64" c:type="guint64"/>
            </parameter>
            <parameter name="attribute_matcher" transfer-ownership="none">
              <type name="FileAttributeMatcher"
                    c:type="GFileAttributeMatcher*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="extra_data" transfer-ownership="none">
              <type name="any" c:type="gpointer*"/>
            </parameter>
            <parameter name="free_extra_data" transfer-ownership="none">
              <type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_writable_namespaces">
        <callback name="add_writable_namespaces"
                  c:type="add_writable_namespaces">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="list" transfer-ownership="none">
              <type name="FileAttributeInfoList"
                    c:type="GFileAttributeInfoList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_set_attributes">
        <callback name="local_file_set_attributes"
                  c:type="local_file_set_attributes"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_removed">
        <callback name="local_file_removed" c:type="local_file_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_moved">
        <callback name="local_file_moved" c:type="local_file_moved">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <interface name="Volume"
               c:type="GVolume"
               doc="Opaque mountable volume object."
               glib:type-name="GVolume"
               glib:get-type="g_volume_get_type"
               glib:type-struct="VolumeIface">
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uuid" invoker="get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_drive" invoker="get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mount" invoker="get_mount">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_mount" invoker="can_mount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="mount_fn">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_finish" invoker="mount_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_identifier" invoker="get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_identifiers"
                      invoker="enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="should_automount" invoker="should_automount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_activation_root" invoker="get_activation_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="g_volume_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_volume_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_uuid" c:identifier="g_volume_get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_drive" c:identifier="g_volume_get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </method>
      <method name="get_mount" c:identifier="g_volume_get_mount">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
      </method>
      <method name="can_mount" c:identifier="g_volume_can_mount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_volume_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="should_automount" c:identifier="g_volume_should_automount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="mount" c:identifier="g_volume_mount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_finish"
              c:identifier="g_volume_mount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject" c:identifier="g_volume_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_volume_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_identifier" c:identifier="g_volume_get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_identifiers"
              c:identifier="g_volume_enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_activation_root"
              c:identifier="g_volume_get_activation_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_volume_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_volume_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="VolumeIface"
            c:type="GVolumeIface"
            glib:is-gtype-struct-for="Volume"
            doc="#GVolume implementations must emit the #GMountOperation::aborted
signal before completing a mount operation that is aborted while
awaiting input from the user through a #GMountOperation instance.
the #GVolume doesn&apos;t have one.
of &lt;link linkend=&quot;volume-identifier&quot;&gt;identifiers&lt;/link&gt; which the #GVolume has.
it is not known.
Interface for implementing operations for mountable volumes.">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="removed">
        <callback name="removed" c:type="removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uuid">
        <callback name="get_uuid" c:type="get_uuid">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_drive">
        <callback name="get_drive" c:type="get_drive">
          <return-value transfer-ownership="full">
            <type name="Drive" c:type="GDrive*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mount">
        <callback name="get_mount" c:type="get_mount">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_mount">
        <callback name="can_mount" c:type="can_mount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_fn">
        <callback name="mount_fn" c:type="mount_fn">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_finish">
        <callback name="mount_finish" c:type="mount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_identifier">
        <callback name="get_identifier" c:type="get_identifier">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="kind" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_identifiers">
        <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
          <return-value transfer-ownership="full">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="should_automount">
        <callback name="should_automount" c:type="should_automount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_activation_root">
        <callback name="get_activation_root" c:type="get_activation_root">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="VolumeMonitor"
           c:type="GVolumeMonitor"
           doc="A Volume Monitor that watches for volume events."
           parent="GObject.Object"
           glib:type-name="GVolumeMonitor"
           glib:get-type="g_volume_monitor_get_type"
           glib:type-struct="VolumeMonitorClass">
      <function name="get" c:identifier="g_volume_monitor_get">
        <return-value transfer-ownership="full">
          <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
        </return-value>
      </function>
      <function name="adopt_orphan_mount"
                c:identifier="g_volume_monitor_adopt_orphan_mount">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount" transfer-ownership="none">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_connected_drives"
                      invoker="get_connected_drives">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volumes" invoker="get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mounts" invoker="get_mounts">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volume_for_uuid" invoker="get_volume_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mount_for_uuid" invoker="get_mount_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_connected_drives"
              c:identifier="g_volume_monitor_get_connected_drives">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Drive"/>
          </type>
        </return-value>
      </method>
      <method name="get_volumes" c:identifier="g_volume_monitor_get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </method>
      <method name="get_mounts" c:identifier="g_volume_monitor_get_mounts">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Mount"/>
          </type>
        </return-value>
      </method>
      <method name="get_volume_for_uuid"
              c:identifier="g_volume_monitor_get_volume_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mount_for_uuid"
              c:identifier="g_volume_monitor_get_mount_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="any" c:type="gpointer"/>
      </field>
      <glib:signal name="drive-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-connected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-disconnected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-eject-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-stop-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-pre-unmount">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="VolumeMonitorClass"
            c:type="GVolumeMonitorClass"
            glib:is-gtype-struct-for="VolumeMonitor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="volume_added">
        <callback name="volume_added" c:type="volume_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="volume_removed">
        <callback name="volume_removed" c:type="volume_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="volume_changed">
        <callback name="volume_changed" c:type="volume_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_added">
        <callback name="mount_added" c:type="mount_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_removed">
        <callback name="mount_removed" c:type="mount_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_pre_unmount">
        <callback name="mount_pre_unmount" c:type="mount_pre_unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_changed">
        <callback name="mount_changed" c:type="mount_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_connected">
        <callback name="drive_connected" c:type="drive_connected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_disconnected">
        <callback name="drive_disconnected" c:type="drive_disconnected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_changed">
        <callback name="drive_changed" c:type="drive_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_supported">
        <callback name="is_supported" c:type="is_supported">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
        </callback>
      </field>
      <field name="get_connected_drives">
        <callback name="get_connected_drives" c:type="get_connected_drives">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volumes">
        <callback name="get_volumes" c:type="get_volumes">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mounts">
        <callback name="get_mounts" c:type="get_mounts">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volume_for_uuid">
        <callback name="get_volume_for_uuid" c:type="get_volume_for_uuid">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="uuid" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mount_for_uuid">
        <callback name="get_mount_for_uuid" c:type="get_mount_for_uuid">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="uuid" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="adopt_orphan_mount">
        <callback name="adopt_orphan_mount" c:type="adopt_orphan_mount">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_eject_button">
        <callback name="drive_eject_button" c:type="drive_eject_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_stop_button">
        <callback name="drive_stop_button" c:type="drive_stop_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="ZlibCompressor"
           c:type="GZlibCompressor"
           parent="GObject.Object"
           glib:type-name="GZlibCompressor"
           glib:get-type="g_zlib_compressor_get_type"
           glib:type-struct="ZlibCompressorClass">
      <implements name="Converter"/>
      <constructor name="new" c:identifier="g_zlib_compressor_new">
        <return-value transfer-ownership="full">
          <type name="ZlibCompressor" c:type="GZlibCompressor*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="format" writable="1" construct-only="1">
        <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
      </property>
      <property name="level" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
    </class>
    <record name="ZlibCompressorClass"
            c:type="GZlibCompressorClass"
            glib:is-gtype-struct-for="ZlibCompressor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ZlibCompressorFormat"
                 doc="Used to select the type of data format to use for #GZlibDecompressor
and #GZlibCompressor."
                 version="2.24"
                 glib:type-name="GZlibCompressorFormat"
                 glib:get-type="g_zlib_compressor_format_get_type"
                 c:type="GZlibCompressorFormat">
      <member name="zlib"
              value="0"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_ZLIB"
              glib:nick="zlib"/>
      <member name="gzip"
              value="1"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_GZIP"
              glib:nick="gzip"/>
      <member name="raw"
              value="2"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_RAW"
              glib:nick="raw"/>
    </enumeration>
    <class name="ZlibDecompressor"
           c:type="GZlibDecompressor"
           parent="GObject.Object"
           glib:type-name="GZlibDecompressor"
           glib:get-type="g_zlib_decompressor_get_type"
           glib:type-struct="ZlibDecompressorClass">
      <implements name="Converter"/>
      <constructor name="new" c:identifier="g_zlib_decompressor_new">
        <return-value transfer-ownership="full">
          <type name="ZlibDecompressor" c:type="GZlibDecompressor*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="format" writable="1" construct-only="1">
        <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
      </property>
    </class>
    <record name="ZlibDecompressorClass"
            c:type="GZlibDecompressorClass"
            glib:is-gtype-struct-for="ZlibDecompressor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function name="app_info_create_from_commandline"
              c:identifier="g_app_info_create_from_commandline"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="commandline" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="application_name"
                   transfer-ownership="none"
                   allow-none="1">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AppInfoCreateFlags" c:type="GAppInfoCreateFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_all" c:identifier="g_app_info_get_all">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="AppInfo"/>
        </type>
      </return-value>
    </function>
    <function name="app_info_get_all_for_type"
              c:identifier="g_app_info_get_all_for_type">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="AppInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_type"
              c:identifier="g_app_info_get_default_for_type">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="must_support_uris" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_uri_scheme"
              c:identifier="g_app_info_get_default_for_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_launch_default_for_uri"
              c:identifier="g_app_info_launch_default_for_uri"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_reset_type_associations"
              c:identifier="g_app_info_reset_type_associations">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="async_initable_new_async"
              c:identifier="g_async_initable_new_async">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="4">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="async_initable_newv_async"
              c:identifier="g_async_initable_newv_async">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="6">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_can_be_executable"
              c:identifier="g_content_type_can_be_executable">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_equals" c:identifier="g_content_type_equals">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type1" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="type2" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_from_mime_type"
              c:identifier="g_content_type_from_mime_type">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mime_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_description"
              c:identifier="g_content_type_get_description">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_icon"
              c:identifier="g_content_type_get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_mime_type"
              c:identifier="g_content_type_get_mime_type">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_guess" c:identifier="g_content_type_guess">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="data_size" transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </parameter>
        <parameter name="result_uncertain"
                   direction="out"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_guess_for_tree"
              c:identifier="g_content_type_guess_for_tree">
      <return-value transfer-ownership="full">
        <array c:type="char**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="root" transfer-ownership="none">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_a" c:identifier="g_content_type_is_a">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="supertype" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_unknown"
              c:identifier="g_content_type_is_unknown">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_types_get_registered"
              c:identifier="g_content_types_get_registered">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
    </function>
    <function name="file_hash" c:identifier="g_file_hash">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_commandline_arg"
              c:identifier="g_file_new_for_commandline_arg">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_path" c:identifier="g_file_new_for_path">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_uri" c:identifier="g_file_new_for_uri">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_parse_name" c:identifier="g_file_parse_name">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_hash" c:identifier="g_icon_hash">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_new_for_string"
              c:identifier="g_icon_new_for_string"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="initable_new" c:identifier="g_initable_new">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="initable_newv" c:identifier="g_initable_newv" throws="1">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_error_from_errno" c:identifier="g_io_error_from_errno">
      <return-value transfer-ownership="full">
        <type name="IOErrorEnum" c:type="GIOErrorEnum"/>
      </return-value>
      <parameters>
        <parameter name="err_no" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_get_type"
              c:identifier="g_io_extension_get_type">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="extension" transfer-ownership="none">
          <type name="IOExtension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_implement"
              c:identifier="g_io_extension_point_implement">
      <return-value transfer-ownership="full">
        <type name="IOExtension" c:type="GIOExtension*"/>
      </return-value>
      <parameters>
        <parameter name="extension_point_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="extension_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="priority" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_lookup"
              c:identifier="g_io_extension_point_lookup">
      <return-value transfer-ownership="full">
        <type name="IOExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_register"
              c:identifier="g_io_extension_point_register">
      <return-value transfer-ownership="full">
        <type name="IOExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_modules_load_all_in_directory"
              c:identifier="g_io_modules_load_all_in_directory">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="dirname" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_modules_scan_all_in_directory"
              c:identifier="g_io_modules_scan_all_in_directory">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dirname" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_scheduler_cancel_all_jobs"
              c:identifier="g_io_scheduler_cancel_all_jobs">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="io_scheduler_push_job"
              c:identifier="g_io_scheduler_push_job">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job_func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="1"
                   destroy="2">
          <type name="IOSchedulerJobFunc" c:type="GIOSchedulerJobFunc"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="simple_async_report_error_in_idle"
              c:identifier="g_simple_async_report_error_in_idle">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="2">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="simple_async_report_gerror_in_idle"
              c:identifier="g_simple_async_report_gerror_in_idle">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="2">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srv_target_list_sort"
              c:identifier="g_srv_target_list_sort">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="targets" transfer-ownership="none">
          <type name="GLib.List" c:type="GList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_is_mount_path_system_internal"
              c:identifier="g_unix_is_mount_path_system_internal">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_at" c:identifier="g_unix_mount_at">
      <return-value transfer-ownership="full">
        <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
      </return-value>
      <parameters>
        <parameter name="mount_path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="time_read" direction="out" transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_compare" c:identifier="g_unix_mount_compare">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="mount1" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
        <parameter name="mount2" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_free" c:identifier="g_unix_mount_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_device_path"
              c:identifier="g_unix_mount_get_device_path">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_fs_type"
              c:identifier="g_unix_mount_get_fs_type">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_mount_path"
              c:identifier="g_unix_mount_get_mount_path">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_can_eject"
              c:identifier="g_unix_mount_guess_can_eject">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_icon"
              c:identifier="g_unix_mount_guess_icon">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_name"
              c:identifier="g_unix_mount_guess_name">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_should_display"
              c:identifier="g_unix_mount_guess_should_display">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_is_readonly"
              c:identifier="g_unix_mount_is_readonly">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_is_system_internal"
              c:identifier="g_unix_mount_is_system_internal">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_points_changed_since"
              c:identifier="g_unix_mount_points_changed_since">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="time" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_points_get"
              c:identifier="g_unix_mount_points_get">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="time_read" direction="out" transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mounts_changed_since"
              c:identifier="g_unix_mounts_changed_since">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="time" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mounts_get" c:identifier="g_unix_mounts_get">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="time_read" direction="out" transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
