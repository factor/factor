<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <namespace name="Atk"
             version="1.0"
             shared-library="libatk-1.0.so.0"
             c:prefix="Atk">
    <alias name="AttributeSet" target="GLib.SList" c:type="AtkAttributeSet"/>
    <alias name="State" target="uint64" c:type="AtkState"/>
    <interface name="Action"
               c:type="AtkAction"
               glib:type-name="AtkAction"
               glib:get-type="atk_action_get_type"
               glib:type-struct="ActionIface">
      <virtual-method name="do_action" invoker="do_action">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_n_actions" invoker="get_n_actions">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_keybinding" invoker="get_keybinding">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_description" invoker="set_description">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="desc" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_localized_name" invoker="get_localized_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="do_action"
              c:identifier="atk_action_do_action"
              doc="Perform the specified action on the object.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_actions"
              c:identifier="atk_action_get_n_actions"
              doc="Gets the number of accessible actions available on the object.
If there are more than one, the first one is considered the
&quot;default&quot; action of the object.
implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="atk_action_get_description"
              doc="Returns a description of the specified action of the object.
Returns a description string, or %NULL
if @action does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="atk_action_get_name"
              doc="Returns a non-localized string naming the specified action of the
object. This name is generally not descriptive of the end result
of the action, but instead names the &apos;interaction type&apos; which the
object supports. By convention, the above strings should be used to
represent the actions which correspond to the common point-and-click
&quot;click&quot;, &quot;press&quot;, &quot;release&quot;, &quot;drag&quot;, &quot;drop&quot;, &quot;popup&quot;, etc.
The &quot;popup&quot; action should be used to pop up a context menu for the
object, if one exists.
For technical reasons, some toolkits cannot guarantee that the
reported action is actually &apos;bound&apos; to a nontrivial user event;
i.e. the result of some actions via atk_action_do_action() may be
NIL.
Returns a name string, or %NULL
if @action does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_keybinding"
              c:identifier="atk_action_get_keybinding"
              doc="Returns a keybinding associated with this action, if one exists.
The returned string is in the format &quot;&lt;a&gt;;&lt;b&gt;;&lt;c&gt;&quot;
(i.e. semicolon-delimited), where &lt;a&gt; is the keybinding which
activates the object if it is presently enabled onscreen,
&lt;b&gt; corresponds to the keybinding or sequence of keys
which invokes the action even if the relevant element is not
currently posted on screen (for instance, for a menu item it
posts the parent menus before invoking).  The last token in the
above string, if non-empty, represents a keyboard shortcut which
invokes the same action without posting the component or its
enclosing menus or dialogs.
Returns a string representing the available keybindings, or %NULL
if there is no keybinding for this action.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="atk_action_set_description"
              doc="Sets a description of the specified action of the object.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="desc" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_localized_name"
              c:identifier="atk_action_get_localized_name"
              doc="Returns the localized name of the specified action of the object.
Returns a name string, or %NULL
if @action does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ActionIface"
            c:type="AtkActionIface"
            glib:is-gtype-struct-for="Action">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="do_action">
        <callback name="do_action" c:type="do_action">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_actions">
        <callback name="get_n_actions" c:type="get_n_actions">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description" c:type="get_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_keybinding">
        <callback name="get_keybinding" c:type="get_keybinding">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_description">
        <callback name="set_description" c:type="set_description">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="desc" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_localized_name">
        <callback name="get_localized_name" c:type="get_localized_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="AtkAction*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <record name="Attribute"
            c:type="AtkAttribute"
            doc="Call atk_text_attr_get_value() for those which are strings.
For values which are numbers, the string representation of the number
is in value.
A string name/value pair representing a text attribute.">
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="value" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <interface name="Component"
               c:type="AtkComponent"
               glib:type-name="AtkComponent"
               glib:get-type="atk_component_get_type"
               glib:type-struct="ComponentIface">
      <virtual-method name="add_focus_handler" invoker="add_focus_handler">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none">
            <type name="FocusHandler" c:type="AtkFocusHandler"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="contains" invoker="contains">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ref_accessible_at_point"
                      invoker="ref_accessible_at_point">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_extents" invoker="get_extents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_position" invoker="get_position">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_size" invoker="get_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="grab_focus" invoker="grab_focus">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="remove_focus_handler"
                      invoker="remove_focus_handler">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_extents" invoker="set_extents">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_position" invoker="set_position">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_size" invoker="set_size">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="width" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_layer" invoker="get_layer">
        <return-value transfer-ownership="full">
          <type name="Layer" c:type="AtkLayer"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mdi_zorder" invoker="get_mdi_zorder">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_alpha" invoker="get_alpha">
        <return-value transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </return-value>
      </virtual-method>
      <method name="add_focus_handler"
              c:identifier="atk_component_add_focus_handler"
              doc="Add the specified handler to the set of functions to be called
when this object receives focus events (in or out). If the handler is
already added it is not added again
or zero if the handler was already added.">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none" scope="call">
            <type name="FocusHandler" c:type="AtkFocusHandler"/>
          </parameter>
        </parameters>
      </method>
      <method name="contains"
              c:identifier="atk_component_contains"
              doc="or to the components top level window
Checks whether the specified point is within the extent of the @component.
the extent of the @component or not">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref_accessible_at_point"
              c:identifier="atk_component_ref_accessible_at_point"
              doc="or to the components top level window
Gets a reference to the accessible child, if one exists, at the
coordinate point specified by @x and @y.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_extents"
              c:identifier="atk_component_get_extents"
              doc="or to the components top level window
Gets the rectangle which gives the extent of the @component.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="atk_component_get_position"
              doc="or to the components top level window
Gets the position of @component in the form of
a point specifying @component&apos;s top-left corner.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="atk_component_get_size"
              doc="Gets the size of the @component in terms of width and height.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_layer"
              c:identifier="atk_component_get_layer"
              doc="Gets the layer of the component.">
        <return-value transfer-ownership="full">
          <type name="Layer" c:type="AtkLayer"/>
        </return-value>
      </method>
      <method name="get_mdi_zorder"
              c:identifier="atk_component_get_mdi_zorder"
              doc="Gets the zorder of the component. The value G_MININT will be returned
if the layer of the component is not ATK_LAYER_MDI or ATK_LAYER_WINDOW.
which the component is shown in relation to other components in the same
container.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="grab_focus"
              c:identifier="atk_component_grab_focus"
              doc="Grabs focus for this @component.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="remove_focus_handler"
              c:identifier="atk_component_remove_focus_handler"
              doc="from @component
Remove the handler specified by @handler_id from the list of
functions to be executed when this object receives focus events
(in or out).">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_extents"
              c:identifier="atk_component_set_extents"
              doc="or to the components top level window
Sets the extents of @component.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="atk_component_set_position"
              doc="or to the components top level window
Sets the postition of @component.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="atk_component_set_size"
              doc="Set the size of the @component in terms of width and height.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="width" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_alpha"
              c:identifier="atk_component_get_alpha"
              doc="Returns the alpha value (i.e. the opacity) for this
(fully opaque)."
              version="1.12">
        <return-value transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </return-value>
      </method>
      <glib:signal name="bounds-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Rectangle" c:type="AtkRectangle"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ComponentIface"
            c:type="AtkComponentIface"
            glib:is-gtype-struct-for="Component">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="add_focus_handler">
        <callback name="add_focus_handler" c:type="add_focus_handler">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="handler" transfer-ownership="none">
              <type name="FocusHandler" c:type="AtkFocusHandler"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contains">
        <callback name="contains" c:type="contains">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_accessible_at_point">
        <callback name="ref_accessible_at_point"
                  c:type="ref_accessible_at_point">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_extents">
        <callback name="get_extents" c:type="get_extents">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="y" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="width" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="height" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_position">
        <callback name="get_position" c:type="get_position">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="y" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_size">
        <callback name="get_size" c:type="get_size">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="width" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="height" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="grab_focus">
        <callback name="grab_focus" c:type="grab_focus">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_focus_handler">
        <callback name="remove_focus_handler" c:type="remove_focus_handler">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="handler_id" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_extents">
        <callback name="set_extents" c:type="set_extents">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_position">
        <callback name="set_position" c:type="set_position">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_size">
        <callback name="set_size" c:type="set_size">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_layer">
        <callback name="get_layer" c:type="get_layer">
          <return-value transfer-ownership="full">
            <type name="Layer" c:type="AtkLayer"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mdi_zorder">
        <callback name="get_mdi_zorder" c:type="get_mdi_zorder">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="bounds_changed">
        <callback name="bounds_changed" c:type="bounds_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
            <parameter name="bounds" transfer-ownership="none">
              <type name="Rectangle" c:type="AtkRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_alpha">
        <callback name="get_alpha" c:type="get_alpha">
          <return-value transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="component" transfer-ownership="none">
              <type name="Component" c:type="AtkComponent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="CoordType"
                 glib:type-name="AtkCoordType"
                 glib:get-type="atk_coord_type_get_type"
                 c:type="AtkCoordType">
      <member name="screen"
              value="0"
              c:identifier="ATK_XY_SCREEN"
              glib:nick="screen"/>
      <member name="window"
              value="1"
              c:identifier="ATK_XY_WINDOW"
              glib:nick="window"/>
    </enumeration>
    <interface name="Document"
               c:type="AtkDocument"
               glib:type-name="AtkDocument"
               glib:get-type="atk_document_get_type"
               glib:type-struct="DocumentIface">
      <virtual-method name="get_document_type" invoker="get_document_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_document" invoker="get_document">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_document_locale">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_document_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_document_attribute_value">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_document_attribute">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_document_type"
              c:identifier="atk_document_get_document_type"
              doc="Gets a string indicating the document type.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_document"
              c:identifier="atk_document_get_document"
              doc="Gets a %gpointer that points to an instance of the DOM.  It is
up to the caller to check atk_document_get_type to determine
how to cast this pointer.">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_locale"
              c:identifier="atk_document_get_locale"
              doc="Gets a UTF-8 string indicating the POSIX-style LC_MESSAGES locale
of the content of this document instance.  Individual
text substrings or images within this document may have
a different locale, see atk_text_get_attributes and
atk_image_get_image_locale.
locale of the document content as a whole, or NULL if
the document content does not specify a locale.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_attributes"
              c:identifier="atk_document_get_attributes"
              doc="Gets an AtkAttributeSet which describes document-wide
attributes as name-value pairs.
set name-value-pair attributes associated with this document
as a whole."
              version="1.12">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </method>
      <method name="get_attribute_value"
              c:identifier="atk_document_get_attribute_value"
              doc="whose value is being queried.
document, or NULL if a value for #attribute_name has not been specified
for this document."
              version="1.12">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_value"
              c:identifier="atk_document_set_attribute_value"
              doc="whose value is being set.
for this document, FALSE otherwise (e.g. if the document does not
allow the attribute to be modified)."
              version="1.12">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="load-complete">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="load-stopped">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="reload">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DocumentIface"
            c:type="AtkDocumentIface"
            glib:is-gtype-struct-for="Document">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_document_type">
        <callback name="get_document_type" c:type="get_document_type">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_document">
        <callback name="get_document" c:type="get_document">
          <return-value transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_document_locale">
        <callback name="get_document_locale" c:type="get_document_locale">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_document_attributes">
        <callback name="get_document_attributes"
                  c:type="get_document_attributes">
          <return-value transfer-ownership="full">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_document_attribute_value">
        <callback name="get_document_attribute_value"
                  c:type="get_document_attribute_value">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
            <parameter name="attribute_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_document_attribute">
        <callback name="set_document_attribute"
                  c:type="set_document_attribute">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="document" transfer-ownership="none">
              <type name="Document" c:type="AtkDocument*"/>
            </parameter>
            <parameter name="attribute_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="attribute_value" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad3">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad4">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <interface name="EditableText"
               c:type="AtkEditableText"
               glib:type-name="AtkEditableText"
               glib:get-type="atk_editable_text_get_type"
               glib:type-struct="EditableTextIface">
      <virtual-method name="set_run_attributes" invoker="set_run_attributes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attrib_set" transfer-ownership="none">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </parameter>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_text_contents" invoker="set_text_contents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="insert_text" invoker="insert_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="position" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_text" invoker="copy_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="cut_text" invoker="cut_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_text" invoker="delete_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paste_text" invoker="paste_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_run_attributes"
              c:identifier="atk_editable_text_set_run_attributes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attrib_set" transfer-ownership="none">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </parameter>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_contents"
              c:identifier="atk_editable_text_set_text_contents"
              doc="Set text contents of @text.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_text"
              c:identifier="atk_editable_text_insert_text"
              doc="the position at which to insert the text. After the call it
points at the position after the newly inserted text.
Insert text at a given position.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="position" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_text"
              c:identifier="atk_editable_text_copy_text"
              doc="Copy text from @start_pos up to, but not including @end_pos
to the clipboard.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cut_text"
              c:identifier="atk_editable_text_cut_text"
              doc="Copy text from @start_pos up to, but not including @end_pos
to the clipboard and then delete from the widget.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_text"
              c:identifier="atk_editable_text_delete_text"
              doc="Delete text @start_pos up to, but not including @end_pos.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="paste_text"
              c:identifier="atk_editable_text_paste_text"
              doc="Paste text from clipboard to specified @position.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="EditableTextIface"
            c:type="AtkEditableTextIface"
            glib:is-gtype-struct-for="EditableText">
      <field name="parent_interface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="set_run_attributes">
        <callback name="set_run_attributes" c:type="set_run_attributes">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="attrib_set" transfer-ownership="none">
              <type name="AttributeSet" c:type="AtkAttributeSet*"/>
            </parameter>
            <parameter name="start_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_text_contents">
        <callback name="set_text_contents" c:type="set_text_contents">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="string" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="insert_text">
        <callback name="insert_text" c:type="insert_text">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="string" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="position"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_text">
        <callback name="copy_text" c:type="copy_text">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="start_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cut_text">
        <callback name="cut_text" c:type="cut_text">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="start_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_text">
        <callback name="delete_text" c:type="delete_text">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="start_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paste_text">
        <callback name="paste_text" c:type="paste_text">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="EditableText" c:type="AtkEditableText*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <callback name="EventListener"
              c:type="AtkEventListener"
              doc="the specified event (e.g. &apos;focus:&apos;) takes place.
A function which is called when an object emits a matching event,
as used in #atk_add_focus_tracker.
Currently the only events for which object-specific handlers are
supported are events of type &quot;focus:&quot;.  Most clients of ATK will prefer to
attach signal handlers for the various ATK signals instead.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="Object" c:type="AtkObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="EventListenerInit"
              c:type="AtkEventListenerInit"
              doc="An #AtkEventListenerInit function is a special function that is
called in order to initialize the per-object event registration system
used by #AtkEventListener, if any preparation is required.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <callback name="FocusHandler" c:type="AtkFocusHandler">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="Object" c:type="AtkObject*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="Function" c:type="AtkFunction">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="GObjectAccessible"
           c:type="AtkGObjectAccessible"
           parent="Object"
           glib:type-name="AtkGObjectAccessible"
           glib:get-type="atk_gobject_accessible_get_type"
           glib:type-struct="GObjectAccessibleClass">
      <function name="for_object"
                c:identifier="atk_gobject_accessible_for_object"
                doc="Gets the accessible object for the specified @obj.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_object"
              c:identifier="atk_gobject_accessible_get_object"
              doc="Gets the GObject for which @obj is the accessible object.">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="Object" c:type="AtkObject"/>
      </field>
    </class>
    <record name="GObjectAccessibleClass"
            c:type="AtkGObjectAccessibleClass"
            glib:is-gtype-struct-for="GObjectAccessible">
      <field name="parent_class">
        <type name="ObjectClass" c:type="AtkObjectClass"/>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <class name="Hyperlink"
           c:type="AtkHyperlink"
           parent="GObject.Object"
           glib:type-name="AtkHyperlink"
           glib:get-type="atk_hyperlink_get_type"
           glib:type-struct="HyperlinkClass">
      <implements name="Action"/>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_object" invoker="get_object">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_end_index" invoker="get_end_index">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_start_index" invoker="get_start_index">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_valid" invoker="is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_n_anchors" invoker="get_n_anchors">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="link_state">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_selected_link">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <method name="get_uri"
              c:identifier="atk_hyperlink_get_uri"
              doc="Get a the URI associated with the anchor specified
by @i of @link_.
Multiple anchors are primarily used by client-side image maps.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i"
                     transfer-ownership="none"
                     doc="integer specifying the desired anchor">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_object"
              c:identifier="atk_hyperlink_get_object"
              doc="Returns the item associated with this hyperlinks nth anchor.
For instance, the returned #AtkObject will implement #AtkText
if @link_ is a text hyperlink, #AtkImage if @link_ is an image
hyperlink etc.
Multiple anchors are primarily used by client-side image maps.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i"
                     transfer-ownership="none"
                     doc="integer specifying the desired anchor">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_end_index"
              c:identifier="atk_hyperlink_get_end_index"
              doc="Gets the index with the hypertext document at which this link ends.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_start_index"
              c:identifier="atk_hyperlink_get_start_index"
              doc="Gets the index with the hypertext document at which this link begins.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="is_valid"
              c:identifier="atk_hyperlink_is_valid"
              doc="Since the document that a link is associated with may have changed
this method returns %TRUE if the link is still valid (with
respect to the document it references) and %FALSE otherwise.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_inline"
              c:identifier="atk_hyperlink_is_inline"
              doc="Indicates whether the link currently displays some or all of its
content inline.  Ordinary HTML links will usually return
%FALSE, but an inline &amp;lt;src&amp;gt; HTML element will return
%TRUE.
*">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_n_anchors"
              c:identifier="atk_hyperlink_get_n_anchors"
              doc="Gets the number of anchors associated with this hyperlink.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="end-index">
        <type name="int" c:type="gint"/>
      </property>
      <property name="number-of-anchors">
        <type name="int" c:type="gint"/>
      </property>
      <property name="selected-link">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="start-index">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="link-activated">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="HyperlinkClass"
            c:type="AtkHyperlinkClass"
            glib:is-gtype-struct-for="Hyperlink">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_uri">
        <callback name="get_uri" c:type="get_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_object">
        <callback name="get_object" c:type="get_object">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_end_index">
        <callback name="get_end_index" c:type="get_end_index">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_start_index">
        <callback name="get_start_index" c:type="get_start_index">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_valid">
        <callback name="is_valid" c:type="is_valid">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_anchors">
        <callback name="get_n_anchors" c:type="get_n_anchors">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="link_state">
        <callback name="link_state" c:type="link_state">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_selected_link">
        <callback name="is_selected_link" c:type="is_selected_link">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="link_activated">
        <callback name="link_activated" c:type="link_activated">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="link_" transfer-ownership="none">
              <type name="Hyperlink" c:type="AtkHyperlink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <interface name="HyperlinkImpl"
               c:type="AtkHyperlinkImpl"
               glib:type-name="AtkHyperlinkImpl"
               glib:get-type="atk_hyperlink_impl_get_type"
               glib:type-struct="HyperlinkImplIface">
      <virtual-method name="get_hyperlink" invoker="get_hyperlink">
        <return-value transfer-ownership="full">
          <type name="Hyperlink" c:type="AtkHyperlink*"/>
        </return-value>
      </virtual-method>
      <method name="get_hyperlink"
              c:identifier="atk_hyperlink_impl_get_hyperlink"
              doc="Gets the hyperlink associated with this object.
Returns an AtkHyperlink object which points to this implementing AtkObject."
              version="1.12">
        <return-value transfer-ownership="full">
          <type name="Hyperlink" c:type="AtkHyperlink*"/>
        </return-value>
      </method>
    </interface>
    <record name="HyperlinkImplIface"
            c:type="AtkHyperlinkImplIface"
            glib:is-gtype-struct-for="HyperlinkImpl">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_hyperlink">
        <callback name="get_hyperlink" c:type="get_hyperlink">
          <return-value transfer-ownership="full">
            <type name="Hyperlink" c:type="AtkHyperlink*"/>
          </return-value>
          <parameters>
            <parameter name="impl" transfer-ownership="none">
              <type name="HyperlinkImpl" c:type="AtkHyperlinkImpl*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <bitfield name="HyperlinkStateFlags"
              glib:type-name="AtkHyperlinkStateFlags"
              glib:get-type="atk_hyperlink_state_flags_get_type"
              c:type="AtkHyperlinkStateFlags">
      <member name="inline"
              value="1"
              c:identifier="ATK_HYPERLINK_IS_INLINE"
              glib:nick="inline"/>
    </bitfield>
    <interface name="Hypertext"
               c:type="AtkHypertext"
               glib:type-name="AtkHypertext"
               glib:get-type="atk_hypertext_get_type"
               glib:type-struct="HypertextIface">
      <virtual-method name="get_link" invoker="get_link">
        <return-value transfer-ownership="full">
          <type name="Hyperlink" c:type="AtkHyperlink*"/>
        </return-value>
        <parameters>
          <parameter name="link_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_n_links" invoker="get_n_links">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_link_index" invoker="get_link_index">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="char_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_link"
              c:identifier="atk_hypertext_get_link"
              doc="Gets the link in this hypertext document at index
index @link_index">
        <return-value transfer-ownership="full">
          <type name="Hyperlink" c:type="AtkHyperlink*"/>
        </return-value>
        <parameters>
          <parameter name="link_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_links"
              c:identifier="atk_hypertext_get_n_links"
              doc="Gets the number of links within this hypertext document.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_link_index"
              c:identifier="atk_hypertext_get_link_index"
              doc="Gets the index into the array of hyperlinks that is associated with
the character specified by @char_index.
or -1 if there is no hyperlink associated with this character.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="char_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="link-selected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="HypertextIface"
            c:type="AtkHypertextIface"
            glib:is-gtype-struct-for="Hypertext">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_link">
        <callback name="get_link" c:type="get_link">
          <return-value transfer-ownership="full">
            <type name="Hyperlink" c:type="AtkHyperlink*"/>
          </return-value>
          <parameters>
            <parameter name="hypertext" transfer-ownership="none">
              <type name="Hypertext" c:type="AtkHypertext*"/>
            </parameter>
            <parameter name="link_index" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_links">
        <callback name="get_n_links" c:type="get_n_links">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="hypertext" transfer-ownership="none">
              <type name="Hypertext" c:type="AtkHypertext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_link_index">
        <callback name="get_link_index" c:type="get_link_index">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="hypertext" transfer-ownership="none">
              <type name="Hypertext" c:type="AtkHypertext*"/>
            </parameter>
            <parameter name="char_index" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="link_selected">
        <callback name="link_selected" c:type="link_selected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="hypertext" transfer-ownership="none">
              <type name="Hypertext" c:type="AtkHypertext*"/>
            </parameter>
            <parameter name="link_index" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad3">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <interface name="Image"
               c:type="AtkImage"
               glib:type-name="AtkImage"
               glib:get-type="atk_image_get_type"
               glib:type-struct="ImageIface">
      <virtual-method name="get_image_position" invoker="get_image_position">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_image_description"
                      invoker="get_image_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_image_size" invoker="get_image_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_image_description"
                      invoker="set_image_description">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_image_locale" invoker="get_image_locale">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <method name="get_image_description"
              c:identifier="atk_image_get_image_description"
              doc="Get a textual description of this image.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_image_size"
              c:identifier="atk_image_get_image_size"
              doc="Get the width and height in pixels for the specified image.
The values of @width and @height are returned as -1 if the
values cannot be obtained (for instance, if the object is not onscreen).">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_description"
              c:identifier="atk_image_set_image_description"
              doc="Sets the textual description for this image.
not be completed.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_position"
              c:identifier="atk_image_get_image_position"
              doc="or to the components top level window
Gets the position of the image in the form of a point specifying the
images top-left corner.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_locale"
              c:identifier="atk_image_get_image_locale"
              doc="Since ATK 1.12
Returns a string corresponding to the POSIX LC_MESSAGES locale used by the image description, or NULL if the image does not specify a locale.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </interface>
    <record name="ImageIface"
            c:type="AtkImageIface"
            glib:is-gtype-struct-for="Image">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_image_position">
        <callback name="get_image_position" c:type="get_image_position">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="AtkImage*"/>
            </parameter>
            <parameter name="x" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="y" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_image_description">
        <callback name="get_image_description" c:type="get_image_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="AtkImage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_image_size">
        <callback name="get_image_size" c:type="get_image_size">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="AtkImage*"/>
            </parameter>
            <parameter name="width" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="height" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_image_description">
        <callback name="set_image_description" c:type="set_image_description">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="AtkImage*"/>
            </parameter>
            <parameter name="description" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_image_locale">
        <callback name="get_image_locale" c:type="get_image_locale">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="AtkImage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <record name="Implementor" c:type="AtkImplementor">
    </record>
    <interface name="ImplementorIface"
               c:type="AtkImplementorIface"
               glib:type-name="AtkImplementorIface"
               glib:get-type="atk_implementor_get_type">
      <method name="ref_accessible"
              c:identifier="atk_implementor_ref_accessible"
              doc="if a non-null return value is required.
Gets a reference to an object&apos;s #AtkObject implementation, if
the object implements #AtkObjectIface">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </method>
    </interface>
    <record name="KeyEventStruct"
            c:type="AtkKeyEventStruct"
            doc="The meaning of the bits is currently defined to match the bitmask used by GDK in
GdkEventType.state, see
http://developer.gnome.org/doc/API/2.0/gdk/gdk-Event-Structures.html#GdkEventKey
/usr/X11/include/keysymdef.h.
result from this keypress, if the key is a control or graphic character, or a symbolic name for this keypress.
Alphanumeric and printable keys will have the symbolic key name in this string member, for instance &quot;A&quot;. &quot;0&quot;,
&quot;semicolon&quot;, &quot;aacute&quot;.  Keypad keys have the prefix &quot;KP&quot;.
These timestamps are relative to a starting point which should be considered arbitrary,
and only used to compare the dispatch times of events to one another.
Encapsulates information about a key event.">
      <field name="type" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="state" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="keyval" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="length" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="string" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="keycode" writable="1">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="timestamp" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
    </record>
    <enumeration name="KeyEventType"
                 glib:type-name="AtkKeyEventType"
                 glib:get-type="atk_key_event_type_get_type"
                 c:type="AtkKeyEventType">
      <member name="press"
              value="0"
              c:identifier="ATK_KEY_EVENT_PRESS"
              glib:nick="press"/>
      <member name="release"
              value="1"
              c:identifier="ATK_KEY_EVENT_RELEASE"
              glib:nick="release"/>
      <member name="last_defined"
              value="2"
              c:identifier="ATK_KEY_EVENT_LAST_DEFINED"
              glib:nick="last-defined"/>
    </enumeration>
    <callback name="KeySnoopFunc"
              c:type="AtkKeySnoopFunc"
              doc="notification is being given.
An #AtkKeySnoopFunc is a type of callback which is called whenever a key event occurs,
if registered via atk_add_key_event_listener.  It allows for pre-emptive
interception of key events via the return code as described below.
discarded without being passed to the normal GUI recipient; FALSE (zero) if the
event dispatch to the client application should proceed as normal.">
      <return-value transfer-ownership="none"
                    doc="if the event emission should be stopped and the event">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <type name="KeyEventStruct" c:type="AtkKeyEventStruct*"/>
        </parameter>
        <parameter name="func_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="Layer"
                 glib:type-name="AtkLayer"
                 glib:get-type="atk_layer_get_type"
                 c:type="AtkLayer">
      <member name="invalid"
              value="0"
              c:identifier="ATK_LAYER_INVALID"
              glib:nick="invalid"/>
      <member name="background"
              value="1"
              c:identifier="ATK_LAYER_BACKGROUND"
              glib:nick="background"/>
      <member name="canvas"
              value="2"
              c:identifier="ATK_LAYER_CANVAS"
              glib:nick="canvas"/>
      <member name="widget"
              value="3"
              c:identifier="ATK_LAYER_WIDGET"
              glib:nick="widget"/>
      <member name="mdi"
              value="4"
              c:identifier="ATK_LAYER_MDI"
              glib:nick="mdi"/>
      <member name="popup"
              value="5"
              c:identifier="ATK_LAYER_POPUP"
              glib:nick="popup"/>
      <member name="overlay"
              value="6"
              c:identifier="ATK_LAYER_OVERLAY"
              glib:nick="overlay"/>
      <member name="window"
              value="7"
              c:identifier="ATK_LAYER_WINDOW"
              glib:nick="window"/>
    </enumeration>
    <class name="Misc"
           c:type="AtkMisc"
           parent="GObject.Object"
           glib:type-name="AtkMisc"
           glib:get-type="atk_misc_get_type"
           glib:type-struct="MiscClass">
      <function name="get_instance"
                c:identifier="atk_misc_get_instance"
                doc="Obtain the singleton instance of AtkMisc for this application."
                version="1.13">
        <return-value transfer-ownership="none">
          <type name="Misc" c:type="AtkMisc*"/>
        </return-value>
      </function>
      <virtual-method name="threads_enter" invoker="threads_enter">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="threads_leave" invoker="threads_leave">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="threads_enter"
              c:identifier="atk_misc_threads_enter"
              doc="Take the thread mutex for the GUI toolkit,
if one exists.
(This method is implemented by the toolkit ATK implementation layer;
for instance, for GTK+, GAIL implements this via GDK_THREADS_ENTER)."
              version="1.13">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="threads_leave"
              c:identifier="atk_misc_threads_leave"
              doc="Release the thread mutex for the GUI toolkit,
if one exists. This method, and atk_misc_threads_enter,
are needed in some situations by threaded application code which
services ATK requests, since fulfilling ATK requests often
requires calling into the GUI toolkit.  If a long-running or
potentially blocking call takes place inside such a block, it should
be bracketed by atk_misc_threads_leave/atk_misc_threads_enter calls.
(This method is implemented by the toolkit ATK implementation layer;
for instance, for GTK+, GAIL implements this via GDK_THREADS_LEAVE)."
              version="1.13">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MiscClass"
            c:type="AtkMiscClass"
            glib:is-gtype-struct-for="Misc">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="threads_enter">
        <callback name="threads_enter" c:type="threads_enter">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="misc" transfer-ownership="none">
              <type name="Misc" c:type="AtkMisc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="threads_leave">
        <callback name="threads_leave" c:type="threads_leave">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="misc" transfer-ownership="none">
              <type name="Misc" c:type="AtkMisc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="vfuncs">
        <array zero-terminated="0" c:type="gpointer" fixed-size="32">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="NoOpObject"
           c:type="AtkNoOpObject"
           parent="Object"
           glib:type-name="AtkNoOpObject"
           glib:get-type="atk_no_op_object_get_type"
           glib:type-struct="NoOpObjectClass">
      <implements name="Action"/>
      <implements name="Component"/>
      <implements name="Document"/>
      <implements name="EditableText"/>
      <implements name="Hypertext"/>
      <implements name="Image"/>
      <implements name="Selection"/>
      <implements name="Table"/>
      <implements name="Text"/>
      <implements name="Value"/>
      <constructor name="new"
                   c:identifier="atk_no_op_object_new"
                   doc="Provides a default (non-functioning stub) #AtkObject.
Application maintainers should not use this method.">
        <return-value transfer-ownership="full" doc="#AtkObject">
          <type name="NoOpObject" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="AtkObject"/>
      </field>
    </class>
    <record name="NoOpObjectClass"
            c:type="AtkNoOpObjectClass"
            glib:is-gtype-struct-for="NoOpObject">
      <field name="parent_class">
        <type name="ObjectClass" c:type="AtkObjectClass"/>
      </field>
    </record>
    <class name="NoOpObjectFactory"
           c:type="AtkNoOpObjectFactory"
           parent="ObjectFactory"
           glib:type-name="AtkNoOpObjectFactory"
           glib:get-type="atk_no_op_object_factory_get_type"
           glib:type-struct="NoOpObjectFactoryClass">
      <constructor name="new"
                   c:identifier="atk_no_op_object_factory_new"
                   doc="Creates an instance of an #AtkObjectFactory which generates primitive
(non-functioning) #AtkObjects.">
        <return-value transfer-ownership="full">
          <type name="NoOpObjectFactory" c:type="AtkObjectFactory*"/>
        </return-value>
      </constructor>
      <field name="parent">
        <type name="ObjectFactory" c:type="AtkObjectFactory"/>
      </field>
    </class>
    <record name="NoOpObjectFactoryClass"
            c:type="AtkNoOpObjectFactoryClass"
            glib:is-gtype-struct-for="NoOpObjectFactory">
      <field name="parent_class">
        <type name="ObjectFactoryClass" c:type="AtkObjectFactoryClass"/>
      </field>
    </record>
    <class name="Object"
           c:type="AtkObject"
           parent="GObject.Object"
           glib:type-name="AtkObject"
           glib:get-type="atk_object_get_type"
           glib:type-struct="ObjectClass">
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_parent" invoker="get_parent">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_n_children">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="ref_child">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_index_in_parent" invoker="get_index_in_parent">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="ref_relation_set" invoker="ref_relation_set">
        <return-value transfer-ownership="full">
          <type name="RelationSet" c:type="AtkRelationSet*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_role" invoker="get_role">
        <return-value transfer-ownership="full">
          <type name="Role" c:type="AtkRole"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_layer">
        <return-value transfer-ownership="full">
          <type name="Layer" c:type="AtkLayer"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mdi_zorder">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="ref_state_set" invoker="ref_state_set">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_name" invoker="set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_description" invoker="set_description">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_parent" invoker="set_parent">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_role" invoker="set_role">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="role" transfer-ownership="none">
            <type name="Role" c:type="AtkRole"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="connect_property_change_handler"
                      invoker="connect_property_change_handler">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none">
            <type name="PropertyChangeHandler"
                  c:type="AtkPropertyChangeHandler*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_property_change_handler"
                      invoker="remove_property_change_handler">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="initialize" invoker="initialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_attributes" invoker="get_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </virtual-method>
      <method name="get_name"
              c:identifier="atk_object_get_name"
              doc="Gets the accessible name of the accessible.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="atk_object_get_description"
              doc="Gets the accessible description of the accessible.
of the accessible.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_parent"
              c:identifier="atk_object_get_parent"
              doc="Gets the accessible parent of the accessible.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </method>
      <method name="get_n_accessible_children"
              c:identifier="atk_object_get_n_accessible_children"
              doc="Gets the number of accessible children of the accessible.
of the accessible.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="ref_accessible_child"
              c:identifier="atk_object_ref_accessible_child"
              doc="Gets a reference to the specified accessible child of the object.
The accessible children are 0-based so the first accessible child is
at index 0, the second at index 1 and so on.
of the accessible.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref_relation_set"
              c:identifier="atk_object_ref_relation_set"
              doc="Gets the #AtkRelationSet associated with the object.">
        <return-value transfer-ownership="full">
          <type name="RelationSet" c:type="AtkRelationSet*"/>
        </return-value>
      </method>
      <method name="get_role"
              c:identifier="atk_object_get_role"
              doc="Gets the role of the accessible.">
        <return-value transfer-ownership="full">
          <type name="Role" c:type="AtkRole"/>
        </return-value>
      </method>
      <method name="get_attributes"
              c:identifier="atk_object_get_attributes"
              doc="Get a list of properties applied to this object as a whole, as an #AtkAttributeSet consisting of
name-value pairs. As such these attributes may be considered weakly-typed properties or annotations,
as distinct from strongly-typed object data available via other get/set methods.
Not all objects have explicit &quot;name-value pair&quot; #AtkAttributeSet properties.
the object, or an empty set if the object has no name-value pair attributes assigned to it."
              version="1.12">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </method>
      <method name="ref_state_set"
              c:identifier="atk_object_ref_state_set"
              doc="Gets a reference to the state set of the accessible; the caller must
unreference it when it is no longer needed.
set of the accessible">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
      </method>
      <method name="get_index_in_parent"
              c:identifier="atk_object_get_index_in_parent"
              doc="Gets the 0-based index of this accessible in its parent; returns -1 if the
accessible does not have an accessible parent.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_name"
              c:identifier="atk_object_set_name"
              doc="Sets the accessible name of the accessible.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="atk_object_set_description"
              doc="Sets the accessible description of the accessible.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent"
              c:identifier="atk_object_set_parent"
              doc="Sets the accessible parent of the accessible.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_role"
              c:identifier="atk_object_set_role"
              doc="Sets the role of the accessible.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="role" transfer-ownership="none">
            <type name="Role" c:type="AtkRole"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_property_change_handler"
              c:identifier="atk_object_connect_property_change_handler"
              doc="Specifies a function to be called when a property changes value.
atk_object_remove_property_change_handler()">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none" scope="call">
            <type name="PropertyChangeHandler"
                  c:type="AtkPropertyChangeHandler*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_property_change_handler"
              c:identifier="atk_object_remove_property_change_handler"
              doc="Removes a property change handler.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_state_change"
              c:identifier="atk_object_notify_state_change"
              doc="Emits a state-change signal for the specified state.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="AtkState"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="initialize"
              c:identifier="atk_object_initialize"
              doc="This function is called when implementing subclasses of #AtkObject.
It does initialization required for the new object. It is intended
that this function should called only in the ..._new() functions used
to create an instance of a subclass of #AtkObject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_relationship"
              c:identifier="atk_object_add_relationship"
              doc="Adds a relationship of the specified type with the specified target.
Returns TRUE if the relationship is added.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_relationship"
              c:identifier="atk_object_remove_relationship"
              doc="Removes a relationship of the specified type with the specified target.
Returns TRUE if the relationship is removed.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <property name="accessible-component-layer">
        <type name="int" c:type="gint"/>
      </property>
      <property name="accessible-component-mdi-zorder">
        <type name="int" c:type="gint"/>
      </property>
      <property name="accessible-description" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="accessible-hypertext-nlinks">
        <type name="int" c:type="gint"/>
      </property>
      <property name="accessible-name" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="accessible-parent" writable="1">
        <type name="Object" c:type="AtkObject"/>
      </property>
      <property name="accessible-role" writable="1">
        <type name="int" c:type="gint"/>
      </property>
      <property name="accessible-table-caption" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="accessible-table-caption-object" writable="1">
        <type name="Object" c:type="AtkObject"/>
      </property>
      <property name="accessible-table-column-description" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="accessible-table-column-header" writable="1">
        <type name="Object" c:type="AtkObject"/>
      </property>
      <property name="accessible-table-row-description" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="accessible-table-row-header" writable="1">
        <type name="Object" c:type="AtkObject"/>
      </property>
      <property name="accessible-table-summary" writable="1">
        <type name="Object" c:type="AtkObject"/>
      </property>
      <property name="accessible-value" writable="1">
        <type name="double" c:type="gdouble"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="description">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="accessible_parent">
        <type name="Object" c:type="AtkObject*"/>
      </field>
      <field name="role">
        <type name="Role" c:type="AtkRole"/>
      </field>
      <field name="relation_set">
        <type name="RelationSet" c:type="AtkRelationSet*"/>
      </field>
      <field name="layer">
        <type name="Layer" c:type="AtkLayer"/>
      </field>
      <glib:signal name="active-descendant-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="children-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="focus-event">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="property-change">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="state-change">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="visible-data-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ObjectClass"
            c:type="AtkObjectClass"
            glib:is-gtype-struct-for="Object">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description" c:type="get_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent">
        <callback name="get_parent" c:type="get_parent">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_children">
        <callback name="get_n_children" c:type="get_n_children">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_child">
        <callback name="ref_child" c:type="ref_child">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_index_in_parent">
        <callback name="get_index_in_parent" c:type="get_index_in_parent">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_relation_set">
        <callback name="ref_relation_set" c:type="ref_relation_set">
          <return-value transfer-ownership="full">
            <type name="RelationSet" c:type="AtkRelationSet*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_role">
        <callback name="get_role" c:type="get_role">
          <return-value transfer-ownership="full">
            <type name="Role" c:type="AtkRole"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_layer">
        <callback name="get_layer" c:type="get_layer">
          <return-value transfer-ownership="full">
            <type name="Layer" c:type="AtkLayer"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mdi_zorder">
        <callback name="get_mdi_zorder" c:type="get_mdi_zorder">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_state_set">
        <callback name="ref_state_set" c:type="ref_state_set">
          <return-value transfer-ownership="full">
            <type name="StateSet" c:type="AtkStateSet*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_name">
        <callback name="set_name" c:type="set_name">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_description">
        <callback name="set_description" c:type="set_description">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="description" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_parent">
        <callback name="set_parent" c:type="set_parent">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="parent" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_role">
        <callback name="set_role" c:type="set_role">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="role" transfer-ownership="none">
              <type name="Role" c:type="AtkRole"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="connect_property_change_handler">
        <callback name="connect_property_change_handler"
                  c:type="connect_property_change_handler">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="handler" transfer-ownership="none">
              <type name="PropertyChangeHandler"
                    c:type="AtkPropertyChangeHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_property_change_handler">
        <callback name="remove_property_change_handler"
                  c:type="remove_property_change_handler">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="handler_id" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="initialize">
        <callback name="initialize" c:type="initialize">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="children_changed">
        <callback name="children_changed" c:type="children_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="change_index" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
            <parameter name="changed_child" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="focus_event">
        <callback name="focus_event" c:type="focus_event">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="focus_in" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="property_change">
        <callback name="property_change" c:type="property_change">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <type name="PropertyValues" c:type="AtkPropertyValues*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="state_change">
        <callback name="state_change" c:type="state_change">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="state_set" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="visible_data_changed">
        <callback name="visible_data_changed" c:type="visible_data_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="active_descendant_changed">
        <callback name="active_descendant_changed"
                  c:type="active_descendant_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="any" c:type="gpointer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_attributes">
        <callback name="get_attributes" c:type="get_attributes">
          <return-value transfer-ownership="full">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </return-value>
          <parameters>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <class name="ObjectFactory"
           c:type="AtkObjectFactory"
           parent="GObject.Object"
           glib:type-name="AtkObjectFactory"
           glib:get-type="atk_object_factory_get_type"
           glib:type-struct="ObjectFactoryClass">
      <virtual-method name="invalidate" invoker="invalidate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="create_accessible"
              c:identifier="atk_object_factory_create_accessible"
              doc="object type
Provides an #AtkObject that implements an accessibility interface
on behalf of @obj
on behalf of @obj">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate"
              c:identifier="atk_object_factory_invalidate"
              doc="Inform @factory that it is no longer being used to create
accessibles. When called, @factory may need to inform
#AtkObjects which it has created that they need to be re-instantiated.
in object registries.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_accessible_type"
              c:identifier="atk_object_factory_get_accessible_type"
              doc="Gets the GType of the accessible which is created by the factory.
The value G_TYPE_INVALID is returned if no type if found.">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ObjectFactoryClass"
            c:type="AtkObjectFactoryClass"
            glib:is-gtype-struct-for="ObjectFactory">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_accessible">
        <callback name="create_accessible" c:type="create_accessible">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="invalidate">
        <callback name="invalidate" c:type="invalidate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="factory" transfer-ownership="none">
              <type name="ObjectFactory" c:type="AtkObjectFactory*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_accessible_type">
        <callback name="get_accessible_type" c:type="get_accessible_type">
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <class name="Plug"
           c:type="AtkPlug"
           parent="Object"
           glib:type-name="AtkPlug"
           glib:get-type="atk_plug_get_type"
           glib:type-struct="PlugClass">
      <constructor name="new" c:identifier="atk_plug_new">
        <return-value transfer-ownership="full">
          <type name="Plug" c:type="AtkObject*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_object_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <method name="get_id" c:identifier="atk_plug_get_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="Object" c:type="AtkObject"/>
      </field>
    </class>
    <record name="PlugClass"
            c:type="AtkPlugClass"
            glib:is-gtype-struct-for="Plug">
      <field name="parent_class">
        <type name="ObjectClass" c:type="AtkObjectClass"/>
      </field>
      <field name="get_object_id">
        <callback name="get_object_id" c:type="get_object_id">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Plug" c:type="AtkPlug*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="PropertyChangeHandler" c:type="AtkPropertyChangeHandler">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="Object" c:type="AtkObject*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="PropertyValues" c:type="AtkPropertyValues*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="PropertyValues" c:type="_AtkPropertyValues">
    </record>
    <record name="Rectangle"
            c:type="AtkRectangle"
            glib:type-name="AtkRectangle"
            glib:get-type="atk_rectangle_get_type">
      <field name="x" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="height" writable="1">
        <type name="int" c:type="gint"/>
      </field>
    </record>
    <class name="Registry"
           c:type="AtkRegistry"
           parent="GObject.Object"
           glib:type-name="AtkRegistry"
           glib:get-type="atk_registry_get_type"
           glib:type-struct="RegistryClass">
      <method name="set_factory_type"
              c:identifier="atk_registry_set_factory_type"
              doc="implement AtkObject appropriate for @type.
Associate an #AtkObjectFactory subclass with a #GType. Note:
The associated @factory_type will thereafter be responsible for
the creation of new #AtkObject implementations for instances
appropriate for @type.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="factory_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_factory_type"
              c:identifier="atk_registry_get_factory_type"
              doc="subclass
Provides a #GType indicating the #AtkObjectFactory subclass
associated with @type.">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_factory"
              c:identifier="atk_registry_get_factory"
              doc="Gets an #AtkObjectFactory appropriate for creating #AtkObjects
appropriate for @type.
appropriate for @type.">
        <return-value transfer-ownership="full">
          <type name="ObjectFactory" c:type="AtkObjectFactory*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="RegistryClass"
            c:type="_AtkRegistryClass"
            glib:is-gtype-struct-for="Registry">
    </record>
    <class name="Relation"
           c:type="AtkRelation"
           parent="GObject.Object"
           glib:type-name="AtkRelation"
           glib:get-type="atk_relation_get_type"
           glib:type-struct="RelationClass">
      <constructor name="new"
                   c:identifier="atk_relation_new"
                   doc="#AtkRelation
Create a new relation for the specified key and the specified list
of targets.  See also atk_object_add_relationship().">
        <return-value transfer-ownership="full">
          <type name="Relation" c:type="AtkRelation*"/>
        </return-value>
        <parameters>
          <parameter name="targets" transfer-ownership="none">
            <type name="Object" c:type="AtkObject**"/>
          </parameter>
          <parameter name="n_targets" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="type_register"
                c:identifier="atk_relation_type_register"
                doc="Associate @name with a new #AtkRelationType">
        <return-value transfer-ownership="full">
          <type name="RelationType" c:type="AtkRelationType"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_get_name"
                c:identifier="atk_relation_type_get_name"
                doc="Gets the description string describing the #AtkRelationType @type.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_for_name"
                c:identifier="atk_relation_type_for_name"
                doc="Get the #AtkRelationType type corresponding to a relation name.
or #ATK_RELATION_NULL if no matching relation type is found.">
        <return-value transfer-ownership="full">
          <type name="RelationType" c:type="AtkRelationType"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     doc="name of an ATK relation type.">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_relation_type"
              c:identifier="atk_relation_get_relation_type"
              doc="Gets the type of @relation">
        <return-value transfer-ownership="full">
          <type name="RelationType" c:type="AtkRelationType"/>
        </return-value>
      </method>
      <method name="get_target"
              c:identifier="atk_relation_get_target"
              doc="Gets the target list of @relation">
        <return-value transfer-ownership="full">
          <type name="GLib.PtrArray" c:type="GPtrArray*"/>
        </return-value>
      </method>
      <method name="add_target"
              c:identifier="atk_relation_add_target"
              doc="Adds the specified AtkObject to the target for the relation, if it is
not already present.  See also atk_object_add_relationship()."
              version="1.9">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_target"
              c:identifier="atk_relation_remove_target"
              doc="Remove the specified AtkObject from the target for the relation.
Returns TRUE if the removal is successful.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <property name="relation-type" writable="1">
        <type name="RelationType" c:type="AtkRelationType"/>
      </property>
      <property name="target" writable="1">
        <type name="GObject.ValueArray" c:type="GValueArray"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="target">
        <type name="GLib.PtrArray" c:type="GPtrArray*"/>
      </field>
      <field name="relationship">
        <type name="RelationType" c:type="AtkRelationType"/>
      </field>
    </class>
    <record name="RelationClass"
            c:type="AtkRelationClass"
            glib:is-gtype-struct-for="Relation">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RelationSet"
           c:type="AtkRelationSet"
           parent="GObject.Object"
           glib:type-name="AtkRelationSet"
           glib:get-type="atk_relation_set_get_type"
           glib:type-struct="RelationSetClass">
      <constructor name="new"
                   c:identifier="atk_relation_set_new"
                   doc="Creates a new empty relation set.">
        <return-value transfer-ownership="full">
          <type name="RelationSet" c:type="AtkRelationSet*"/>
        </return-value>
      </constructor>
      <method name="contains"
              c:identifier="atk_relation_set_contains"
              doc="Determines whether the relation set contains a relation that matches the
specified type.
in @set, %FALSE otherwise">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="atk_relation_set_remove"
              doc="Removes a relation from the relation set.
This function unref&apos;s the #AtkRelation so it will be deleted unless there
is another reference to it.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="relation" transfer-ownership="none">
            <type name="Relation" c:type="AtkRelation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add"
              c:identifier="atk_relation_set_add"
              doc="Add a new relation to the current relation set if it is not already
present.
This function ref&apos;s the AtkRelation so the caller of this function
should unref it to ensure that it will be destroyed when the AtkRelationSet
is destroyed.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="relation" transfer-ownership="none">
            <type name="Relation" c:type="AtkRelation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_relations"
              c:identifier="atk_relation_set_get_n_relations"
              doc="Determines the number of relations in a relation set.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_relation" c:identifier="atk_relation_set_get_relation">
        <return-value transfer-ownership="full">
          <type name="Relation" c:type="AtkRelation*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_relation_by_type"
              c:identifier="atk_relation_set_get_relation_by_type"
              doc="Finds a relation that matches the specified type.">
        <return-value transfer-ownership="full">
          <type name="Relation" c:type="AtkRelation*"/>
        </return-value>
        <parameters>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_relation_by_type"
              c:identifier="atk_relation_set_add_relation_by_type"
              doc="Add a new relation of the specified type with the specified target to
the current relation set if the relation set does not contain a relation
of that type. If it is does contain a relation of that typea the target
is added to the relation."
              version="1.9">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="relationship" transfer-ownership="none">
            <type name="RelationType" c:type="AtkRelationType"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="relations">
        <type name="GLib.PtrArray" c:type="GPtrArray*"/>
      </field>
    </class>
    <record name="RelationSetClass"
            c:type="AtkRelationSetClass"
            glib:is-gtype-struct-for="RelationSet">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <enumeration name="RelationType"
                 glib:type-name="AtkRelationType"
                 glib:get-type="atk_relation_type_get_type"
                 c:type="AtkRelationType">
      <member name="null"
              value="0"
              c:identifier="ATK_RELATION_NULL"
              glib:nick="null"/>
      <member name="controlled_by"
              value="1"
              c:identifier="ATK_RELATION_CONTROLLED_BY"
              glib:nick="controlled-by"/>
      <member name="controller_for"
              value="2"
              c:identifier="ATK_RELATION_CONTROLLER_FOR"
              glib:nick="controller-for"/>
      <member name="label_for"
              value="3"
              c:identifier="ATK_RELATION_LABEL_FOR"
              glib:nick="label-for"/>
      <member name="labelled_by"
              value="4"
              c:identifier="ATK_RELATION_LABELLED_BY"
              glib:nick="labelled-by"/>
      <member name="member_of"
              value="5"
              c:identifier="ATK_RELATION_MEMBER_OF"
              glib:nick="member-of"/>
      <member name="node_child_of"
              value="6"
              c:identifier="ATK_RELATION_NODE_CHILD_OF"
              glib:nick="node-child-of"/>
      <member name="flows_to"
              value="7"
              c:identifier="ATK_RELATION_FLOWS_TO"
              glib:nick="flows-to"/>
      <member name="flows_from"
              value="8"
              c:identifier="ATK_RELATION_FLOWS_FROM"
              glib:nick="flows-from"/>
      <member name="subwindow_of"
              value="9"
              c:identifier="ATK_RELATION_SUBWINDOW_OF"
              glib:nick="subwindow-of"/>
      <member name="embeds"
              value="10"
              c:identifier="ATK_RELATION_EMBEDS"
              glib:nick="embeds"/>
      <member name="embedded_by"
              value="11"
              c:identifier="ATK_RELATION_EMBEDDED_BY"
              glib:nick="embedded-by"/>
      <member name="popup_for"
              value="12"
              c:identifier="ATK_RELATION_POPUP_FOR"
              glib:nick="popup-for"/>
      <member name="parent_window_of"
              value="13"
              c:identifier="ATK_RELATION_PARENT_WINDOW_OF"
              glib:nick="parent-window-of"/>
      <member name="described_by"
              value="14"
              c:identifier="ATK_RELATION_DESCRIBED_BY"
              glib:nick="described-by"/>
      <member name="description_for"
              value="15"
              c:identifier="ATK_RELATION_DESCRIPTION_FOR"
              glib:nick="description-for"/>
      <member name="node_parent_of"
              value="16"
              c:identifier="ATK_RELATION_NODE_PARENT_OF"
              glib:nick="node-parent-of"/>
      <member name="last_defined"
              value="17"
              c:identifier="ATK_RELATION_LAST_DEFINED"
              glib:nick="last-defined"/>
    </enumeration>
    <enumeration name="Role"
                 glib:type-name="AtkRole"
                 glib:get-type="atk_role_get_type"
                 c:type="AtkRole">
      <member name="invalid"
              value="0"
              c:identifier="ATK_ROLE_INVALID"
              glib:nick="invalid"/>
      <member name="accel_label"
              value="1"
              c:identifier="ATK_ROLE_ACCEL_LABEL"
              glib:nick="accel-label"/>
      <member name="alert"
              value="2"
              c:identifier="ATK_ROLE_ALERT"
              glib:nick="alert"/>
      <member name="animation"
              value="3"
              c:identifier="ATK_ROLE_ANIMATION"
              glib:nick="animation"/>
      <member name="arrow"
              value="4"
              c:identifier="ATK_ROLE_ARROW"
              glib:nick="arrow"/>
      <member name="calendar"
              value="5"
              c:identifier="ATK_ROLE_CALENDAR"
              glib:nick="calendar"/>
      <member name="canvas"
              value="6"
              c:identifier="ATK_ROLE_CANVAS"
              glib:nick="canvas"/>
      <member name="check_box"
              value="7"
              c:identifier="ATK_ROLE_CHECK_BOX"
              glib:nick="check-box"/>
      <member name="check_menu_item"
              value="8"
              c:identifier="ATK_ROLE_CHECK_MENU_ITEM"
              glib:nick="check-menu-item"/>
      <member name="color_chooser"
              value="9"
              c:identifier="ATK_ROLE_COLOR_CHOOSER"
              glib:nick="color-chooser"/>
      <member name="column_header"
              value="10"
              c:identifier="ATK_ROLE_COLUMN_HEADER"
              glib:nick="column-header"/>
      <member name="combo_box"
              value="11"
              c:identifier="ATK_ROLE_COMBO_BOX"
              glib:nick="combo-box"/>
      <member name="date_editor"
              value="12"
              c:identifier="ATK_ROLE_DATE_EDITOR"
              glib:nick="date-editor"/>
      <member name="desktop_icon"
              value="13"
              c:identifier="ATK_ROLE_DESKTOP_ICON"
              glib:nick="desktop-icon"/>
      <member name="desktop_frame"
              value="14"
              c:identifier="ATK_ROLE_DESKTOP_FRAME"
              glib:nick="desktop-frame"/>
      <member name="dial"
              value="15"
              c:identifier="ATK_ROLE_DIAL"
              glib:nick="dial"/>
      <member name="dialog"
              value="16"
              c:identifier="ATK_ROLE_DIALOG"
              glib:nick="dialog"/>
      <member name="directory_pane"
              value="17"
              c:identifier="ATK_ROLE_DIRECTORY_PANE"
              glib:nick="directory-pane"/>
      <member name="drawing_area"
              value="18"
              c:identifier="ATK_ROLE_DRAWING_AREA"
              glib:nick="drawing-area"/>
      <member name="file_chooser"
              value="19"
              c:identifier="ATK_ROLE_FILE_CHOOSER"
              glib:nick="file-chooser"/>
      <member name="filler"
              value="20"
              c:identifier="ATK_ROLE_FILLER"
              glib:nick="filler"/>
      <member name="font_chooser"
              value="21"
              c:identifier="ATK_ROLE_FONT_CHOOSER"
              glib:nick="font-chooser"/>
      <member name="frame"
              value="22"
              c:identifier="ATK_ROLE_FRAME"
              glib:nick="frame"/>
      <member name="glass_pane"
              value="23"
              c:identifier="ATK_ROLE_GLASS_PANE"
              glib:nick="glass-pane"/>
      <member name="html_container"
              value="24"
              c:identifier="ATK_ROLE_HTML_CONTAINER"
              glib:nick="html-container"/>
      <member name="icon"
              value="25"
              c:identifier="ATK_ROLE_ICON"
              glib:nick="icon"/>
      <member name="image"
              value="26"
              c:identifier="ATK_ROLE_IMAGE"
              glib:nick="image"/>
      <member name="internal_frame"
              value="27"
              c:identifier="ATK_ROLE_INTERNAL_FRAME"
              glib:nick="internal-frame"/>
      <member name="label"
              value="28"
              c:identifier="ATK_ROLE_LABEL"
              glib:nick="label"/>
      <member name="layered_pane"
              value="29"
              c:identifier="ATK_ROLE_LAYERED_PANE"
              glib:nick="layered-pane"/>
      <member name="list"
              value="30"
              c:identifier="ATK_ROLE_LIST"
              glib:nick="list"/>
      <member name="list_item"
              value="31"
              c:identifier="ATK_ROLE_LIST_ITEM"
              glib:nick="list-item"/>
      <member name="menu"
              value="32"
              c:identifier="ATK_ROLE_MENU"
              glib:nick="menu"/>
      <member name="menu_bar"
              value="33"
              c:identifier="ATK_ROLE_MENU_BAR"
              glib:nick="menu-bar"/>
      <member name="menu_item"
              value="34"
              c:identifier="ATK_ROLE_MENU_ITEM"
              glib:nick="menu-item"/>
      <member name="option_pane"
              value="35"
              c:identifier="ATK_ROLE_OPTION_PANE"
              glib:nick="option-pane"/>
      <member name="page_tab"
              value="36"
              c:identifier="ATK_ROLE_PAGE_TAB"
              glib:nick="page-tab"/>
      <member name="page_tab_list"
              value="37"
              c:identifier="ATK_ROLE_PAGE_TAB_LIST"
              glib:nick="page-tab-list"/>
      <member name="panel"
              value="38"
              c:identifier="ATK_ROLE_PANEL"
              glib:nick="panel"/>
      <member name="password_text"
              value="39"
              c:identifier="ATK_ROLE_PASSWORD_TEXT"
              glib:nick="password-text"/>
      <member name="popup_menu"
              value="40"
              c:identifier="ATK_ROLE_POPUP_MENU"
              glib:nick="popup-menu"/>
      <member name="progress_bar"
              value="41"
              c:identifier="ATK_ROLE_PROGRESS_BAR"
              glib:nick="progress-bar"/>
      <member name="push_button"
              value="42"
              c:identifier="ATK_ROLE_PUSH_BUTTON"
              glib:nick="push-button"/>
      <member name="radio_button"
              value="43"
              c:identifier="ATK_ROLE_RADIO_BUTTON"
              glib:nick="radio-button"/>
      <member name="radio_menu_item"
              value="44"
              c:identifier="ATK_ROLE_RADIO_MENU_ITEM"
              glib:nick="radio-menu-item"/>
      <member name="root_pane"
              value="45"
              c:identifier="ATK_ROLE_ROOT_PANE"
              glib:nick="root-pane"/>
      <member name="row_header"
              value="46"
              c:identifier="ATK_ROLE_ROW_HEADER"
              glib:nick="row-header"/>
      <member name="scroll_bar"
              value="47"
              c:identifier="ATK_ROLE_SCROLL_BAR"
              glib:nick="scroll-bar"/>
      <member name="scroll_pane"
              value="48"
              c:identifier="ATK_ROLE_SCROLL_PANE"
              glib:nick="scroll-pane"/>
      <member name="separator"
              value="49"
              c:identifier="ATK_ROLE_SEPARATOR"
              glib:nick="separator"/>
      <member name="slider"
              value="50"
              c:identifier="ATK_ROLE_SLIDER"
              glib:nick="slider"/>
      <member name="split_pane"
              value="51"
              c:identifier="ATK_ROLE_SPLIT_PANE"
              glib:nick="split-pane"/>
      <member name="spin_button"
              value="52"
              c:identifier="ATK_ROLE_SPIN_BUTTON"
              glib:nick="spin-button"/>
      <member name="statusbar"
              value="53"
              c:identifier="ATK_ROLE_STATUSBAR"
              glib:nick="statusbar"/>
      <member name="table"
              value="54"
              c:identifier="ATK_ROLE_TABLE"
              glib:nick="table"/>
      <member name="table_cell"
              value="55"
              c:identifier="ATK_ROLE_TABLE_CELL"
              glib:nick="table-cell"/>
      <member name="table_column_header"
              value="56"
              c:identifier="ATK_ROLE_TABLE_COLUMN_HEADER"
              glib:nick="table-column-header"/>
      <member name="table_row_header"
              value="57"
              c:identifier="ATK_ROLE_TABLE_ROW_HEADER"
              glib:nick="table-row-header"/>
      <member name="tear_off_menu_item"
              value="58"
              c:identifier="ATK_ROLE_TEAR_OFF_MENU_ITEM"
              glib:nick="tear-off-menu-item"/>
      <member name="terminal"
              value="59"
              c:identifier="ATK_ROLE_TERMINAL"
              glib:nick="terminal"/>
      <member name="text"
              value="60"
              c:identifier="ATK_ROLE_TEXT"
              glib:nick="text"/>
      <member name="toggle_button"
              value="61"
              c:identifier="ATK_ROLE_TOGGLE_BUTTON"
              glib:nick="toggle-button"/>
      <member name="tool_bar"
              value="62"
              c:identifier="ATK_ROLE_TOOL_BAR"
              glib:nick="tool-bar"/>
      <member name="tool_tip"
              value="63"
              c:identifier="ATK_ROLE_TOOL_TIP"
              glib:nick="tool-tip"/>
      <member name="tree"
              value="64"
              c:identifier="ATK_ROLE_TREE"
              glib:nick="tree"/>
      <member name="tree_table"
              value="65"
              c:identifier="ATK_ROLE_TREE_TABLE"
              glib:nick="tree-table"/>
      <member name="unknown"
              value="66"
              c:identifier="ATK_ROLE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="viewport"
              value="67"
              c:identifier="ATK_ROLE_VIEWPORT"
              glib:nick="viewport"/>
      <member name="window"
              value="68"
              c:identifier="ATK_ROLE_WINDOW"
              glib:nick="window"/>
      <member name="header"
              value="69"
              c:identifier="ATK_ROLE_HEADER"
              glib:nick="header"/>
      <member name="footer"
              value="70"
              c:identifier="ATK_ROLE_FOOTER"
              glib:nick="footer"/>
      <member name="paragraph"
              value="71"
              c:identifier="ATK_ROLE_PARAGRAPH"
              glib:nick="paragraph"/>
      <member name="ruler"
              value="72"
              c:identifier="ATK_ROLE_RULER"
              glib:nick="ruler"/>
      <member name="application"
              value="73"
              c:identifier="ATK_ROLE_APPLICATION"
              glib:nick="application"/>
      <member name="autocomplete"
              value="74"
              c:identifier="ATK_ROLE_AUTOCOMPLETE"
              glib:nick="autocomplete"/>
      <member name="editbar"
              value="75"
              c:identifier="ATK_ROLE_EDITBAR"
              glib:nick="editbar"/>
      <member name="embedded"
              value="76"
              c:identifier="ATK_ROLE_EMBEDDED"
              glib:nick="embedded"/>
      <member name="entry"
              value="77"
              c:identifier="ATK_ROLE_ENTRY"
              glib:nick="entry"/>
      <member name="chart"
              value="78"
              c:identifier="ATK_ROLE_CHART"
              glib:nick="chart"/>
      <member name="caption"
              value="79"
              c:identifier="ATK_ROLE_CAPTION"
              glib:nick="caption"/>
      <member name="document_frame"
              value="80"
              c:identifier="ATK_ROLE_DOCUMENT_FRAME"
              glib:nick="document-frame"/>
      <member name="heading"
              value="81"
              c:identifier="ATK_ROLE_HEADING"
              glib:nick="heading"/>
      <member name="page"
              value="82"
              c:identifier="ATK_ROLE_PAGE"
              glib:nick="page"/>
      <member name="section"
              value="83"
              c:identifier="ATK_ROLE_SECTION"
              glib:nick="section"/>
      <member name="redundant_object"
              value="84"
              c:identifier="ATK_ROLE_REDUNDANT_OBJECT"
              glib:nick="redundant-object"/>
      <member name="form"
              value="85"
              c:identifier="ATK_ROLE_FORM"
              glib:nick="form"/>
      <member name="link"
              value="86"
              c:identifier="ATK_ROLE_LINK"
              glib:nick="link"/>
      <member name="input_method_window"
              value="87"
              c:identifier="ATK_ROLE_INPUT_METHOD_WINDOW"
              glib:nick="input-method-window"/>
      <member name="last_defined"
              value="88"
              c:identifier="ATK_ROLE_LAST_DEFINED"
              glib:nick="last-defined"/>
    </enumeration>
    <interface name="Selection"
               c:type="AtkSelection"
               glib:type-name="AtkSelection"
               glib:get-type="atk_selection_get_type"
               glib:type-struct="SelectionIface">
      <virtual-method name="add_selection" invoker="add_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="clear_selection" invoker="clear_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="ref_selection" invoker="ref_selection">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_selection_count" invoker="get_selection_count">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_child_selected" invoker="is_child_selected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_selection" invoker="remove_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="select_all_selection"
                      invoker="select_all_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <method name="add_selection"
              c:identifier="atk_selection_add_selection"
              doc="Adds the specified accessible child of the object to the
object&apos;s selection.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_selection"
              c:identifier="atk_selection_clear_selection"
              doc="Clears the selection in the object so that no children in the object
are selected.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="ref_selection"
              c:identifier="atk_selection_ref_selection"
              doc="ith selection as opposed to the ith child).
Gets a reference to the accessible object representing the specified
selected child of the object.
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.
if @selection does not implement this interface.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selection_count"
              c:identifier="atk_selection_get_selection_count"
              doc="Gets the number of accessible children currently selected.
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.
if @selection does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="is_child_selected"
              c:identifier="atk_selection_is_child_selected"
              doc="Determines if the current child of this object is selected
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.
if @selection does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_selection"
              c:identifier="atk_selection_remove_selection"
              doc="ith selection as opposed to the ith child).
Removes the specified child of the object from the object&apos;s selection.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_all_selection"
              c:identifier="atk_selection_select_all_selection"
              doc="Causes every child of the object to be selected if the object
supports multiple selections.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <glib:signal name="selection-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="SelectionIface"
            c:type="AtkSelectionIface"
            glib:is-gtype-struct-for="Selection">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="add_selection">
        <callback name="add_selection" c:type="add_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="clear_selection">
        <callback name="clear_selection" c:type="clear_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_selection">
        <callback name="ref_selection" c:type="ref_selection">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selection_count">
        <callback name="get_selection_count" c:type="get_selection_count">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_child_selected">
        <callback name="is_child_selected" c:type="is_child_selected">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_selection">
        <callback name="remove_selection" c:type="remove_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_all_selection">
        <callback name="select_all_selection" c:type="select_all_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed" c:type="selection_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <type name="Selection" c:type="AtkSelection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <class name="Socket"
           c:type="AtkSocket"
           parent="Object"
           glib:type-name="AtkSocket"
           glib:get-type="atk_socket_get_type"
           glib:type-struct="SocketClass">
      <constructor name="new" c:identifier="atk_socket_new">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="AtkObject*"/>
        </return-value>
      </constructor>
      <virtual-method name="embed" invoker="embed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="plug_id" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="embed"
              c:identifier="atk_socket_embed"
              doc="Embeds the children of an #AtkPlug as the children of the #AtkSocket.  The
plug may be in the same process or in a different process.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="plug_id" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_occupied"
              c:identifier="atk_socket_is_occupied"
              doc="Determines whether or not the socket has an embedded plug.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="Object" c:type="AtkObject"/>
      </field>
      <field name="embedded_plug_id">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </class>
    <record name="SocketClass"
            c:type="AtkSocketClass"
            glib:is-gtype-struct-for="Socket">
      <field name="parent_class">
        <type name="ObjectClass" c:type="AtkObjectClass"/>
      </field>
      <field name="embed">
        <callback name="embed" c:type="embed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Socket" c:type="AtkSocket*"/>
            </parameter>
            <parameter name="plug_id" transfer-ownership="full">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="StateSet"
           c:type="AtkStateSet"
           parent="GObject.Object"
           glib:type-name="AtkStateSet"
           glib:get-type="atk_state_set_get_type"
           glib:type-struct="StateSetClass">
      <constructor name="new"
                   c:identifier="atk_state_set_new"
                   doc="Creates a new empty state set.">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
      </constructor>
      <method name="is_empty"
              c:identifier="atk_state_set_is_empty"
              doc="Checks whether the state set is empty, i.e. has no states set.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="add_state"
              c:identifier="atk_state_set_add_state"
              doc="Add a new state for the specified type to the current state set if
it is not already present.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="StateType" c:type="AtkStateType"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_states"
              c:identifier="atk_state_set_add_states"
              doc="Add the states for the specified types to the current state set.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="types" transfer-ownership="none">
            <type name="StateType" c:type="AtkStateType*"/>
          </parameter>
          <parameter name="n_types" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_states"
              c:identifier="atk_state_set_clear_states"
              doc="Removes all states from the state set.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="contains_state"
              c:identifier="atk_state_set_contains_state"
              doc="Checks whether the state for the specified type is in the specified set.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="StateType" c:type="AtkStateType"/>
          </parameter>
        </parameters>
      </method>
      <method name="contains_states"
              c:identifier="atk_state_set_contains_states"
              doc="Checks whether the states for all the specified types are in the
specified set.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="types" transfer-ownership="none">
            <type name="StateType" c:type="AtkStateType*"/>
          </parameter>
          <parameter name="n_types" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_state"
              c:identifier="atk_state_set_remove_state"
              doc="Removes the state for the specified type from the state set.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="StateType" c:type="AtkStateType"/>
          </parameter>
        </parameters>
      </method>
      <method name="and_sets"
              c:identifier="atk_state_set_and_sets"
              doc="Constructs the intersection of the two sets, returning %NULL if the
intersection is empty.">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
        <parameters>
          <parameter name="compare_set" transfer-ownership="none">
            <type name="StateSet" c:type="AtkStateSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="or_sets"
              c:identifier="atk_state_set_or_sets"
              doc="Constructs the union of the two sets.
returning %NULL is empty.">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
        <parameters>
          <parameter name="compare_set" transfer-ownership="none">
            <type name="StateSet" c:type="AtkStateSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="xor_sets"
              c:identifier="atk_state_set_xor_sets"
              doc="Constructs the exclusive-or of the two sets, returning %NULL is empty.
The set returned by this operation contains the states in exactly
one of the two sets.
in exactly one of the two sets.">
        <return-value transfer-ownership="full">
          <type name="StateSet" c:type="AtkStateSet*"/>
        </return-value>
        <parameters>
          <parameter name="compare_set" transfer-ownership="none">
            <type name="StateSet" c:type="AtkStateSet*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="StateSetClass"
            c:type="AtkStateSetClass"
            glib:is-gtype-struct-for="StateSet">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="StateType"
                 glib:type-name="AtkStateType"
                 glib:get-type="atk_state_type_get_type"
                 c:type="AtkStateType">
      <member name="invalid"
              value="0"
              c:identifier="ATK_STATE_INVALID"
              glib:nick="invalid"/>
      <member name="active"
              value="1"
              c:identifier="ATK_STATE_ACTIVE"
              glib:nick="active"/>
      <member name="armed"
              value="2"
              c:identifier="ATK_STATE_ARMED"
              glib:nick="armed"/>
      <member name="busy"
              value="3"
              c:identifier="ATK_STATE_BUSY"
              glib:nick="busy"/>
      <member name="checked"
              value="4"
              c:identifier="ATK_STATE_CHECKED"
              glib:nick="checked"/>
      <member name="defunct"
              value="5"
              c:identifier="ATK_STATE_DEFUNCT"
              glib:nick="defunct"/>
      <member name="editable"
              value="6"
              c:identifier="ATK_STATE_EDITABLE"
              glib:nick="editable"/>
      <member name="enabled"
              value="7"
              c:identifier="ATK_STATE_ENABLED"
              glib:nick="enabled"/>
      <member name="expandable"
              value="8"
              c:identifier="ATK_STATE_EXPANDABLE"
              glib:nick="expandable"/>
      <member name="expanded"
              value="9"
              c:identifier="ATK_STATE_EXPANDED"
              glib:nick="expanded"/>
      <member name="focusable"
              value="10"
              c:identifier="ATK_STATE_FOCUSABLE"
              glib:nick="focusable"/>
      <member name="focused"
              value="11"
              c:identifier="ATK_STATE_FOCUSED"
              glib:nick="focused"/>
      <member name="horizontal"
              value="12"
              c:identifier="ATK_STATE_HORIZONTAL"
              glib:nick="horizontal"/>
      <member name="iconified"
              value="13"
              c:identifier="ATK_STATE_ICONIFIED"
              glib:nick="iconified"/>
      <member name="modal"
              value="14"
              c:identifier="ATK_STATE_MODAL"
              glib:nick="modal"/>
      <member name="multi_line"
              value="15"
              c:identifier="ATK_STATE_MULTI_LINE"
              glib:nick="multi-line"/>
      <member name="multiselectable"
              value="16"
              c:identifier="ATK_STATE_MULTISELECTABLE"
              glib:nick="multiselectable"/>
      <member name="opaque"
              value="17"
              c:identifier="ATK_STATE_OPAQUE"
              glib:nick="opaque"/>
      <member name="pressed"
              value="18"
              c:identifier="ATK_STATE_PRESSED"
              glib:nick="pressed"/>
      <member name="resizable"
              value="19"
              c:identifier="ATK_STATE_RESIZABLE"
              glib:nick="resizable"/>
      <member name="selectable"
              value="20"
              c:identifier="ATK_STATE_SELECTABLE"
              glib:nick="selectable"/>
      <member name="selected"
              value="21"
              c:identifier="ATK_STATE_SELECTED"
              glib:nick="selected"/>
      <member name="sensitive"
              value="22"
              c:identifier="ATK_STATE_SENSITIVE"
              glib:nick="sensitive"/>
      <member name="showing"
              value="23"
              c:identifier="ATK_STATE_SHOWING"
              glib:nick="showing"/>
      <member name="single_line"
              value="24"
              c:identifier="ATK_STATE_SINGLE_LINE"
              glib:nick="single-line"/>
      <member name="stale"
              value="25"
              c:identifier="ATK_STATE_STALE"
              glib:nick="stale"/>
      <member name="transient"
              value="26"
              c:identifier="ATK_STATE_TRANSIENT"
              glib:nick="transient"/>
      <member name="vertical"
              value="27"
              c:identifier="ATK_STATE_VERTICAL"
              glib:nick="vertical"/>
      <member name="visible"
              value="28"
              c:identifier="ATK_STATE_VISIBLE"
              glib:nick="visible"/>
      <member name="manages_descendants"
              value="29"
              c:identifier="ATK_STATE_MANAGES_DESCENDANTS"
              glib:nick="manages-descendants"/>
      <member name="indeterminate"
              value="30"
              c:identifier="ATK_STATE_INDETERMINATE"
              glib:nick="indeterminate"/>
      <member name="truncated"
              value="31"
              c:identifier="ATK_STATE_TRUNCATED"
              glib:nick="truncated"/>
      <member name="required"
              value="32"
              c:identifier="ATK_STATE_REQUIRED"
              glib:nick="required"/>
      <member name="invalid_entry"
              value="33"
              c:identifier="ATK_STATE_INVALID_ENTRY"
              glib:nick="invalid-entry"/>
      <member name="supports_autocompletion"
              value="34"
              c:identifier="ATK_STATE_SUPPORTS_AUTOCOMPLETION"
              glib:nick="supports-autocompletion"/>
      <member name="selectable_text"
              value="35"
              c:identifier="ATK_STATE_SELECTABLE_TEXT"
              glib:nick="selectable-text"/>
      <member name="default"
              value="36"
              c:identifier="ATK_STATE_DEFAULT"
              glib:nick="default"/>
      <member name="animated"
              value="37"
              c:identifier="ATK_STATE_ANIMATED"
              glib:nick="animated"/>
      <member name="visited"
              value="38"
              c:identifier="ATK_STATE_VISITED"
              glib:nick="visited"/>
      <member name="last_defined"
              value="39"
              c:identifier="ATK_STATE_LAST_DEFINED"
              glib:nick="last-defined"/>
    </enumeration>
    <interface name="StreamableContent"
               c:type="AtkStreamableContent"
               glib:type-name="AtkStreamableContent"
               glib:get-type="atk_streamable_content_get_type"
               glib:type-struct="StreamableContentIface">
      <virtual-method name="get_n_mime_types" invoker="get_n_mime_types">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mime_type" invoker="get_mime_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_stream" invoker="get_stream">
        <return-value transfer-ownership="full">
          <type name="GLib.IOChannel" c:type="GIOChannel*"/>
        </return-value>
        <parameters>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_n_mime_types"
              c:identifier="atk_streamable_content_get_n_mime_types"
              doc="Gets the number of mime types supported by this object.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_mime_type"
              c:identifier="atk_streamable_content_get_mime_type"
              doc="Gets the character string of the specified mime type. The first mime
type is at position 0, the second at position 1, and so on.
should not free the character string.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_stream"
              c:identifier="atk_streamable_content_get_stream"
              doc="Gets the content in the specified mime type.
type.">
        <return-value transfer-ownership="full">
          <type name="GLib.IOChannel" c:type="GIOChannel*"/>
        </return-value>
        <parameters>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="atk_streamable_content_get_uri"
              doc="for the default mime type.
Get a string representing a URI in IETF standard format
(see http://www.ietf.org/rfc/rfc2396.txt) from which the object&apos;s content
may be streamed in the specified mime-type, if one is available.
If mime_type is NULL, the URI for the default (and possibly only) mime-type is
returned.
Note that it is possible for get_uri to return NULL but for
get_stream to work nonetheless, since not all GIOChannels connect to URIs.
can be constructed."
              version="1.12">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="StreamableContentIface"
            c:type="AtkStreamableContentIface"
            glib:is-gtype-struct-for="StreamableContent">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_n_mime_types">
        <callback name="get_n_mime_types" c:type="get_n_mime_types">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="streamable" transfer-ownership="none">
              <type name="StreamableContent" c:type="AtkStreamableContent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime_type">
        <callback name="get_mime_type" c:type="get_mime_type">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="streamable" transfer-ownership="none">
              <type name="StreamableContent" c:type="AtkStreamableContent*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_stream">
        <callback name="get_stream" c:type="get_stream">
          <return-value transfer-ownership="full">
            <type name="GLib.IOChannel" c:type="GIOChannel*"/>
          </return-value>
          <parameters>
            <parameter name="streamable" transfer-ownership="none">
              <type name="StreamableContent" c:type="AtkStreamableContent*"/>
            </parameter>
            <parameter name="mime_type" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri">
        <callback name="get_uri" c:type="get_uri">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="streamable" transfer-ownership="none">
              <type name="StreamableContent" c:type="AtkStreamableContent*"/>
            </parameter>
            <parameter name="mime_type" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad3">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <interface name="Table"
               c:type="AtkTable"
               glib:type-name="AtkTable"
               glib:get-type="atk_table_get_type"
               glib:type-struct="TableIface">
      <virtual-method name="ref_at" invoker="ref_at">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_index_at" invoker="get_index_at">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_column_at_index" invoker="get_column_at_index">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_row_at_index" invoker="get_row_at_index">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_n_columns" invoker="get_n_columns">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_n_rows" invoker="get_n_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_column_extent_at"
                      invoker="get_column_extent_at">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_row_extent_at" invoker="get_row_extent_at">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_caption" invoker="get_caption">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_column_description"
                      invoker="get_column_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_column_header" invoker="get_column_header">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_row_description" invoker="get_row_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_row_header" invoker="get_row_header">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_summary" invoker="get_summary">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_caption" invoker="set_caption">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caption" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_column_description"
                      invoker="set_column_description">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_column_header" invoker="set_column_header">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_row_description" invoker="set_row_description">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_row_header" invoker="set_row_header">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_summary" invoker="set_summary">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="accessible" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_selected_columns"
                      invoker="get_selected_columns">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="selected" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_selected_rows" invoker="get_selected_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="selected" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_column_selected" invoker="is_column_selected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_row_selected" invoker="is_row_selected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_selected" invoker="is_selected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_row_selection" invoker="add_row_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_row_selection"
                      invoker="remove_row_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_column_selection"
                      invoker="add_column_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_column_selection"
                      invoker="remove_column_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="ref_at"
              c:identifier="atk_table_ref_at"
              doc="Get a reference to the table cell at @row, @column.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_index_at"
              c:identifier="atk_table_get_index_at"
              doc="Gets a #gint representing the index at the specified @row and @column.
The value -1 is returned if the object at row,column is not a child
of table or table does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_at_index"
              c:identifier="atk_table_get_column_at_index"
              doc="Gets a #gint representing the column at the specified @index_.
or -1 if the table does not implement this interface">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_at_index"
              c:identifier="atk_table_get_row_at_index"
              doc="Gets a #gint representing the row at the specified @index_.
or -1 if the table does not implement this interface">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_columns"
              c:identifier="atk_table_get_n_columns"
              doc="Gets the number of columns in the table.
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_rows"
              c:identifier="atk_table_get_n_rows"
              doc="Gets the number of rows in the table.
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_column_extent_at"
              c:identifier="atk_table_get_column_extent_at"
              doc="Gets the number of columns occupied by the accessible object
at the specified @row and @column in the @table.
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_extent_at"
              c:identifier="atk_table_get_row_extent_at"
              doc="Gets the number of rows occupied by the accessible object
at a specified @row and @column in the @table.
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_caption"
              c:identifier="atk_table_get_caption"
              doc="Gets the caption for the @table.
if value does not implement this interface.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </method>
      <method name="get_column_description"
              c:identifier="atk_table_get_column_description"
              doc="Gets the description text of the specified @column in the table
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_header"
              c:identifier="atk_table_get_column_header"
              doc="Gets the column header of a specified column in an accessible table.
%NULL if value does not implement this interface.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_description"
              c:identifier="atk_table_get_row_description"
              doc="Gets the description text of the specified row in the table
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_header"
              c:identifier="atk_table_get_row_header"
              doc="Gets the row header of a specified row in an accessible table.
%NULL if value does not implement this interface.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="atk_table_get_summary"
              doc="Gets the summary description of the table.
or zero if value does not implement this interface.">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="AtkObject*"/>
        </return-value>
      </method>
      <method name="set_caption"
              c:identifier="atk_table_set_caption"
              doc="Sets the caption for the table.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caption" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_description"
              c:identifier="atk_table_set_column_description"
              doc="to set for the specified @column of the @table
Sets the description text for the specified @column of the @table.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_header"
              c:identifier="atk_table_set_column_header"
              doc="Sets the specified column header to @header.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_description"
              c:identifier="atk_table_set_row_description"
              doc="to set for the specified @row of @table
Sets the description text for the specified @row of @table.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_header"
              c:identifier="atk_table_set_row_header"
              doc="Sets the specified row header to @header.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="atk_table_set_summary"
              doc="to set for @table
Sets the summary description of the table.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="accessible" transfer-ownership="none">
            <type name="Object" c:type="AtkObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_columns"
              c:identifier="atk_table_get_selected_columns"
              doc="Gets the selected columns of the table by initializing **selected with
the selected column numbers. This array should be freed by the caller.
or %0 if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="selected" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_rows"
              c:identifier="atk_table_get_selected_rows"
              doc="Gets the selected rows of the table by initializing **selected with
the selected row numbers. This array should be freed by the caller.
or zero if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="selected" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint**"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_column_selected"
              c:identifier="atk_table_is_column_selected"
              doc="Gets a boolean value indicating whether the specified @column
is selected
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_row_selected"
              c:identifier="atk_table_is_row_selected"
              doc="Gets a boolean value indicating whether the specified @row
is selected
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_selected"
              c:identifier="atk_table_is_selected"
              doc="Gets a boolean value indicating whether the accessible object
at the specified @row and @column is selected
if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_row_selection"
              c:identifier="atk_table_add_row_selection"
              doc="Adds the specified @row to the selection.
or 0 if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_row_selection"
              c:identifier="atk_table_remove_row_selection"
              doc="Removes the specified @row from the selection.
the selection, or 0 if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_column_selection"
              c:identifier="atk_table_add_column_selection"
              doc="Adds the specified @column to the selection.
the selection, or 0 if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_column_selection"
              c:identifier="atk_table_remove_column_selection"
              doc="Adds the specified @column to the selection.
the selection, or 0 if value does not implement this interface.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="column-deleted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="column-inserted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="column-reordered">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="model-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="row-deleted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="row-inserted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="row-reordered">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="TableIface"
            c:type="AtkTableIface"
            glib:is-gtype-struct-for="Table">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="ref_at">
        <callback name="ref_at" c:type="ref_at">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_index_at">
        <callback name="get_index_at" c:type="get_index_at">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_column_at_index">
        <callback name="get_column_at_index" c:type="get_column_at_index">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="index_" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_row_at_index">
        <callback name="get_row_at_index" c:type="get_row_at_index">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="index_" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_columns">
        <callback name="get_n_columns" c:type="get_n_columns">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_rows">
        <callback name="get_n_rows" c:type="get_n_rows">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_column_extent_at">
        <callback name="get_column_extent_at" c:type="get_column_extent_at">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_row_extent_at">
        <callback name="get_row_extent_at" c:type="get_row_extent_at">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_caption">
        <callback name="get_caption" c:type="get_caption">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_column_description">
        <callback name="get_column_description"
                  c:type="get_column_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_column_header">
        <callback name="get_column_header" c:type="get_column_header">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_row_description">
        <callback name="get_row_description" c:type="get_row_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_row_header">
        <callback name="get_row_header" c:type="get_row_header">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_summary">
        <callback name="get_summary" c:type="get_summary">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_caption">
        <callback name="set_caption" c:type="set_caption">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="caption" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_description">
        <callback name="set_column_description"
                  c:type="set_column_description">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="description" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_header">
        <callback name="set_column_header" c:type="set_column_header">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="header" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_row_description">
        <callback name="set_row_description" c:type="set_row_description">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="description" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_row_header">
        <callback name="set_row_header" c:type="set_row_header">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="header" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_summary">
        <callback name="set_summary" c:type="set_summary">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="accessible" transfer-ownership="none">
              <type name="Object" c:type="AtkObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selected_columns">
        <callback name="get_selected_columns" c:type="get_selected_columns">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="selected"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selected_rows">
        <callback name="get_selected_rows" c:type="get_selected_rows">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="selected"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_column_selected">
        <callback name="is_column_selected" c:type="is_column_selected">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_row_selected">
        <callback name="is_row_selected" c:type="is_row_selected">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_selected">
        <callback name="is_selected" c:type="is_selected">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_row_selection">
        <callback name="add_row_selection" c:type="add_row_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_row_selection">
        <callback name="remove_row_selection" c:type="remove_row_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_column_selection">
        <callback name="add_column_selection" c:type="add_column_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_column_selection">
        <callback name="remove_column_selection"
                  c:type="remove_column_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_inserted">
        <callback name="row_inserted" c:type="row_inserted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="num_inserted" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="column_inserted">
        <callback name="column_inserted" c:type="column_inserted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="num_inserted" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_deleted">
        <callback name="row_deleted" c:type="row_deleted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="num_deleted" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="column_deleted">
        <callback name="column_deleted" c:type="column_deleted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="num_deleted" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_reordered">
        <callback name="row_reordered" c:type="row_reordered">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="column_reordered">
        <callback name="column_reordered" c:type="column_reordered">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="model_changed">
        <callback name="model_changed" c:type="model_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="table" transfer-ownership="none">
              <type name="Table" c:type="AtkTable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad2">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad3">
        <type name="Function" c:type="AtkFunction"/>
      </field>
      <field name="pad4">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <interface name="Text"
               c:type="AtkText"
               glib:type-name="AtkText"
               glib:get-type="atk_text_get_type"
               glib:type-struct="TextIface">
      <virtual-method name="get_text" invoker="get_text">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_text_after_offset"
                      invoker="get_text_after_offset">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_text_at_offset" invoker="get_text_at_offset">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_character_at_offset"
                      invoker="get_character_at_offset">
        <return-value transfer-ownership="full">
          <type name="GLib.unichar" c:type="gunichar"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_text_before_offset"
                      invoker="get_text_before_offset">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_caret_offset" invoker="get_caret_offset">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_run_attributes" invoker="get_run_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_default_attributes"
                      invoker="get_default_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_character_extents"
                      invoker="get_character_extents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coords" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_character_count" invoker="get_character_count">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_offset_at_point" invoker="get_offset_at_point">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coords" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_n_selections" invoker="get_n_selections">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_selection" invoker="get_selection">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_selection" invoker="add_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_selection" invoker="remove_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_selection" invoker="set_selection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_caret_offset" invoker="set_caret_offset">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_range_extents" invoker="get_range_extents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="TextRectangle" c:type="AtkTextRectangle*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_bounded_ranges" invoker="get_bounded_ranges">
        <return-value transfer-ownership="full">
          <type name="TextRange" c:type="AtkTextRange**"/>
        </return-value>
        <parameters>
          <parameter name="rect" transfer-ownership="none">
            <type name="TextRectangle" c:type="AtkTextRectangle*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
          <parameter name="x_clip_type" transfer-ownership="none">
            <type name="TextClipType" c:type="AtkTextClipType"/>
          </parameter>
          <parameter name="y_clip_type" transfer-ownership="none">
            <type name="TextClipType" c:type="AtkTextClipType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_text"
              c:identifier="atk_text_get_text"
              doc="Gets the specified text.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_character_at_offset"
              c:identifier="atk_text_get_character_at_offset"
              doc="Gets the specified text.">
        <return-value transfer-ownership="full">
          <type name="GLib.unichar" c:type="gunichar"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_after_offset"
              c:identifier="atk_text_get_text_after_offset"
              doc="returned substring
Gets the specified text.
If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character after the
offset is returned.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start after the offset to the next word start.
The returned string will contain the word after the offset if the offset
is inside a word or if the offset is not inside a word.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end at or after the offset to the next work end.
The returned string will contain the word after the offset if the offset
is inside a word and will contain the word after the word after the offset
if the offset is not inside a word.
If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start after the offset to the next sentence
start.
The returned string will contain the sentence after the offset if the offset
is inside a sentence or if the offset is not inside a sentence.
If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end at or after the offset to the next sentence end.
The returned string will contain the sentence after the offset if the offset
is inside a sentence and will contain the sentence after the sentence
after the offset if the offset is not inside a sentence.
If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start after the offset to the next line start.
If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end at or after the offset to the next line start.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_at_offset"
              c:identifier="atk_text_get_text_at_offset"
              doc="returned substring
Gets the specified text.
If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character at the
offset is returned.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start at or before the offset to the word start after
the offset.
The returned string will contain the word at the offset if the offset
is inside a word and will contain the word before the offset if the
offset is not inside a word.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end before the offset to the word end at or after the
offset.
The returned string will contain the word at the offset if the offset
is inside a word and will contain the word after to the offset if the
offset is not inside a word.
If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start at or before the offset to the sentence
start after the offset.
The returned string will contain the sentence at the offset if the offset
is inside a sentence and will contain the sentence before the offset
if the offset is not inside a sentence.
If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end before the offset to the sentence end at or
after the offset.
The returned string will contain the sentence at the offset if the offset
is inside a sentence and will contain the sentence after the offset
if the offset is not inside a sentence.
If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start at or before the offset to the line
start after the offset.
If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end before the offset to the line end at or after
the offset.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_before_offset"
              c:identifier="atk_text_get_text_before_offset"
              doc="returned substring
Gets the specified text.
If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character before the
offset is returned.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start before the word start before the offset to
the word start before the offset.
The returned string will contain the word before the offset if the offset
is inside a word and will contain the word before the word before the
offset if the offset is not inside a word.
If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end before the word end at or before the offset to the
word end at or before the offset.
The returned string will contain the word before the offset if the offset
is inside a word or if the offset is not inside a word.
If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start before the sentence start before
the offset to the sentence start before the offset.
The returned string will contain the sentence before the offset if the
offset is inside a sentence and will contain the sentence before the
sentence before the offset if the offset is not inside a sentence.
If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end before the sentence end at or before the offset to
the sentence end at or before the offset.
The returned string will contain the sentence before the offset if the
offset is inside a sentence or if the offset is not inside a sentence.
If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start before the line start ar or before the offset
to the line start ar or before the offset.
If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end before the line end before the offset to the
line end before the offset.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="boundary_type" transfer-ownership="none">
            <type name="TextBoundary" c:type="AtkTextBoundary"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_caret_offset"
              c:identifier="atk_text_get_caret_offset"
              doc="Gets the offset position of the caret (cursor).">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_character_extents"
              c:identifier="atk_text_get_character_extents"
              doc="Get the bounding box containing the glyph representing the character at
a particular text offset.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="x" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="y" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="width" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="height" direction="out" transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="coords" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_run_attributes"
              c:identifier="atk_text_get_run_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_attributes"
              c:identifier="atk_text_get_default_attributes">
        <return-value transfer-ownership="full">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </return-value>
      </method>
      <method name="get_character_count"
              c:identifier="atk_text_get_character_count"
              doc="Gets the character count.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_offset_at_point"
              c:identifier="atk_text_get_offset_at_point"
              doc="widget window
Gets the offset of the character located at coordinates @x and @y. @x and @y
are interpreted as being relative to the screen or this widget&apos;s window
depending on @coords.
the specified @x and @y coordinates.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coords" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_selections"
              c:identifier="atk_text_get_n_selections"
              doc="Gets the number of selected regions.
occurred.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_selection"
              c:identifier="atk_text_get_selection"
              doc="assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
the selected region
Gets the text from the specified selection.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="end_offset"
                     direction="out"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_selection"
              c:identifier="atk_text_add_selection"
              doc="Adds a selection bounded by the specified offsets.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_selection"
              c:identifier="atk_text_remove_selection"
              doc="assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
Removes the specified selection.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection"
              c:identifier="atk_text_set_selection"
              doc="assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
the selection
Changes the start and end offset of the specified selection.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="selection_num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caret_offset"
              c:identifier="atk_text_set_caret_offset"
              doc="Sets the caret (cursor) position to the specified @offset.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_range_extents"
              c:identifier="atk_text_get_range_extents"
              doc="information is required.
for which boundary information is required.
Get the bounding box for text within the specified range."
              version="1.3">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="end_offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="TextRectangle" c:type="AtkTextRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bounded_ranges"
              c:identifier="atk_text_get_bounded_ranges"
              doc="Get the ranges of text in the specified bounding box.
by this function will be NULL."
              version="1.3">
        <return-value transfer-ownership="full">
          <type name="TextRange" c:type="AtkTextRange**"/>
        </return-value>
        <parameters>
          <parameter name="rect" transfer-ownership="none">
            <type name="TextRectangle" c:type="AtkTextRectangle*"/>
          </parameter>
          <parameter name="coord_type" transfer-ownership="none">
            <type name="CoordType" c:type="AtkCoordType"/>
          </parameter>
          <parameter name="x_clip_type" transfer-ownership="none">
            <type name="TextClipType" c:type="AtkTextClipType"/>
          </parameter>
          <parameter name="y_clip_type" transfer-ownership="none">
            <type name="TextClipType" c:type="AtkTextClipType"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="text-attributes-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="text-caret-moved">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="text-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="text-selection-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <enumeration name="TextAttribute"
                 glib:type-name="AtkTextAttribute"
                 glib:get-type="atk_text_attribute_get_type"
                 c:type="AtkTextAttribute">
      <member name="invalid"
              value="0"
              c:identifier="ATK_TEXT_ATTR_INVALID"
              glib:nick="invalid"/>
      <member name="left_margin"
              value="1"
              c:identifier="ATK_TEXT_ATTR_LEFT_MARGIN"
              glib:nick="left-margin"/>
      <member name="right_margin"
              value="2"
              c:identifier="ATK_TEXT_ATTR_RIGHT_MARGIN"
              glib:nick="right-margin"/>
      <member name="indent"
              value="3"
              c:identifier="ATK_TEXT_ATTR_INDENT"
              glib:nick="indent"/>
      <member name="invisible"
              value="4"
              c:identifier="ATK_TEXT_ATTR_INVISIBLE"
              glib:nick="invisible"/>
      <member name="editable"
              value="5"
              c:identifier="ATK_TEXT_ATTR_EDITABLE"
              glib:nick="editable"/>
      <member name="pixels_above_lines"
              value="6"
              c:identifier="ATK_TEXT_ATTR_PIXELS_ABOVE_LINES"
              glib:nick="pixels-above-lines"/>
      <member name="pixels_below_lines"
              value="7"
              c:identifier="ATK_TEXT_ATTR_PIXELS_BELOW_LINES"
              glib:nick="pixels-below-lines"/>
      <member name="pixels_inside_wrap"
              value="8"
              c:identifier="ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP"
              glib:nick="pixels-inside-wrap"/>
      <member name="bg_full_height"
              value="9"
              c:identifier="ATK_TEXT_ATTR_BG_FULL_HEIGHT"
              glib:nick="bg-full-height"/>
      <member name="rise"
              value="10"
              c:identifier="ATK_TEXT_ATTR_RISE"
              glib:nick="rise"/>
      <member name="underline"
              value="11"
              c:identifier="ATK_TEXT_ATTR_UNDERLINE"
              glib:nick="underline"/>
      <member name="strikethrough"
              value="12"
              c:identifier="ATK_TEXT_ATTR_STRIKETHROUGH"
              glib:nick="strikethrough"/>
      <member name="size"
              value="13"
              c:identifier="ATK_TEXT_ATTR_SIZE"
              glib:nick="size"/>
      <member name="scale"
              value="14"
              c:identifier="ATK_TEXT_ATTR_SCALE"
              glib:nick="scale"/>
      <member name="weight"
              value="15"
              c:identifier="ATK_TEXT_ATTR_WEIGHT"
              glib:nick="weight"/>
      <member name="language"
              value="16"
              c:identifier="ATK_TEXT_ATTR_LANGUAGE"
              glib:nick="language"/>
      <member name="family_name"
              value="17"
              c:identifier="ATK_TEXT_ATTR_FAMILY_NAME"
              glib:nick="family-name"/>
      <member name="bg_color"
              value="18"
              c:identifier="ATK_TEXT_ATTR_BG_COLOR"
              glib:nick="bg-color"/>
      <member name="fg_color"
              value="19"
              c:identifier="ATK_TEXT_ATTR_FG_COLOR"
              glib:nick="fg-color"/>
      <member name="bg_stipple"
              value="20"
              c:identifier="ATK_TEXT_ATTR_BG_STIPPLE"
              glib:nick="bg-stipple"/>
      <member name="fg_stipple"
              value="21"
              c:identifier="ATK_TEXT_ATTR_FG_STIPPLE"
              glib:nick="fg-stipple"/>
      <member name="wrap_mode"
              value="22"
              c:identifier="ATK_TEXT_ATTR_WRAP_MODE"
              glib:nick="wrap-mode"/>
      <member name="direction"
              value="23"
              c:identifier="ATK_TEXT_ATTR_DIRECTION"
              glib:nick="direction"/>
      <member name="justification"
              value="24"
              c:identifier="ATK_TEXT_ATTR_JUSTIFICATION"
              glib:nick="justification"/>
      <member name="stretch"
              value="25"
              c:identifier="ATK_TEXT_ATTR_STRETCH"
              glib:nick="stretch"/>
      <member name="variant"
              value="26"
              c:identifier="ATK_TEXT_ATTR_VARIANT"
              glib:nick="variant"/>
      <member name="style"
              value="27"
              c:identifier="ATK_TEXT_ATTR_STYLE"
              glib:nick="style"/>
      <member name="last_defined"
              value="28"
              c:identifier="ATK_TEXT_ATTR_LAST_DEFINED"
              glib:nick="last-defined"/>
    </enumeration>
    <enumeration name="TextBoundary"
                 glib:type-name="AtkTextBoundary"
                 glib:get-type="atk_text_boundary_get_type"
                 c:type="AtkTextBoundary">
      <member name="char"
              value="0"
              c:identifier="ATK_TEXT_BOUNDARY_CHAR"
              glib:nick="char"/>
      <member name="word_start"
              value="1"
              c:identifier="ATK_TEXT_BOUNDARY_WORD_START"
              glib:nick="word-start"/>
      <member name="word_end"
              value="2"
              c:identifier="ATK_TEXT_BOUNDARY_WORD_END"
              glib:nick="word-end"/>
      <member name="sentence_start"
              value="3"
              c:identifier="ATK_TEXT_BOUNDARY_SENTENCE_START"
              glib:nick="sentence-start"/>
      <member name="sentence_end"
              value="4"
              c:identifier="ATK_TEXT_BOUNDARY_SENTENCE_END"
              glib:nick="sentence-end"/>
      <member name="line_start"
              value="5"
              c:identifier="ATK_TEXT_BOUNDARY_LINE_START"
              glib:nick="line-start"/>
      <member name="line_end"
              value="6"
              c:identifier="ATK_TEXT_BOUNDARY_LINE_END"
              glib:nick="line-end"/>
    </enumeration>
    <enumeration name="TextClipType"
                 glib:type-name="AtkTextClipType"
                 glib:get-type="atk_text_clip_type_get_type"
                 c:type="AtkTextClipType">
      <member name="none"
              value="0"
              c:identifier="ATK_TEXT_CLIP_NONE"
              glib:nick="none"/>
      <member name="min"
              value="1"
              c:identifier="ATK_TEXT_CLIP_MIN"
              glib:nick="min"/>
      <member name="max"
              value="2"
              c:identifier="ATK_TEXT_CLIP_MAX"
              glib:nick="max"/>
      <member name="both"
              value="3"
              c:identifier="ATK_TEXT_CLIP_BOTH"
              glib:nick="both"/>
    </enumeration>
    <record name="TextIface"
            c:type="AtkTextIface"
            glib:is-gtype-struct-for="Text">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_text">
        <callback name="get_text" c:type="get_text">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="start_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_text_after_offset">
        <callback name="get_text_after_offset" c:type="get_text_after_offset">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="boundary_type" transfer-ownership="none">
              <type name="TextBoundary" c:type="AtkTextBoundary"/>
            </parameter>
            <parameter name="start_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="end_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_text_at_offset">
        <callback name="get_text_at_offset" c:type="get_text_at_offset">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="boundary_type" transfer-ownership="none">
              <type name="TextBoundary" c:type="AtkTextBoundary"/>
            </parameter>
            <parameter name="start_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="end_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_character_at_offset">
        <callback name="get_character_at_offset"
                  c:type="get_character_at_offset">
          <return-value transfer-ownership="full">
            <type name="GLib.unichar" c:type="gunichar"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_text_before_offset">
        <callback name="get_text_before_offset"
                  c:type="get_text_before_offset">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="boundary_type" transfer-ownership="none">
              <type name="TextBoundary" c:type="AtkTextBoundary"/>
            </parameter>
            <parameter name="start_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="end_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_caret_offset">
        <callback name="get_caret_offset" c:type="get_caret_offset">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_run_attributes">
        <callback name="get_run_attributes" c:type="get_run_attributes">
          <return-value transfer-ownership="full">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="start_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="end_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_default_attributes">
        <callback name="get_default_attributes"
                  c:type="get_default_attributes">
          <return-value transfer-ownership="full">
            <type name="AttributeSet" c:type="AtkAttributeSet*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_character_extents">
        <callback name="get_character_extents" c:type="get_character_extents">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="x" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="y" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="width" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="height" direction="out" transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="coords" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_character_count">
        <callback name="get_character_count" c:type="get_character_count">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_offset_at_point">
        <callback name="get_offset_at_point" c:type="get_offset_at_point">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coords" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_selections">
        <callback name="get_n_selections" c:type="get_n_selections">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selection">
        <callback name="get_selection" c:type="get_selection">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="selection_num" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="start_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="end_offset"
                       direction="out"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_selection">
        <callback name="add_selection" c:type="add_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="start_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_selection">
        <callback name="remove_selection" c:type="remove_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="selection_num" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_selection">
        <callback name="set_selection" c:type="set_selection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="selection_num" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="start_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_caret_offset">
        <callback name="set_caret_offset" c:type="set_caret_offset">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_changed">
        <callback name="text_changed" c:type="text_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_caret_moved">
        <callback name="text_caret_moved" c:type="text_caret_moved">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="location" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_selection_changed">
        <callback name="text_selection_changed"
                  c:type="text_selection_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_attributes_changed">
        <callback name="text_attributes_changed"
                  c:type="text_attributes_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_range_extents">
        <callback name="get_range_extents" c:type="get_range_extents">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="start_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="end_offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
            <parameter name="rect" transfer-ownership="none">
              <type name="TextRectangle" c:type="AtkTextRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_bounded_ranges">
        <callback name="get_bounded_ranges" c:type="get_bounded_ranges">
          <return-value transfer-ownership="full">
            <type name="TextRange" c:type="AtkTextRange**"/>
          </return-value>
          <parameters>
            <parameter name="text" transfer-ownership="none">
              <type name="Text" c:type="AtkText*"/>
            </parameter>
            <parameter name="rect" transfer-ownership="none">
              <type name="TextRectangle" c:type="AtkTextRectangle*"/>
            </parameter>
            <parameter name="coord_type" transfer-ownership="none">
              <type name="CoordType" c:type="AtkCoordType"/>
            </parameter>
            <parameter name="x_clip_type" transfer-ownership="none">
              <type name="TextClipType" c:type="AtkTextClipType"/>
            </parameter>
            <parameter name="y_clip_type" transfer-ownership="none">
              <type name="TextClipType" c:type="AtkTextClipType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad4">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <record name="TextRange"
            c:type="AtkTextRange"
            doc="A structure used to describe a text range.">
      <field name="bounds" writable="1">
        <type name="TextRectangle" c:type="AtkTextRectangle"/>
      </field>
      <field name="start_offset" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="end_offset" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="content" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="TextRectangle"
            c:type="AtkTextRectangle"
            doc="A structure used to store a rectangle used by AtkText.">
      <field name="x" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="height" writable="1">
        <type name="int" c:type="gint"/>
      </field>
    </record>
    <class name="Util"
           c:type="AtkUtil"
           parent="GObject.Object"
           glib:type-name="AtkUtil"
           glib:get-type="atk_util_get_type"
           glib:type-struct="UtilClass">
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="UtilClass"
            c:type="AtkUtilClass"
            glib:is-gtype-struct-for="Util">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="add_global_event_listener">
        <callback name="add_global_event_listener"
                  c:type="add_global_event_listener">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="listener" transfer-ownership="none">
              <type name="GObject.SignalEmissionHook"
                    c:type="GSignalEmissionHook"/>
            </parameter>
            <parameter name="event_type" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_global_event_listener">
        <callback name="remove_global_event_listener"
                  c:type="remove_global_event_listener">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="listener_id" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_key_event_listener">
        <callback name="add_key_event_listener"
                  c:type="add_key_event_listener">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="listener" transfer-ownership="none">
              <type name="KeySnoopFunc" c:type="AtkKeySnoopFunc"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_key_event_listener">
        <callback name="remove_key_event_listener"
                  c:type="remove_key_event_listener">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="listener_id" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_root">
        <callback name="get_root" c:type="get_root">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="AtkObject*"/>
          </return-value>
        </callback>
      </field>
      <field name="get_toolkit_name">
        <callback name="get_toolkit_name" c:type="get_toolkit_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
        </callback>
      </field>
      <field name="get_toolkit_version">
        <callback name="get_toolkit_version" c:type="get_toolkit_version">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
        </callback>
      </field>
    </record>
    <interface name="Value"
               c:type="AtkValue"
               glib:type-name="AtkValue"
               glib:get-type="atk_value_get_type"
               glib:type-struct="ValueIface">
      <virtual-method name="get_current_value" invoker="get_current_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_maximum_value" invoker="get_maximum_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_minimum_value" invoker="get_minimum_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_current_value" invoker="set_current_value">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_minimum_increment"
                      invoker="get_minimum_increment">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_current_value"
              c:identifier="atk_value_get_current_value"
              doc="Gets the value of this object.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_maximum_value"
              c:identifier="atk_value_get_maximum_value"
              doc="Gets the maximum value of this object.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_minimum_value"
              c:identifier="atk_value_get_minimum_value"
              doc="Gets the minimum value of this object.">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_current_value"
              c:identifier="atk_value_set_current_value"
              doc="Sets the value of this object.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_minimum_increment"
              c:identifier="atk_value_get_minimum_increment"
              doc="Gets the minimum increment by which the value of this object may be changed.  If zero,
the minimum increment is undefined, which may mean that it is limited only by the
floating point precision of the platform."
              version="1.12">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ValueIface"
            c:type="AtkValueIface"
            glib:is-gtype-struct-for="Value">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_current_value">
        <callback name="get_current_value" c:type="get_current_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Value" c:type="AtkValue*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_maximum_value">
        <callback name="get_maximum_value" c:type="get_maximum_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Value" c:type="AtkValue*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_minimum_value">
        <callback name="get_minimum_value" c:type="get_minimum_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Value" c:type="AtkValue*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_current_value">
        <callback name="set_current_value" c:type="set_current_value">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Value" c:type="AtkValue*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_minimum_increment">
        <callback name="get_minimum_increment" c:type="get_minimum_increment">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Value" c:type="AtkValue*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad1">
        <type name="Function" c:type="AtkFunction"/>
      </field>
    </record>
    <function name="add_focus_tracker"
              c:identifier="atk_add_focus_tracker"
              doc="when an object receives focus.
Adds the specified function to the list of functions to be called
when an object receives focus.">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="focus_tracker" transfer-ownership="none" scope="call">
          <type name="EventListener" c:type="AtkEventListener"/>
        </parameter>
      </parameters>
    </function>
    <function name="add_global_event_listener"
              c:identifier="atk_add_global_event_listener"
              doc="Adds the specified function to the list of functions to be called
when an event of type event_type occurs.">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="listener" transfer-ownership="none" scope="call">
          <type name="GObject.SignalEmissionHook"
                c:type="GSignalEmissionHook"/>
        </parameter>
        <parameter name="event_type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="add_key_event_listener"
              c:identifier="atk_add_key_event_listener"
              doc="along with the event notification, when it occurs.
Adds the specified function to the list of functions to be called
when a key event occurs.  The @data element will be passed to the
#AtkKeySnoopFunc (@listener) as the @func_data param, on notification.">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="listener"
                   transfer-ownership="none"
                   scope="call"
                   closure="1">
          <type name="KeySnoopFunc" c:type="AtkKeySnoopFunc"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="attribute_set_free"
              c:identifier="atk_attribute_set_free"
              doc="Frees the memory used by an #AtkAttributeSet, including all its
#AtkAttributes.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="attrib_set" transfer-ownership="none">
          <type name="AttributeSet" c:type="AtkAttributeSet*"/>
        </parameter>
      </parameters>
    </function>
    <function name="focus_tracker_init"
              c:identifier="atk_focus_tracker_init"
              doc="Specifies the function to be called for focus tracker initialization.
This function should be called by an implementation of the
ATK interface if any specific work needs to be done to enable
focus tracking.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="init" transfer-ownership="none" scope="call">
          <type name="EventListenerInit" c:type="AtkEventListenerInit"/>
        </parameter>
      </parameters>
    </function>
    <function name="focus_tracker_notify"
              c:identifier="atk_focus_tracker_notify"
              doc="Cause the focus tracker functions which have been specified to be
executed for the object.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="AtkObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_registry"
              c:identifier="atk_get_default_registry">
      <return-value transfer-ownership="full">
        <type name="Registry" c:type="AtkRegistry*"/>
      </return-value>
    </function>
    <function name="get_focus_object"
              c:identifier="atk_get_focus_object"
              doc="Gets the currently focused object."
              version="1.6">
      <return-value transfer-ownership="full">
        <type name="Object" c:type="AtkObject*"/>
      </return-value>
    </function>
    <function name="get_root"
              c:identifier="atk_get_root"
              doc="Gets the root accessible container for the current application.">
      <return-value transfer-ownership="full">
        <type name="Object" c:type="AtkObject*"/>
      </return-value>
    </function>
    <function name="get_toolkit_name"
              c:identifier="atk_get_toolkit_name"
              doc="Gets name string for the GUI toolkit implementing ATK for this application.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="get_toolkit_version"
              c:identifier="atk_get_toolkit_version"
              doc="Gets version string for the GUI toolkit implementing ATK for this application.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="get_version"
              c:identifier="atk_get_version"
              doc="Gets the current version for ATK.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="remove_focus_tracker"
              c:identifier="atk_remove_focus_tracker"
              doc="Removes the specified focus tracker from the list of functions
to be called when any object receives focus.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tracker_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="remove_global_event_listener"
              c:identifier="atk_remove_global_event_listener"
              doc="Removes the specified event listener">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="listener_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="remove_key_event_listener"
              c:identifier="atk_remove_key_event_listener"
              doc="Removes the specified event listener">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="listener_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="role_for_name"
              c:identifier="atk_role_for_name"
              doc="Get the #AtkRole type corresponding to a rolew name.
me,
or #ATK_ROLE_INVALID if no matching role is found.">
      <return-value transfer-ownership="full">
        <type name="Role" c:type="AtkRole"/>
      </return-value>
      <parameters>
        <parameter name="name"
                   transfer-ownership="none"
                   doc="name of an ATK role.">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="role_get_localized_name"
              c:identifier="atk_role_get_localized_name"
              doc="Gets the localized description string describing the #AtkRole @role.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="role" transfer-ownership="none">
          <type name="Role" c:type="AtkRole"/>
        </parameter>
      </parameters>
    </function>
    <function name="role_get_name"
              c:identifier="atk_role_get_name"
              doc="Gets the description string describing the #AtkRole @role.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="role" transfer-ownership="none">
          <type name="Role" c:type="AtkRole"/>
        </parameter>
      </parameters>
    </function>
    <function name="role_register"
              c:identifier="atk_role_register"
              doc="Registers the role specified by @name.">
      <return-value transfer-ownership="full">
        <type name="Role" c:type="AtkRole"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="state_type_for_name"
              c:identifier="atk_state_type_for_name"
              doc="Gets the #AtkStateType corresponding to the description string @name.">
      <return-value transfer-ownership="full">
        <type name="StateType" c:type="AtkStateType"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="state_type_get_name"
              c:identifier="atk_state_type_get_name"
              doc="Gets the description string describing the #AtkStateType @type.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="StateType" c:type="AtkStateType"/>
        </parameter>
      </parameters>
    </function>
    <function name="state_type_register"
              c:identifier="atk_state_type_register"
              doc="Register a new object state.">
      <return-value transfer-ownership="full">
        <type name="StateType" c:type="AtkStateType"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_attribute_for_name"
              c:identifier="atk_text_attribute_for_name"
              doc="Get the #AtkTextAttribute type corresponding to a text attribute name.
me,
or #ATK_TEXT_ATTRIBUTE_INVALID if no matching text attribute is found.">
      <return-value transfer-ownership="full">
        <type name="TextAttribute" c:type="AtkTextAttribute"/>
      </return-value>
      <parameters>
        <parameter name="name"
                   transfer-ownership="none"
                   doc="name of an ATK text attribute.">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_attribute_get_name"
              c:identifier="atk_text_attribute_get_name"
              doc="Gets the name corresponding to the #AtkTextAttribute">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="attr" transfer-ownership="none">
          <type name="TextAttribute" c:type="AtkTextAttribute"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_attribute_get_value"
              c:identifier="atk_text_attribute_get_value"
              doc="Gets the value for the index of the #AtkTextAttribute
NULL is returned if there are no values maintained for the attr value.">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="attr" transfer-ownership="none">
          <type name="TextAttribute" c:type="AtkTextAttribute"/>
        </parameter>
        <parameter name="index_" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_attribute_register"
              c:identifier="atk_text_attribute_register"
              doc="Associate @name with a new #AtkTextAttribute">
      <return-value transfer-ownership="full">
        <type name="TextAttribute" c:type="AtkTextAttribute"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_free_ranges"
              c:identifier="atk_text_free_ranges"
              doc="Frees the memory associated with an array of AtkTextRange. It is assumed
that the array was returned by the function atk_text_get_bounded_ranges
and is NULL terminated."
              version="1.3">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="ranges" transfer-ownership="none">
          <type name="TextRange" c:type="AtkTextRange**"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
