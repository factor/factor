<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Pango" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <package name="gdk-2.0"/>
  <c:include name="gdk/gdk.h"/>
  <namespace name="Gdk"
             version="2.0"
             shared-library="libgdk-x11-2.0.so.0"
             c:identifier-prefixes="Gdk"
             c:symbol-prefixes="gdk">
    <alias name="NativeWindow" c:type="GdkNativeWindow">
      <source-position filename="gdk/gdktypes.h" line="97"/>
      <type name="guint32" c:type="guint32"/>
    </alias>
    <alias name="Selection" c:type="GdkSelection">
      <source-position filename="gdk/gdkselection.h" line="60"/>
      <type name="Atom" c:type="GdkAtom"/>
    </alias>
    <alias name="SelectionType" c:type="GdkSelectionType">
      <source-position filename="gdk/gdkselection.h" line="62"/>
      <type name="Atom" c:type="GdkAtom"/>
    </alias>
    <alias name="Target" c:type="GdkTarget">
      <source-position filename="gdk/gdkselection.h" line="61"/>
      <type name="Atom" c:type="GdkAtom"/>
    </alias>
    <alias name="WChar" c:type="GdkWChar">
      <source-position filename="gdk/gdktypes.h" line="78"/>
      <type name="guint32" c:type="guint32"/>
    </alias>
    <alias name="XEvent" c:type="GdkXEvent">
      <source-position filename="gdk/gdkevents.h" line="75"/>
      <type name="none" c:type="void"/>
    </alias>
    <function-macro name="APP_LAUNCH_CONTEXT"
                    c:identifier="GDK_APP_LAUNCH_CONTEXT"
                    introspectable="0">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="APP_LAUNCH_CONTEXT_CLASS"
                    c:identifier="GDK_APP_LAUNCH_CONTEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="37"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="APP_LAUNCH_CONTEXT_GET_CLASS"
                    c:identifier="GDK_APP_LAUNCH_CONTEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="40"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ATOM_TO_POINTER"
                    c:identifier="GDK_ATOM_TO_POINTER"
                    introspectable="0">
      <source-position filename="gdk/gdktypes.h" line="82"/>
      <parameters>
        <parameter name="atom">
        </parameter>
      </parameters>
    </function-macro>
    <class name="AppLaunchContext"
           c:symbol-prefix="app_launch_context"
           c:type="GdkAppLaunchContext"
           parent="Gio.AppLaunchContext"
           glib:type-name="GdkAppLaunchContext"
           glib:get-type="gdk_app_launch_context_get_type"
           glib:type-struct="AppLaunchContextClass">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="56"/>
      <constructor name="new"
                   c:identifier="gdk_app_launch_context_new"
                   version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="276">Creates a new #GdkAppLaunchContext.</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkapplaunchcontext.c"
               line="281">a new #GdkAppLaunchContext</doc>
          <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
        </return-value>
      </constructor>
      <method name="set_desktop"
              c:identifier="gdk_app_launch_context_set_desktop"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="168">Sets the workspace on which applications will be launched when
using this context when running under a window manager that
supports multiple workspaces, as described in the
&lt;ulink url="http://www.freedesktop.org/Standards/wm-spec"&gt;Extended
Window Manager Hints&lt;/ulink&gt;.

When the workspace is not specified or @desktop is set to -1,
it is up to the window manager to pick one, typically it will
be the current workspace.</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="170">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="desktop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="171">the number of a workspace, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display"
              c:identifier="gdk_app_launch_context_set_display"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="110">Sets the display on which applications will be launched when
using this context. See also gdk_app_launch_context_set_screen().</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="112">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="113">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="gdk_app_launch_context_set_icon"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="218">Sets the icon for applications that are launched with this
context.

Window Managers can use this information when displaying startup
notification.

See also gdk_app_launch_context_set_icon_name().</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="220">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="221">a #GIcon, or %NULL</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="gdk_app_launch_context_set_icon_name"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="250">Sets the icon for applications that are launched with this context.
The @icon_name will be interpreted in the same way as the Icon field
in desktop files. See also gdk_app_launch_context_set_icon().

If both @icon and @icon_name are set, the @icon_name takes priority.
If neither @icon or @icon_name is set, the icon is taken from either
the file that is passed to launched application or from the #GAppInfo
for the launched application itself.</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="252">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="253">an icon name, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_screen"
              c:identifier="gdk_app_launch_context_set_screen"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="137">Sets the screen on which applications will be launched when
using this context. See also gdk_app_launch_context_set_display().

If both @screen and @display are set, the @screen takes priority.
If neither @screen or @display are set, the default screen and
display are used.</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="139">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="140">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="gdk_app_launch_context_set_timestamp"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkapplaunchcontext.c"
             line="194">Sets the timestamp of @context. The timestamp should ideally
be taken from the event that triggered the launch.

Window managers can use this information to avoid moving the
focus to the newly launched application when the user is busy
typing in another window. This is also known as 'focus stealing
prevention'.</doc>
        <source-position filename="gdk/gdkapplaunchcontext.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="196">a #GdkAppLaunchContext</doc>
            <type name="AppLaunchContext" c:type="GdkAppLaunchContext*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkapplaunchcontext.c"
                 line="197">a timestamp</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gio.AppLaunchContext" c:type="GAppLaunchContext"/>
      </field>
      <field name="priv">
        <type name="AppLaunchContextPrivate"
              c:type="GdkAppLaunchContextPrivate*"/>
      </field>
    </class>
    <record name="AppLaunchContextClass"
            c:type="GdkAppLaunchContextClass"
            glib:is-gtype-struct-for="AppLaunchContext">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="56"/>
      <field name="parent_class">
        <type name="Gio.AppLaunchContextClass"
              c:type="GAppLaunchContextClass"/>
      </field>
    </record>
    <record name="AppLaunchContextPrivate"
            c:type="GdkAppLaunchContextPrivate"
            disguised="1">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="44"/>
    </record>
    <record name="Atom" c:type="GdkAtom" disguised="1">
      <source-position filename="gdk/gdktypes.h" line="80"/>
      <method name="name" c:identifier="gdk_atom_name">
        <source-position filename="gdk/gdkproperty.h" line="48"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="atom" transfer-ownership="none">
            <type name="Atom" c:type="GdkAtom"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="intern"
                c:identifier="gdk_atom_intern"
                introspectable="0">
        <source-position filename="gdk/gdkproperty.h" line="45"/>
        <return-value>
          <type name="Atom" c:type="GdkAtom"/>
        </return-value>
        <parameters>
          <parameter name="atom_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="only_if_exists" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="intern_static_string"
                c:identifier="gdk_atom_intern_static_string"
                version="2.10"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkproperty-x11.c"
             line="403">Finds or creates an atom corresponding to a given string.

Note that this function is identical to gdk_atom_intern() except
that if a new #GdkAtom is created the string itself is used rather
than a copy. This saves memory, but can only be used if the string
will &lt;emphasis&gt;always&lt;/emphasis&gt; exist. It can be used with statically
allocated strings in the main program, but not with statically
allocated memory in dynamically loaded modules, if you expect to
ever unload the module again (e.g. do not use this function in
GTK+ theme engines).</doc>
        <source-position filename="gdk/gdkproperty.h" line="47"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkproperty-x11.c"
               line="418">the atom corresponding to @atom_name</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </return-value>
        <parameters>
          <parameter name="atom_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkproperty-x11.c"
                 line="405">a static string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="AxisUse" c:type="GdkAxisUse">
      <source-position filename="gdk/gdkinput.h" line="83"/>
      <member name="ignore" value="0" c:identifier="GDK_AXIS_IGNORE">
      </member>
      <member name="x" value="1" c:identifier="GDK_AXIS_X">
      </member>
      <member name="y" value="2" c:identifier="GDK_AXIS_Y">
      </member>
      <member name="pressure" value="3" c:identifier="GDK_AXIS_PRESSURE">
      </member>
      <member name="xtilt" value="4" c:identifier="GDK_AXIS_XTILT">
      </member>
      <member name="ytilt" value="5" c:identifier="GDK_AXIS_YTILT">
      </member>
      <member name="wheel" value="6" c:identifier="GDK_AXIS_WHEEL">
      </member>
      <member name="last" value="7" c:identifier="GDK_AXIS_LAST">
      </member>
    </enumeration>
    <record name="Bitmap" c:type="GdkBitmap">
      <source-position filename="gdk/gdktypes.h" line="112"/>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <function name="create_from_data"
                c:identifier="gdk_bitmap_create_from_data"
                introspectable="0">
        <source-position filename="gdk/gdkpixmap.h" line="74"/>
        <return-value>
          <type name="Bitmap" c:type="GdkBitmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="ByteOrder" c:type="GdkByteOrder">
      <source-position filename="gdk/gdktypes.h" line="122"/>
      <member name="lsb_first" value="0" c:identifier="GDK_LSB_FIRST">
      </member>
      <member name="msb_first" value="1" c:identifier="GDK_MSB_FIRST">
      </member>
    </enumeration>
    <function-macro name="COLORMAP"
                    c:identifier="GDK_COLORMAP"
                    introspectable="0">
      <source-position filename="gdk/gdkcolor.h" line="60"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLORMAP_CLASS"
                    c:identifier="GDK_COLORMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkcolor.h" line="61"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLORMAP_GET_CLASS"
                    c:identifier="GDK_COLORMAP_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkcolor.h" line="64"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="CURRENT_TIME" value="0" c:type="GDK_CURRENT_TIME">
      <source-position filename="gdk/gdktypes.h" line="58"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <enumeration name="CapStyle" c:type="GdkCapStyle">
      <source-position filename="gdk/gdkgc.h" line="54"/>
      <member name="not_last" value="0" c:identifier="GDK_CAP_NOT_LAST">
      </member>
      <member name="butt" value="1" c:identifier="GDK_CAP_BUTT">
      </member>
      <member name="round" value="2" c:identifier="GDK_CAP_ROUND">
      </member>
      <member name="projecting" value="3" c:identifier="GDK_CAP_PROJECTING">
      </member>
    </enumeration>
    <record name="Color"
            c:type="GdkColor"
            glib:type-name="GdkColor"
            glib:get-type="gdk_color_get_type"
            c:symbol-prefix="color">
      <source-position filename="gdk/gdkcolor.h" line="52"/>
      <field name="pixel" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="red" writable="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="green" writable="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="blue" writable="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <method name="copy" c:identifier="gdk_color_copy">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="110">Makes a copy of a color structure. The result
must be freed using gdk_color_free().</doc>
        <source-position filename="gdk/gdkcolor.h" line="134"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="117">a copy of @color.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="112">a #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="gdk_color_equal">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="285">Compares two colors.</doc>
        <source-position filename="gdk/gdkcolor.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="292">%TRUE if the two colors compare equal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="colora" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="287">a #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </instance-parameter>
          <parameter name="colorb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="288">another #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gdk_color_free">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="131">Frees a color structure created with
gdk_color_copy().</doc>
        <source-position filename="gdk/gdkcolor.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="133">a #GdkColor.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hash" c:identifier="gdk_color_hash">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="267">A hash function suitable for using for a hash
table that stores #GdkColor's.</doc>
        <source-position filename="gdk/gdkcolor.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="274">The hash function applied to @colora</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="colora" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="269">a #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="gdk_color_to_string"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="356">Returns a textual specification of @color in the hexadecimal form
&lt;literal&gt;&amp;num;rrrrggggbbbb&lt;/literal&gt;, where &lt;literal&gt;r&lt;/literal&gt;,
&lt;literal&gt;g&lt;/literal&gt; and &lt;literal&gt;b&lt;/literal&gt; are hex digits
representing the red, green and blue components respectively.</doc>
        <source-position filename="gdk/gdkcolor.h" line="141"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="365">a newly-allocated text string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="358">a #GdkColor</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="alloc"
                c:identifier="gdk_color_alloc"
                deprecated="1"
                deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="244">Allocates a single color from a colormap.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_colormap_alloc_color() instead.</doc-deprecated>
        <source-position filename="gdk/gdkcolor.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="252">%TRUE if the allocation succeeded.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="246">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="247">The color to allocate. On return, the
   &lt;structfield&gt;pixel&lt;/structfield&gt; field will be filled in.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </function>
      <function name="black" c:identifier="gdk_color_black">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="178">Returns the black color for a given colormap. The resulting
value has already been allocated.</doc>
        <source-position filename="gdk/gdkcolor.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="186">%TRUE if the allocation succeeded.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="180">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="181">the location to store the color.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </function>
      <function name="change" c:identifier="gdk_color_change">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="1211">Changes the value of a color that has already
been allocated. If @colormap is not a private
colormap, then the color must have been allocated
using gdk_colormap_alloc_colors() with the
@writeable set to %TRUE.</doc>
        <source-position filename="gdk/gdkcolor.h" line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="1224">%TRUE if the color was successfully changed.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1213">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1214">a #GdkColor, with the color to change
in the &lt;structfield&gt;pixel&lt;/structfield&gt; field,
and the new value in the remaining fields.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </function>
      <function name="parse" c:identifier="gdk_color_parse">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="318">Parses a textual specification of a color and fill in the
&lt;structfield&gt;red&lt;/structfield&gt;, &lt;structfield&gt;green&lt;/structfield&gt;,
and &lt;structfield&gt;blue&lt;/structfield&gt; fields of a #GdkColor
structure. The color is &lt;emphasis&gt;not&lt;/emphasis&gt; allocated, you
must call gdk_colormap_alloc_color() yourself. The string can
either one of a large set of standard names. (Taken from the X11
&lt;filename&gt;rgb.txt&lt;/filename&gt; file), or it can be a hex value in the
form '&amp;num;rgb' '&amp;num;rrggbb' '&amp;num;rrrgggbbb' or
'&amp;num;rrrrggggbbbb' where 'r', 'g' and 'b' are hex digits of the
red, green, and blue components of the color, respectively. (White
in the four forms is '&amp;num;fff' '&amp;num;ffffff' '&amp;num;fffffffff' and
'&amp;num;ffffffffffff')</doc>
        <source-position filename="gdk/gdkcolor.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="336">%TRUE if the parsing succeeded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="spec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="320">the string specifying the color.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="321">the #GdkColor to fill in</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </function>
      <function name="white" c:identifier="gdk_color_white">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="146">Returns the white color for a given colormap. The resulting
value has already allocated been allocated.</doc>
        <source-position filename="gdk/gdkcolor.h" line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="154">%TRUE if the allocation succeeded.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="148">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="149">the location to store the color.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="Colormap"
           c:symbol-prefix="colormap"
           c:type="GdkColormap"
           parent="GObject.Object"
           glib:type-name="GdkColormap"
           glib:get-type="gdk_colormap_get_type"
           glib:type-struct="ColormapClass">
      <source-position filename="gdk/gdkcolor.h" line="87"/>
      <constructor name="new" c:identifier="gdk_colormap_new">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="122">Creates a new colormap for the given visual.</doc>
        <source-position filename="gdk/gdkcolor.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="131">the new #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="124">a #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </parameter>
          <parameter name="allocate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="125">if %TRUE, the newly created colormap will be
a private colormap, and all colors in it will be
allocated for the applications use.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_system"
                c:identifier="gdk_colormap_get_system"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="383">Gets the system's default colormap for the default screen. (See
gdk_colormap_get_system_for_screen ())</doc>
        <source-position filename="gdk/gdkcolor.h" line="100"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="389">the default colormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
      </function>
      <function name="get_system_size"
                c:identifier="gdk_colormap_get_system_size">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="411">Returns the size of the system's default colormap.
(See the description of struct #GdkColormap for an
explanation of the size of a colormap.)</doc>
        <source-position filename="gdk/gdkcolor.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="418">the size of the system's default colormap.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <method name="alloc_color" c:identifier="gdk_colormap_alloc_color">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="214">Allocates a single color from a colormap.</doc>
        <source-position filename="gdk/gdkcolor.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="228">%TRUE if the allocation succeeded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="216">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="217">the color to allocate. On return the
   &lt;structfield&gt;pixel&lt;/structfield&gt; field will be
   filled in if allocation succeeds.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
          <parameter name="writeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="220">If %TRUE, the color is allocated writeable
   (their values can later be changed using gdk_color_change()).
   Writeable colors cannot be shared between applications.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="best_match" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="223">If %TRUE, GDK will attempt to do matching against
   existing colors if the color cannot be allocated as requested.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="alloc_colors" c:identifier="gdk_colormap_alloc_colors">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="1036">Allocates colors from a colormap.</doc>
        <source-position filename="gdk/gdkcolor.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="1053">The number of colors that were not successfully
allocated.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1038">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
          <parameter name="colors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1039">The color values to allocate. On return, the pixel
   values for allocated colors will be filled in.</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
          <parameter name="n_colors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1041">The number of colors in @colors.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="writeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1042">If %TRUE, the colors are allocated writeable
   (their values can later be changed using gdk_color_change()).
   Writeable colors cannot be shared between applications.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="best_match" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1045">If %TRUE, GDK will attempt to do matching against
   existing colors if the colors cannot be allocated as requested.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="success" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1047">An array of length @ncolors. On return, this
  indicates whether the corresponding color in @colors was
  successfully allocated or not.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="change" c:identifier="gdk_colormap_change">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="427">Changes the value of the first @ncolors in a private colormap
to match the values in the &lt;structfield&gt;colors&lt;/structfield&gt;
array in the colormap. This function is obsolete and
should not be used. See gdk_color_change().</doc>
        <source-position filename="gdk/gdkcolor.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="429">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
          <parameter name="ncolors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="430">the number of colors to change.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_colors" c:identifier="gdk_colormap_free_colors">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="643">Frees previously allocated colors.</doc>
        <source-position filename="gdk/gdkcolor.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="645">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
          <parameter name="colors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="646">the colors to free.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="n_colors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="647">the number of colors in @colors.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_colormap_get_screen"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="1491">Gets the screen for which this colormap was created.</doc>
        <source-position filename="gdk/gdkcolor.h" line="103"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="1497">the screen for which this colormap was created.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1493">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visual"
              c:identifier="gdk_colormap_get_visual"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="66">Returns the visual for which a given colormap was created.</doc>
        <source-position filename="gdk/gdkcolor.h" line="132"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="72">the visual of the colormap.</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="68">a #GdkColormap.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="query_color" c:identifier="gdk_colormap_query_color">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="1143">Locates the RGB color in @colormap corresponding to the given
hardware pixel @pixel. @pixel must be a valid pixel in the
colormap; it's a programmer error to call this function with a
pixel which is not in the colormap. Hardware pixels are normally
obtained from gdk_colormap_alloc_colors(), or from a #GdkImage. (A
#GdkImage contains image data in hardware format, a #GdkPixbuf
contains image data in a canonical 24-bit RGB format.)

This function is rarely useful; it's used for example to
implement the eyedropper feature in #GtkColorSelection.</doc>
        <source-position filename="gdk/gdkcolor.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1145">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
          <parameter name="pixel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1146">pixel value in hardware display format</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="1147">#GdkColor with red, green, blue fields initialized</doc>
            <type name="Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_colormap_ref"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="35">Deprecated function; use g_object_ref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkcolor.h" line="95"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="41">the colormap</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="37">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gdk_colormap_unref"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="51">Deprecated function; use g_object_unref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkcolor.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcolor.c"
                 line="53">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="size">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="colors">
        <type name="Color" c:type="GdkColor*"/>
      </field>
      <field name="visual" readable="0" private="1">
        <type name="Visual" c:type="GdkVisual*"/>
      </field>
      <field name="windowing_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="ColormapClass"
            c:type="GdkColormapClass"
            glib:is-gtype-struct-for="Colormap">
      <source-position filename="gdk/gdkcolor.h" line="87"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="CrossingMode" c:type="GdkCrossingMode">
      <source-position filename="gdk/gdkevents.h" line="233"/>
      <member name="normal" value="0" c:identifier="GDK_CROSSING_NORMAL">
      </member>
      <member name="grab" value="1" c:identifier="GDK_CROSSING_GRAB">
      </member>
      <member name="ungrab" value="2" c:identifier="GDK_CROSSING_UNGRAB">
      </member>
      <member name="gtk_grab" value="3" c:identifier="GDK_CROSSING_GTK_GRAB">
      </member>
      <member name="gtk_ungrab"
              value="4"
              c:identifier="GDK_CROSSING_GTK_UNGRAB">
      </member>
      <member name="state_changed"
              value="5"
              c:identifier="GDK_CROSSING_STATE_CHANGED">
      </member>
    </enumeration>
    <record name="Cursor"
            c:type="GdkCursor"
            glib:type-name="GdkCursor"
            glib:get-type="gdk_cursor_get_type"
            c:symbol-prefix="cursor">
      <source-position filename="gdk/gdkcursor.h" line="132"/>
      <field name="type" writable="1">
        <type name="CursorType" c:type="GdkCursorType"/>
      </field>
      <field name="ref_count" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <constructor name="new" c:identifier="gdk_cursor_new">
        <doc xml:space="preserve"
             filename="gdk/gdkcursor.c"
             line="84">Creates a new cursor from the set of builtin cursors for the default display.
See gdk_cursor_new_for_display().

To make the cursor invisible, use %GDK_BLANK_CURSOR.</doc>
        <source-position filename="gdk/gdkcursor.h" line="142"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkcursor.c"
               line="93">a new #GdkCursor</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <parameter name="cursor_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcursor.c"
                 line="86">cursor to create</doc>
            <type name="CursorType" c:type="GdkCursorType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_display"
                   c:identifier="gdk_cursor_new_for_display"
                   version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="187">Creates a new cursor from the set of builtin cursors.
Some useful ones are:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;
 &lt;inlinegraphic format="PNG" fileref="right_ptr.png"&gt;&lt;/inlinegraphic&gt; #GDK_RIGHT_PTR (right-facing arrow)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
 &lt;inlinegraphic format="PNG" fileref="crosshair.png"&gt;&lt;/inlinegraphic&gt; #GDK_CROSSHAIR (crosshair)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
 &lt;inlinegraphic format="PNG" fileref="xterm.png"&gt;&lt;/inlinegraphic&gt; #GDK_XTERM (I-beam)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="watch.png"&gt;&lt;/inlinegraphic&gt; #GDK_WATCH (busy)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="fleur.png"&gt;&lt;/inlinegraphic&gt; #GDK_FLEUR (for moving objects)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="hand1.png"&gt;&lt;/inlinegraphic&gt; #GDK_HAND1 (a right-pointing hand)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="hand2.png"&gt;&lt;/inlinegraphic&gt; #GDK_HAND2 (a left-pointing hand)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="left_side.png"&gt;&lt;/inlinegraphic&gt; #GDK_LEFT_SIDE (resize left side)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="right_side.png"&gt;&lt;/inlinegraphic&gt; #GDK_RIGHT_SIDE (resize right side)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="top_left_corner.png"&gt;&lt;/inlinegraphic&gt; #GDK_TOP_LEFT_CORNER (resize northwest corner)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="top_right_corner.png"&gt;&lt;/inlinegraphic&gt; #GDK_TOP_RIGHT_CORNER (resize northeast corner)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="bottom_left_corner.png"&gt;&lt;/inlinegraphic&gt; #GDK_BOTTOM_LEFT_CORNER (resize southwest corner)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="bottom_right_corner.png"&gt;&lt;/inlinegraphic&gt; #GDK_BOTTOM_RIGHT_CORNER (resize southeast corner)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="top_side.png"&gt;&lt;/inlinegraphic&gt; #GDK_TOP_SIDE (resize top side)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="bottom_side.png"&gt;&lt;/inlinegraphic&gt; #GDK_BOTTOM_SIDE (resize bottom side)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="sb_h_double_arrow.png"&gt;&lt;/inlinegraphic&gt; #GDK_SB_H_DOUBLE_ARROW (move vertical splitter)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
&lt;inlinegraphic format="PNG" fileref="sb_v_double_arrow.png"&gt;&lt;/inlinegraphic&gt; #GDK_SB_V_DOUBLE_ARROW (move horizontal splitter)
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;
#GDK_BLANK_CURSOR (Blank cursor). Since 2.16
&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdk/gdkcursor.h" line="139"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="251">a new #GdkCursor</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="189">the #GdkDisplay for which the cursor will be created</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="cursor_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="190">cursor to create</doc>
            <type name="CursorType" c:type="GdkCursorType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_name"
                   c:identifier="gdk_cursor_new_from_name"
                   version="2.8">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="840">Creates a new cursor by looking up @name in the current cursor
theme.</doc>
        <source-position filename="gdk/gdkcursor.h" line="157"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="848">a new #GdkCursor, or %NULL if there is no cursor with
  the given name</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="842">the #GdkDisplay for which the cursor will be created</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="843">the name of the cursor</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_pixbuf"
                   c:identifier="gdk_cursor_new_from_pixbuf"
                   version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="747">Creates a new cursor from a pixbuf.

Not all GDK backends support RGBA cursors. If they are not
supported, a monochrome approximation will be displayed.
The functions gdk_display_supports_cursor_alpha() and
gdk_display_supports_cursor_color() can be used to determine
whether RGBA cursors are supported;
gdk_display_get_default_cursor_size() and
gdk_display_get_maximal_cursor_size() give information about
cursor sizes.

If @x or @y are &lt;literal&gt;-1&lt;/literal&gt;, the pixbuf must have
options named "x_hot" and "y_hot", resp., containing
integer values between %0 and the width resp. height of
the pixbuf. (Since: 3.0)

On the X backend, support for RGBA cursors requires a
sufficently new version of the X Render extension.</doc>
        <source-position filename="gdk/gdkcursor.h" line="150"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="773">a new #GdkCursor.</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="749">the #GdkDisplay for which the cursor will be created</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="750">the #GdkPixbuf containing the cursor image</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="751">the horizontal offset of the 'hotspot' of the cursor.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="752">the vertical offset of the 'hotspot' of the cursor.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_pixmap"
                   c:identifier="gdk_cursor_new_from_pixmap">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="306">Creates a new cursor from a given pixmap and mask. Both the pixmap and mask
must have a depth of 1 (i.e. each pixel has only 2 values - on or off).
The standard cursor size is 16 by 16 pixels. You can create a bitmap
from inline data as in the below example.

&lt;example&gt;&lt;title&gt;Creating a custom cursor&lt;/title&gt;
&lt;programlisting&gt;
/&lt;!-- --&gt;* This data is in X bitmap format, and can be created with the 'bitmap'
   utility. *&lt;!-- --&gt;/
&amp;num;define cursor1_width 16
&amp;num;define cursor1_height 16
static unsigned char cursor1_bits[] = {
  0x80, 0x01, 0x40, 0x02, 0x20, 0x04, 0x10, 0x08, 0x08, 0x10, 0x04, 0x20,
  0x82, 0x41, 0x41, 0x82, 0x41, 0x82, 0x82, 0x41, 0x04, 0x20, 0x08, 0x10,
  0x10, 0x08, 0x20, 0x04, 0x40, 0x02, 0x80, 0x01};
 
static unsigned char cursor1mask_bits[] = {
  0x80, 0x01, 0xc0, 0x03, 0x60, 0x06, 0x30, 0x0c, 0x18, 0x18, 0x8c, 0x31,
  0xc6, 0x63, 0x63, 0xc6, 0x63, 0xc6, 0xc6, 0x63, 0x8c, 0x31, 0x18, 0x18,
  0x30, 0x0c, 0x60, 0x06, 0xc0, 0x03, 0x80, 0x01};
 
 
 GdkCursor *cursor;
 GdkPixmap *source, *mask;
 GdkColor fg = { 0, 65535, 0, 0 }; /&lt;!-- --&gt;* Red. *&lt;!-- --&gt;/
 GdkColor bg = { 0, 0, 0, 65535 }; /&lt;!-- --&gt;* Blue. *&lt;!-- --&gt;/
 
 
 source = gdk_bitmap_create_from_data (NULL, cursor1_bits,
                                       cursor1_width, cursor1_height);
 mask = gdk_bitmap_create_from_data (NULL, cursor1mask_bits,
                                     cursor1_width, cursor1_height);
 cursor = gdk_cursor_new_from_pixmap (source, mask, &amp;amp;fg, &amp;amp;bg, 8, 8);
 g_object_unref (source);
 g_object_unref (mask);
 
 
 gdk_window_set_cursor (widget-&gt;window, cursor);
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
        <source-position filename="gdk/gdkcursor.h" line="144"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="359">a new #GdkCursor.</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="308">the pixmap specifying the cursor.</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="309">the pixmap specifying the mask, which must be the same size as
   @source.</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
          <parameter name="fg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="311">the foreground color, used for the bits in the source which are 1.
   The color does not have to be allocated first.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="bg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="313">the background color, used for the bits in the source which are 0.
   The color does not have to be allocated first.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="315">the horizontal offset of the 'hotspot' of the cursor.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="316">the vertical offset of the 'hotspot' of the cursor.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_cursor_type"
              c:identifier="gdk_cursor_get_cursor_type"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkcursor.c"
             line="101">Returns the cursor type for this cursor.</doc>
        <source-position filename="gdk/gdkcursor.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcursor.c"
               line="107">a #GdkCursorType</doc>
          <type name="CursorType" c:type="GdkCursorType"/>
        </return-value>
        <parameters>
          <instance-parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcursor.c"
                 line="103">a #GdkCursor</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gdk_cursor_get_display"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="460">Returns the display on which the #GdkCursor is defined.</doc>
        <source-position filename="gdk/gdkcursor.h" line="154"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="466">the #GdkDisplay associated to @cursor</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="462">a #GdkCursor.</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="gdk_cursor_get_image"
              version="2.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="481">Returns a #GdkPixbuf with the image used to display the cursor.

Note that depending on the capabilities of the windowing system and
on the cursor, GDK may not be able to obtain the image data. In this
case, %NULL is returned.</doc>
        <source-position filename="gdk/gdkcursor.h" line="159"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="491">a #GdkPixbuf representing @cursor, or %NULL</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="483">a #GdkCursor</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="gdk_cursor_ref">
        <doc xml:space="preserve"
             filename="gdk/gdkcursor.c"
             line="45">Adds a reference to @cursor.</doc>
        <source-position filename="gdk/gdkcursor.h" line="155"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkcursor.c"
               line="51">Same @cursor that was passed in</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcursor.c"
                 line="47">a #GdkCursor</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="gdk_cursor_unref">
        <doc xml:space="preserve"
             filename="gdk/gdkcursor.c"
             line="64">Removes a reference from @cursor, deallocating the cursor
if no references remain.</doc>
        <source-position filename="gdk/gdkcursor.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkcursor.c"
                 line="66">a #GdkCursor</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="CursorType" c:type="GdkCursorType">
      <source-position filename="gdk/gdkcursor.h" line="125"/>
      <member name="x_cursor" value="0" c:identifier="GDK_X_CURSOR">
      </member>
      <member name="arrow" value="2" c:identifier="GDK_ARROW">
      </member>
      <member name="based_arrow_down"
              value="4"
              c:identifier="GDK_BASED_ARROW_DOWN">
      </member>
      <member name="based_arrow_up"
              value="6"
              c:identifier="GDK_BASED_ARROW_UP">
      </member>
      <member name="boat" value="8" c:identifier="GDK_BOAT">
      </member>
      <member name="bogosity" value="10" c:identifier="GDK_BOGOSITY">
      </member>
      <member name="bottom_left_corner"
              value="12"
              c:identifier="GDK_BOTTOM_LEFT_CORNER">
      </member>
      <member name="bottom_right_corner"
              value="14"
              c:identifier="GDK_BOTTOM_RIGHT_CORNER">
      </member>
      <member name="bottom_side" value="16" c:identifier="GDK_BOTTOM_SIDE">
      </member>
      <member name="bottom_tee" value="18" c:identifier="GDK_BOTTOM_TEE">
      </member>
      <member name="box_spiral" value="20" c:identifier="GDK_BOX_SPIRAL">
      </member>
      <member name="center_ptr" value="22" c:identifier="GDK_CENTER_PTR">
      </member>
      <member name="circle" value="24" c:identifier="GDK_CIRCLE">
      </member>
      <member name="clock" value="26" c:identifier="GDK_CLOCK">
      </member>
      <member name="coffee_mug" value="28" c:identifier="GDK_COFFEE_MUG">
      </member>
      <member name="cross" value="30" c:identifier="GDK_CROSS">
      </member>
      <member name="cross_reverse" value="32" c:identifier="GDK_CROSS_REVERSE">
      </member>
      <member name="crosshair" value="34" c:identifier="GDK_CROSSHAIR">
      </member>
      <member name="diamond_cross" value="36" c:identifier="GDK_DIAMOND_CROSS">
      </member>
      <member name="dot" value="38" c:identifier="GDK_DOT">
      </member>
      <member name="dotbox" value="40" c:identifier="GDK_DOTBOX">
      </member>
      <member name="double_arrow" value="42" c:identifier="GDK_DOUBLE_ARROW">
      </member>
      <member name="draft_large" value="44" c:identifier="GDK_DRAFT_LARGE">
      </member>
      <member name="draft_small" value="46" c:identifier="GDK_DRAFT_SMALL">
      </member>
      <member name="draped_box" value="48" c:identifier="GDK_DRAPED_BOX">
      </member>
      <member name="exchange" value="50" c:identifier="GDK_EXCHANGE">
      </member>
      <member name="fleur" value="52" c:identifier="GDK_FLEUR">
      </member>
      <member name="gobbler" value="54" c:identifier="GDK_GOBBLER">
      </member>
      <member name="gumby" value="56" c:identifier="GDK_GUMBY">
      </member>
      <member name="hand1" value="58" c:identifier="GDK_HAND1">
      </member>
      <member name="hand2" value="60" c:identifier="GDK_HAND2">
      </member>
      <member name="heart" value="62" c:identifier="GDK_HEART">
      </member>
      <member name="icon" value="64" c:identifier="GDK_ICON">
      </member>
      <member name="iron_cross" value="66" c:identifier="GDK_IRON_CROSS">
      </member>
      <member name="left_ptr" value="68" c:identifier="GDK_LEFT_PTR">
      </member>
      <member name="left_side" value="70" c:identifier="GDK_LEFT_SIDE">
      </member>
      <member name="left_tee" value="72" c:identifier="GDK_LEFT_TEE">
      </member>
      <member name="leftbutton" value="74" c:identifier="GDK_LEFTBUTTON">
      </member>
      <member name="ll_angle" value="76" c:identifier="GDK_LL_ANGLE">
      </member>
      <member name="lr_angle" value="78" c:identifier="GDK_LR_ANGLE">
      </member>
      <member name="man" value="80" c:identifier="GDK_MAN">
      </member>
      <member name="middlebutton" value="82" c:identifier="GDK_MIDDLEBUTTON">
      </member>
      <member name="mouse" value="84" c:identifier="GDK_MOUSE">
      </member>
      <member name="pencil" value="86" c:identifier="GDK_PENCIL">
      </member>
      <member name="pirate" value="88" c:identifier="GDK_PIRATE">
      </member>
      <member name="plus" value="90" c:identifier="GDK_PLUS">
      </member>
      <member name="question_arrow"
              value="92"
              c:identifier="GDK_QUESTION_ARROW">
      </member>
      <member name="right_ptr" value="94" c:identifier="GDK_RIGHT_PTR">
      </member>
      <member name="right_side" value="96" c:identifier="GDK_RIGHT_SIDE">
      </member>
      <member name="right_tee" value="98" c:identifier="GDK_RIGHT_TEE">
      </member>
      <member name="rightbutton" value="100" c:identifier="GDK_RIGHTBUTTON">
      </member>
      <member name="rtl_logo" value="102" c:identifier="GDK_RTL_LOGO">
      </member>
      <member name="sailboat" value="104" c:identifier="GDK_SAILBOAT">
      </member>
      <member name="sb_down_arrow"
              value="106"
              c:identifier="GDK_SB_DOWN_ARROW">
      </member>
      <member name="sb_h_double_arrow"
              value="108"
              c:identifier="GDK_SB_H_DOUBLE_ARROW">
      </member>
      <member name="sb_left_arrow"
              value="110"
              c:identifier="GDK_SB_LEFT_ARROW">
      </member>
      <member name="sb_right_arrow"
              value="112"
              c:identifier="GDK_SB_RIGHT_ARROW">
      </member>
      <member name="sb_up_arrow" value="114" c:identifier="GDK_SB_UP_ARROW">
      </member>
      <member name="sb_v_double_arrow"
              value="116"
              c:identifier="GDK_SB_V_DOUBLE_ARROW">
      </member>
      <member name="shuttle" value="118" c:identifier="GDK_SHUTTLE">
      </member>
      <member name="sizing" value="120" c:identifier="GDK_SIZING">
      </member>
      <member name="spider" value="122" c:identifier="GDK_SPIDER">
      </member>
      <member name="spraycan" value="124" c:identifier="GDK_SPRAYCAN">
      </member>
      <member name="star" value="126" c:identifier="GDK_STAR">
      </member>
      <member name="target" value="128" c:identifier="GDK_TARGET">
      </member>
      <member name="tcross" value="130" c:identifier="GDK_TCROSS">
      </member>
      <member name="top_left_arrow"
              value="132"
              c:identifier="GDK_TOP_LEFT_ARROW">
      </member>
      <member name="top_left_corner"
              value="134"
              c:identifier="GDK_TOP_LEFT_CORNER">
      </member>
      <member name="top_right_corner"
              value="136"
              c:identifier="GDK_TOP_RIGHT_CORNER">
      </member>
      <member name="top_side" value="138" c:identifier="GDK_TOP_SIDE">
      </member>
      <member name="top_tee" value="140" c:identifier="GDK_TOP_TEE">
      </member>
      <member name="trek" value="142" c:identifier="GDK_TREK">
      </member>
      <member name="ul_angle" value="144" c:identifier="GDK_UL_ANGLE">
      </member>
      <member name="umbrella" value="146" c:identifier="GDK_UMBRELLA">
      </member>
      <member name="ur_angle" value="148" c:identifier="GDK_UR_ANGLE">
      </member>
      <member name="watch" value="150" c:identifier="GDK_WATCH">
      </member>
      <member name="xterm" value="152" c:identifier="GDK_XTERM">
      </member>
      <member name="last_cursor" value="153" c:identifier="GDK_LAST_CURSOR">
      </member>
      <member name="blank_cursor" value="-2" c:identifier="GDK_BLANK_CURSOR">
      </member>
      <member name="cursor_is_pixmap"
              value="-1"
              c:identifier="GDK_CURSOR_IS_PIXMAP">
      </member>
    </enumeration>
    <function-macro name="DEVICE" c:identifier="GDK_DEVICE" introspectable="0">
      <source-position filename="gdk/gdkinput.h" line="39"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_CLASS"
                    c:identifier="GDK_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkinput.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_GET_CLASS"
                    c:identifier="GDK_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkinput.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_CLASS"
                    c:identifier="GDK_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplay.h" line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_GET_CLASS"
                    c:identifier="GDK_DISPLAY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplay.h" line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_MANAGER"
                    c:identifier="GDK_DISPLAY_MANAGER"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplaymanager.h" line="43"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_MANAGER_CLASS"
                    c:identifier="GDK_DISPLAY_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplaymanager.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_MANAGER_GET_CLASS"
                    c:identifier="GDK_DISPLAY_MANAGER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplaymanager.h" line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISPLAY_OBJECT"
                    c:identifier="GDK_DISPLAY_OBJECT"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplay.h" line="40"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_CONTEXT"
                    c:identifier="GDK_DRAG_CONTEXT"
                    introspectable="0">
      <source-position filename="gdk/gdkdnd.h" line="69"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_CONTEXT_CLASS"
                    c:identifier="GDK_DRAG_CONTEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdnd.h" line="70"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_CONTEXT_GET_CLASS"
                    c:identifier="GDK_DRAG_CONTEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdnd.h" line="73"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE"
                    c:identifier="GDK_DRAWABLE"
                    introspectable="0">
      <source-position filename="gdk/gdkdrawable.h" line="47"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_CLASS"
                    c:identifier="GDK_DRAWABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdrawable.h" line="48"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_GET_CLASS"
                    c:identifier="GDK_DRAWABLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdrawable.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <callback name="DestroyNotify" c:type="GdkDestroyNotify">
      <source-position filename="gdk/gdktypes.h" line="190"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="GdkDevice"
           parent="GObject.Object"
           glib:type-name="GdkDevice"
           glib:get-type="gdk_device_get_type"
           glib:type-struct="DeviceClass">
      <source-position filename="gdk/gdkinput.h" line="48"/>
      <function name="free_history" c:identifier="gdk_device_free_history">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="515">Frees an array of #GdkTimeCoord that was returned by gdk_device_get_history().</doc>
        <source-position filename="gdk/gdkinput.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="events"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="517">an array of #GdkTimeCoord.</doc>
            <type name="TimeCoord" c:type="GdkTimeCoord**"/>
          </parameter>
          <parameter name="n_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="518">the length of the array.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_core_pointer"
                c:identifier="gdk_device_get_core_pointer"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="391">Returns the core pointer device for the default display.</doc>
        <source-position filename="gdk/gdkinput.h" line="187"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="396">the core pointer device; this is owned by the
  display and should not be freed.</doc>
          <type name="Device" c:type="GdkDevice*"/>
        </return-value>
      </function>
      <method name="get_axis" c:identifier="gdk_device_get_axis">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="642">Interprets an array of double as axis values for a given device,
and locates the value in the array for a given axis use.</doc>
        <source-position filename="gdk/gdkinput.h" line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="652">%TRUE if the given axis use was found, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="644">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="axes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="645">pointer to an array of axes</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="use" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="646">the use to look for</doc>
            <type name="AxisUse" c:type="GdkAxisUse"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="647">location to store the found value.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_axis_use"
              c:identifier="gdk_device_get_axis_use"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="299">Returns the axis use for @index.</doc>
        <source-position filename="gdk/gdkinput.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="306">a #GdkAxisUse specifying how the axis is used.</doc>
          <type name="AxisUse" c:type="GdkAxisUse"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="301">a #GdkDevice.</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="302">the index of the axis.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_has_cursor"
              c:identifier="gdk_device_get_has_cursor"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="227">Determines whether the pointer follows device motion.</doc>
        <source-position filename="gdk/gdkinput.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="233">%TRUE if the pointer follows device motion</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="229">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_history" c:identifier="gdk_device_get_history">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="401">Obtains the motion history for a device; given a starting and
ending timestamp, return all events in the motion history for
the device in the given range of time. Some windowing systems
do not support motion history, in which case, %FALSE will
be returned. (This is not distinguishable from the case where
motion history is supported and no events were found.)</doc>
        <source-position filename="gdk/gdkinput.h" line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="417">%TRUE if the windowing system supports motion history and
 at least one event was found.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="403">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="404">the window with respect to which which the event coordinates will be reported</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="405">starting timestamp for range of events to return</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="406">ending timestamp for the range of events to return</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="events"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="407">location to store a newly-allocated array of #GdkTimeCoord, or %NULL</doc>
            <array length="4" zero-terminated="0" c:type="GdkTimeCoord***">
              <type name="TimeCoord" c:type="GdkTimeCoord**"/>
            </array>
          </parameter>
          <parameter name="n_events"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="408">location to store the length of @events, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_key" c:identifier="gdk_device_get_key" version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="254">If @index has a valid keyval, this function will
fill in @keyval and @modifiers with the keyval settings.</doc>
        <source-position filename="gdk/gdkinput.h" line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="256">a #GdkDevice.</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="257">the index of the macro button to get.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keyval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="258">return value for the keyval.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="259">return value for modifiers.</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mode"
              c:identifier="gdk_device_get_mode"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="209">Determines the mode of the device.</doc>
        <source-position filename="gdk/gdkinput.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="215">a #GdkInputSource</doc>
          <type name="InputMode" c:type="GdkInputMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="211">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_axes"
              c:identifier="gdk_device_get_n_axes"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="338">Gets the number of axes of a device.</doc>
        <source-position filename="gdk/gdkinput.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="344">the number of axes of @device</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="340">a #GdkDevice.</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_keys"
              c:identifier="gdk_device_get_n_keys"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="320">Gets the number of keys of a device.</doc>
        <source-position filename="gdk/gdkinput.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="326">the number of keys of @device</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="322">a #GdkDevice.</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdk_device_get_name"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="173">Determines the name of the device.</doc>
        <source-position filename="gdk/gdkinput.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="179">a name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="175">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gdk_device_get_source"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="191">Determines the type of the device.</doc>
        <source-position filename="gdk/gdkinput.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="197">a #GdkInputSource</doc>
          <type name="InputSource" c:type="GdkInputSource"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="193">a #GdkDevice</doc>
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="gdk_device_get_state">
        <source-position filename="gdk/gdkinput.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="axes" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_axis_use" c:identifier="gdk_device_set_axis_use">
        <source-position filename="gdk/gdkinput.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="use" transfer-ownership="none">
            <type name="AxisUse" c:type="GdkAxisUse"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key" c:identifier="gdk_device_set_key">
        <source-position filename="gdk/gdkinput.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keyval" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <type name="ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode" c:identifier="gdk_device_set_mode">
        <source-position filename="gdk/gdkinput.h" line="151"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="InputMode" c:type="GdkInputMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source" c:identifier="gdk_device_set_source">
        <source-position filename="gdk/gdkinput.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GdkDevice*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="InputSource" c:type="GdkInputSource"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="source">
        <type name="InputSource" c:type="GdkInputSource"/>
      </field>
      <field name="mode">
        <type name="InputMode" c:type="GdkInputMode"/>
      </field>
      <field name="has_cursor">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="num_axes">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="axes">
        <type name="DeviceAxis" c:type="GdkDeviceAxis*"/>
      </field>
      <field name="num_keys">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="keys">
        <type name="DeviceKey" c:type="GdkDeviceKey*"/>
      </field>
    </class>
    <record name="DeviceAxis" c:type="GdkDeviceAxis">
      <source-position filename="gdk/gdkinput.h" line="96"/>
      <field name="use" writable="1">
        <type name="AxisUse" c:type="GdkAxisUse"/>
      </field>
      <field name="min" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="max" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
    </record>
    <record name="DeviceClass"
            c:type="GdkDeviceClass"
            disguised="1"
            glib:is-gtype-struct-for="Device">
      <source-position filename="gdk/gdkinput.h" line="48"/>
    </record>
    <record name="DeviceKey" c:type="GdkDeviceKey">
      <source-position filename="gdk/gdkinput.h" line="89"/>
      <field name="keyval" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="modifiers" writable="1">
        <type name="ModifierType" c:type="GdkModifierType"/>
      </field>
    </record>
    <class name="Display"
           c:symbol-prefix="display"
           c:type="GdkDisplay"
           parent="GObject.Object"
           glib:type-name="GdkDisplay"
           glib:get-type="gdk_display_get_type"
           glib:type-struct="DisplayClass">
      <source-position filename="gdk/gdkdisplay.h" line="122"/>
      <function name="get_default"
                c:identifier="gdk_display_get_default"
                version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="188">Gets the default #GdkDisplay. This is a convenience
function for
&lt;literal&gt;gdk_display_manager_get_default_display (gdk_display_manager_get ())&lt;/literal&gt;.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplaymanager.c"
               line="195">a #GdkDisplay, or %NULL if there is no default
  display.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
      </function>
      <function name="open"
                c:identifier="gdk_display_open"
                version="2.2"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="139">Opens a display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="142"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="142">a #GdkDisplay, or %NULL if the display
 could not be opened.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="141">the name of the display to open</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="open_default_libgtk_only"
                c:identifier="gdk_display_open_default_libgtk_only"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="301">Opens the default display specified by command line arguments or
environment variables, sets it as the default display, and returns
it.  gdk_parse_args must have been called first. If the default
display has previously been set, simply returns that. An internal
function that should not be used by applications.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="201"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="310">the default display, if it could be opened,
  otherwise %NULL.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
      </function>
      <virtual-method name="closed">
        <source-position filename="gdk/gdkdisplay.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="is_error" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_default_screen"
                      invoker="get_default_screen"
                      version="2.2"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="558">Get the default #GdkScreen for @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="116"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="564">the default #GdkScreen object for @display</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="560">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_display_name">
        <source-position filename="gdk/gdkdisplay.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_n_screens"
                      invoker="get_n_screens"
                      version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="519">Gets the number of screen managed by the @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="525">number of screens.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="521">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_screen"
                      invoker="get_screen"
                      version="2.2"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="537">Returns a screen object for one of the screens of the display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="114"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="544">the #GdkScreen object</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="539">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="screen_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="540">the screen number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_client_message_filter"
              c:identifier="gdk_display_add_client_message_filter"
              introspectable="0">
        <source-position filename="gdk/gdkdisplay.h" line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="message_type" transfer-ownership="none">
            <type name="Atom" c:type="GdkAtom"/>
          </parameter>
          <parameter name="func" transfer-ownership="none" closure="2">
            <type name="FilterFunc" c:type="GdkFilterFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="beep" c:identifier="gdk_display_beep" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="686">Emits a short beep on @display</doc>
        <source-position filename="gdk/gdkdisplay.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="688">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="gdk_display_close" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="177">Closes the connection to the windowing system for the given display,
and cleans up associated resources.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="179">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="gdk_display_flush" version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="730">Flushes any requests queued for the windowing system; this happens automatically
when the main loop blocks waiting for new events, but if your application
is drawing without returning control to the main loop, you may need
to call this function explicitely. A common case where this function
needs to be called is when an application is executing drawing commands
from a thread other than the thread where the main loop is running.

This is most useful for X11. On windowing systems where requests are
handled synchronously, this function will do nothing.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="732">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_core_pointer"
              c:identifier="gdk_display_get_core_pointer"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="405">Returns the core pointer device for the given display</doc>
        <source-position filename="gdk/gdkdisplay.h" line="181"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="411">the core pointer device; this is owned by the
  display and should not be freed.</doc>
          <type name="Device" c:type="GdkDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="407">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_cursor_size"
              c:identifier="gdk_display_get_default_cursor_size"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="938">Returns the default size to use for cursors on @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="944">the default cursor size.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="940">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_group"
              c:identifier="gdk_display_get_default_group"
              version="2.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="755">Returns the default group leader window for all toplevel windows
on @display. This window is implicitly created by GDK.
See gdk_window_set_group().</doc>
        <source-position filename="gdk/gdkdisplay.h" line="210"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="763">The default group leader window for @display</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="757">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_screen"
              c:identifier="gdk_display_get_default_screen"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="558">Get the default #GdkScreen for @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="149"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="564">the default #GdkScreen object for @display</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="560">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_event"
              c:identifier="gdk_display_get_event"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="220">Gets the next #GdkEvent to be processed for @display, fetching events from the
windowing system if necessary.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="164"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="227">the next #GdkEvent to be processed, or %NULL if no events
are pending. The returned #GdkEvent should be freed with gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="222">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maximal_cursor_size"
              c:identifier="gdk_display_get_maximal_cursor_size"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="1066">Gets the maximal size to use for cursors on @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="206"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="1068">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="1069">the return location for the maximal cursor width</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="1070">the return location for the maximal cursor height</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_screens"
              c:identifier="gdk_display_get_n_screens"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="519">Gets the number of screen managed by the @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="525">number of screens.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="521">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdk_display_get_name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="500">Gets the name of the display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="506">a string representing the display name. This string is owned
by GDK and should not be modified or freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="502">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer"
              c:identifier="gdk_display_get_pointer"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="486">Gets the current location of the pointer and the current modifier
mask for a given display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="488">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="screen"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="489">location to store the screen that the
         cursor is on, or %NULL.</doc>
            <type name="Screen" c:type="GdkScreen**"/>
          </parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="491">location to store root window X coordinate of pointer, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="492">location to store root window Y coordinate of pointer, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="493">location to store current modifier mask, or %NULL</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_display_get_screen"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="537">Returns a screen object for one of the screens of the display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="147"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="544">the #GdkScreen object</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="539">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="screen_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="540">the screen number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_window_at_pointer"
              c:identifier="gdk_display_get_window_at_pointer"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="587">Obtains the window underneath the mouse pointer, returning the location
of the pointer in that window in @win_x, @win_y for @screen. Returns %NULL
if the window under the mouse pointer is not known to GDK (for example,
belongs to another application).</doc>
        <source-position filename="gdk/gdkdisplay.h" line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="600">the window under the mouse pointer, or %NULL</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="589">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="win_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="590">return location for x coordinate of the pointer location relative
   to the window origin, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="win_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="592">return location for y coordinate of the pointer location relative
 &amp;    to the window origin, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed"
              c:identifier="gdk_display_is_closed"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="202">Finds out if the display has been closed.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="208">%TRUE if the display is closed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="204">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="keyboard_ungrab"
              c:identifier="gdk_display_keyboard_ungrab"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="656">Release any keyboard grab</doc>
        <source-position filename="gdk/gdkdisplay.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="658">a #GdkDisplay.</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="time_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="659">a timestap (e.g #GDK_CURRENT_TIME).</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_devices"
              c:identifier="gdk_display_list_devices"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="154">Returns the list of available input devices attached to @display.
The list is statically allocated and should not be freed.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="162"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkinput.c"
               line="161">a list of #GdkDevice</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkinput.c"
                 line="156">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_event"
              c:identifier="gdk_display_peek_event"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="241">Gets a copy of the first #GdkEvent in the @display's event queue, without
removing the event from the queue.  (Note that this function will
not get more events from the windowing system.  It only checks the events
that have already been moved to the GDK event queue.)</doc>
        <source-position filename="gdk/gdkdisplay.h" line="165"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="250">a copy of the first #GdkEvent on the event queue, or %NULL
if no events are in the queue. The returned #GdkEvent should be freed with
gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="243">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pointer_is_grabbed"
              c:identifier="gdk_display_pointer_is_grabbed"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="1281">Test if the pointer is grabbed.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1287">%TRUE if an active X pointer grab is in effect</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="1283">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pointer_ungrab"
              c:identifier="gdk_display_pointer_ungrab"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="614">Release any pointer grab.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="616">a #GdkDisplay.</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="time_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="617">a timestap (e.g. %GDK_CURRENT_TIME).</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_event"
              c:identifier="gdk_display_put_event"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="271">Appends a copy of the given event onto the front of the event
queue for @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="273">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="274">a #GdkEvent.</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_selection_notification"
              c:identifier="gdk_display_request_selection_notification"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1268">Request #GdkEventOwnerChange events for ownership changes
of the selection named by the given atom.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="213"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1277">whether #GdkEventOwnerChange events will
              be sent.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1270">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1271">the #GdkAtom naming the selection for which
            ownership change notification is requested</doc>
            <type name="Atom" c:type="GdkAtom"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double_click_distance"
              c:identifier="gdk_display_set_double_click_distance"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1329">Sets the double click distance (two clicks within this distance
count as a double click and result in a #GDK_2BUTTON_PRESS event).
See also gdk_display_set_double_click_time().
Applications should &lt;emphasis&gt;not&lt;/emphasis&gt; set this, it is a global
user-configured setting.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="1331">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="distance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="1332">distance in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double_click_time"
              c:identifier="gdk_display_set_double_click_time"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1294">Sets the double click time (two clicks within this time interval
count as a double click and result in a #GDK_2BUTTON_PRESS event).
Applications should &lt;emphasis&gt;not&lt;/emphasis&gt; set this, it is a global
user-configured setting.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="1296">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="msec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="1297">double click time in milliseconds (thousandths of a second)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pointer_hooks"
              c:identifier="gdk_display_set_pointer_hooks"
              version="2.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="624">This function allows for hooking into the operation
of getting the current location of the pointer on a particular
display. This is only useful for such low-level tools as an
event recorder. Applications should never have any
reason to use this facility.</doc>
        <doc-deprecated xml:space="preserve">This function will go away in GTK 3 for lack of use cases.</doc-deprecated>
        <source-position filename="gdk/gdkdisplay.h" line="197"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="637">the previous pointer hook table</doc>
          <type name="DisplayPointerHooks" c:type="GdkDisplayPointerHooks*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="626">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="new_hooks" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="627">a table of pointers to functions for getting
  quantities related to the current pointer position,
  or %NULL to restore the default table.</doc>
            <type name="DisplayPointerHooks"
                  c:type="const GdkDisplayPointerHooks*"/>
          </parameter>
        </parameters>
      </method>
      <method name="store_clipboard"
              c:identifier="gdk_display_store_clipboard"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1331">Issues a request to the clipboard manager to store the
clipboard data. On X11, this is a special program that works
according to the freedesktop clipboard specification, available at
&lt;ulink url="http://www.freedesktop.org/Standards/clipboard-manager-spec"&gt;
http://www.freedesktop.org/Standards/clipboard-manager-spec&lt;/ulink&gt;.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="217"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1333">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="clipboard_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1334">a #GdkWindow belonging to the clipboard owner</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="time_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1335">a timestamp</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="targets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1336">an array of targets that should be saved, or %NULL
                   if all available targets should be saved.</doc>
            <type name="Atom" c:type="const GdkAtom*"/>
          </parameter>
          <parameter name="n_targets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1338">length of the @targets array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_clipboard_persistence"
              c:identifier="gdk_display_supports_clipboard_persistence"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1308">Returns whether the speicifed display supports clipboard
persistance; i.e. if it's possible to store the clipboard data after an
application has quit. On X11 this checks if a clipboard daemon is
running.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1317">%TRUE if the display supports clipboard persistance.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1310">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_composite"
              c:identifier="gdk_display_supports_composite"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1465">Returns %TRUE if gdk_window_set_composited() can be used
to redirect drawing on the window using compositing.

Currently this only works on X11 with XComposite and
XDamage extensions available.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1475">%TRUE if windows may be composited.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1467">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_cursor_alpha"
              c:identifier="gdk_display_supports_cursor_alpha"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="898">Returns %TRUE if cursors can use an 8bit alpha channel
on @display. Otherwise, cursors are restricted to bilevel
alpha (i.e. a mask).</doc>
        <source-position filename="gdk/gdkdisplay.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="906">whether cursors can have alpha channels.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="900">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_cursor_color"
              c:identifier="gdk_display_supports_cursor_color"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcursor-x11.c"
             line="918">Returns %TRUE if multicolored cursors are supported
on @display. Otherwise, cursors have only a forground
and a background color.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="204"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcursor-x11.c"
               line="926">whether cursors can have multiple colors.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcursor-x11.c"
                 line="920">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_input_shapes"
              c:identifier="gdk_display_supports_input_shapes"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1431">Returns %TRUE if gdk_window_input_shape_combine_mask() can
be used to modify the input shape of windows on @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="224"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1438">%TRUE if windows with modified input shape are supported</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1433">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_selection_notification"
              c:identifier="gdk_display_supports_selection_notification"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1248">Returns whether #GdkEventOwnerChange events will be
sent when the owner of a selection changes.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1255">whether #GdkEventOwnerChange events will
              be sent.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1250">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="supports_shapes"
              c:identifier="gdk_display_supports_shapes"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="1414">Returns %TRUE if gdk_window_shape_combine_mask() can
be used to create shaped windows on @display.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="223"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1421">%TRUE if shaped windows are supported</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="1416">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="sync" c:identifier="gdk_display_sync" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdisplay-x11.c"
             line="706">Flushes any requests queued for the windowing system and waits until all
requests have been handled. This is often used for making sure that the
display is synchronized with the current state of the program. Calling
gdk_display_sync() before gdk_error_trap_pop() makes sure that any errors
generated from earlier requests are handled before the error trap is
removed.

This is most useful for X11. On windowing systems where requests are
handled synchronously, this function will do nothing.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="708">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="warp_pointer"
              c:identifier="gdk_display_warp_pointer"
              version="2.8">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3240">Warps the pointer of @display to the point @x,@y on
the screen @screen, unless the pointer is confined
to a window by a grab, in which case it will be moved
as far as allowed by the grab. Warping the pointer
creates events as if the user had moved the mouse
instantaneously to the destination.

Note that the pointer should normally be under the
control of the user. This function was added to cover
some rare use cases like keyboard navigation support
for the color picker in the #GtkColorSelectionDialog.</doc>
        <source-position filename="gdk/gdkdisplay.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3242">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </instance-parameter>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3243">the screen of @display to warp the pointer to</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3244">the x coordinate of the destination</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3245">the y coordinate of the destination</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="queued_events" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="queued_tail" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="button_click_time" readable="0" private="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="guint32" c:type="guint32"/>
        </array>
      </field>
      <field name="button_window" readable="0" private="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="Window" c:type="GdkWindow*"/>
        </array>
      </field>
      <field name="button_number" readable="0" private="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="gint" c:type="gint"/>
        </array>
      </field>
      <field name="double_click_time" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="core_pointer" readable="0" private="1">
        <type name="Device" c:type="GdkDevice*"/>
      </field>
      <field name="pointer_hooks" readable="0" private="1">
        <type name="DisplayPointerHooks"
              c:type="const GdkDisplayPointerHooks*"/>
      </field>
      <field name="closed" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="ignore_core_events" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="double_click_distance" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="button_x" readable="0" private="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="gint" c:type="gint"/>
        </array>
      </field>
      <field name="button_y" readable="0" private="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="gint" c:type="gint"/>
        </array>
      </field>
      <field name="pointer_grabs" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="keyboard_grab" readable="0" private="1">
        <type name="KeyboardGrabInfo" c:type="GdkKeyboardGrabInfo"/>
      </field>
      <field name="pointer_info" readable="0" private="1">
        <type name="PointerWindowInfo" c:type="GdkPointerWindowInfo"/>
      </field>
      <field name="last_event_time" readable="0" private="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <glib:signal name="closed" when="last" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="107">The ::closed signal is emitted when the connection to the windowing
system for @display is closed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="110">%TRUE if the display was closed due to an error</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DisplayClass"
            c:type="GdkDisplayClass"
            glib:is-gtype-struct-for="Display">
      <source-position filename="gdk/gdkdisplay.h" line="122"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_display_name">
        <callback name="get_display_name">
          <source-position filename="gdk/gdkdisplay.h" line="112"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_n_screens">
        <callback name="get_n_screens">
          <source-position filename="gdk/gdkdisplay.h" line="113"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="525">number of screens.</doc>
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/x11/gdkdisplay-x11.c"
                   line="521">a #GdkDisplay</doc>
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_screen" introspectable="0">
        <callback name="get_screen" introspectable="0">
          <source-position filename="gdk/gdkdisplay.h" line="114"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="544">the #GdkScreen object</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/x11/gdkdisplay-x11.c"
                   line="539">a #GdkDisplay</doc>
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
            <parameter name="screen_num" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/x11/gdkdisplay-x11.c"
                   line="540">the screen number</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_default_screen" introspectable="0">
        <callback name="get_default_screen" introspectable="0">
          <source-position filename="gdk/gdkdisplay.h" line="116"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdisplay-x11.c"
                 line="564">the default #GdkScreen object for @display</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/x11/gdkdisplay-x11.c"
                   line="560">a #GdkDisplay</doc>
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="closed">
        <callback name="closed">
          <source-position filename="gdk/gdkdisplay.h" line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
            <parameter name="is_error" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DisplayManager"
           c:symbol-prefix="display_manager"
           c:type="GdkDisplayManager"
           parent="GObject.Object"
           glib:type-name="GdkDisplayManager"
           glib:get-type="gdk_display_manager_get_type"
           glib:type-struct="DisplayManagerClass">
      <source-position filename="gdk/gdkdisplaymanager.h" line="55"/>
      <function name="get"
                c:identifier="gdk_display_manager_get"
                version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="150">Gets the singleton #GdkDisplayManager object.</doc>
        <source-position filename="gdk/gdkdisplaymanager.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplaymanager.c"
               line="155">The global #GdkDisplayManager singleton; gdk_parse_pargs(),
gdk_init(), or gdk_init_check() must have been called first.</doc>
          <type name="DisplayManager" c:type="GdkDisplayManager*"/>
        </return-value>
      </function>
      <virtual-method name="display_opened">
        <source-position filename="gdk/gdkdisplaymanager.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display_manager" transfer-ownership="none">
            <type name="DisplayManager" c:type="GdkDisplayManager*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_default_display"
              c:identifier="gdk_display_manager_get_default_display"
              glib:get-property="default-display"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="171">Gets the default #GdkDisplay.</doc>
        <source-position filename="gdk/gdkdisplaymanager.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplaymanager.c"
               line="177">a #GdkDisplay, or %NULL if there is no default
  display.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplaymanager.c"
                 line="173">a #GdkDisplayManager</doc>
            <type name="DisplayManager" c:type="GdkDisplayManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_displays"
              c:identifier="gdk_display_manager_list_displays"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="245">List all currently open displays.</doc>
        <source-position filename="gdk/gdkdisplaymanager.h" line="63"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplaymanager.c"
               line="251">a newly allocated
#GSList of #GdkDisplay objects. Free this list with g_slist_free() when you
are done with it.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Display"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="display_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplaymanager.c"
                 line="247">a #GdkDisplayManager</doc>
            <type name="DisplayManager" c:type="GdkDisplayManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_display"
              c:identifier="gdk_display_manager_set_default_display"
              glib:set-property="default-display"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="225">Sets @display as the default display.</doc>
        <source-position filename="gdk/gdkdisplaymanager.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplaymanager.c"
                 line="227">a #GdkDisplayManager</doc>
            <type name="DisplayManager" c:type="GdkDisplayManager*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplaymanager.c"
                 line="228">a #GdkDisplay</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <property name="default-display"
                writable="1"
                transfer-ownership="none"
                setter="set_default_display"
                getter="get_default_display">
        <type name="Display"/>
      </property>
      <glib:signal name="display-opened" when="last" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="80">The ::display_opened signal is emitted when a display is opened.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplaymanager.c"
                 line="83">the opened display</doc>
            <type name="Display"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DisplayManagerClass"
            c:type="GdkDisplayManagerClass"
            glib:is-gtype-struct-for="DisplayManager">
      <source-position filename="gdk/gdkdisplaymanager.h" line="55"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="display_opened">
        <callback name="display_opened">
          <source-position filename="gdk/gdkdisplaymanager.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="display_manager" transfer-ownership="none">
              <type name="DisplayManager" c:type="GdkDisplayManager*"/>
            </parameter>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DisplayPointerHooks" c:type="GdkDisplayPointerHooks">
      <source-position filename="gdk/gdkdisplay.h" line="139"/>
      <field name="get_pointer">
        <callback name="get_pointer">
          <source-position filename="gdk/gdkdisplay.h" line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
            <parameter name="screen" transfer-ownership="none">
              <type name="Screen" c:type="GdkScreen**"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="ModifierType" c:type="GdkModifierType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="window_get_pointer" introspectable="0">
        <callback name="window_get_pointer" introspectable="0">
          <source-position filename="gdk/gdkdisplay.h" line="131"/>
          <return-value>
            <type name="Window" c:type="GdkWindow*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
            <parameter name="window" transfer-ownership="none">
              <type name="Window" c:type="GdkWindow*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="ModifierType" c:type="GdkModifierType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="window_at_pointer" introspectable="0">
        <callback name="window_at_pointer" introspectable="0">
          <source-position filename="gdk/gdkdisplay.h" line="136"/>
          <return-value>
            <type name="Window" c:type="GdkWindow*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="Display" c:type="GdkDisplay*"/>
            </parameter>
            <parameter name="win_x" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="win_y" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <bitfield name="DragAction" c:type="GdkDragAction">
      <source-position filename="gdk/gdkdnd.h" line="48"/>
      <member name="default" value="1" c:identifier="GDK_ACTION_DEFAULT">
      </member>
      <member name="copy" value="2" c:identifier="GDK_ACTION_COPY">
      </member>
      <member name="move" value="4" c:identifier="GDK_ACTION_MOVE">
      </member>
      <member name="link" value="8" c:identifier="GDK_ACTION_LINK">
      </member>
      <member name="private" value="16" c:identifier="GDK_ACTION_PRIVATE">
      </member>
      <member name="ask" value="32" c:identifier="GDK_ACTION_ASK">
      </member>
    </bitfield>
    <class name="DragContext"
           c:symbol-prefix="drag_context"
           c:type="GdkDragContext"
           parent="GObject.Object"
           glib:type-name="GdkDragContext"
           glib:get-type="gdk_drag_context_get_type"
           glib:type-struct="DragContextClass">
      <source-position filename="gdk/gdkdnd.h" line="102"/>
      <constructor name="new"
                   c:identifier="gdk_drag_context_new"
                   deprecated="1"
                   deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="215">Creates a new #GdkDragContext.</doc>
        <doc-deprecated xml:space="preserve">This function is not useful, you always
  obtain drag contexts by gdk_drag_begin() or similar.</doc-deprecated>
        <source-position filename="gdk/gdkdnd.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="220">the newly created #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </return-value>
      </constructor>
      <method name="get_actions"
              c:identifier="gdk_drag_context_get_actions"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="102">Determines the bitmask of actions proposed by the source if
gdk_drag_context_suggested_action() returns GDK_ACTION_ASK.</doc>
        <source-position filename="gdk/gdkdnd.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="109">the #GdkDragAction flags</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="104">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dest_window"
              c:identifier="gdk_drag_context_get_dest_window"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="175">Returns the destination windw for the DND operation.</doc>
        <source-position filename="gdk/gdkdnd.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="181">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="177">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="gdk_drag_context_get_protocol"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="193">Returns the drag protocol thats used by this context.</doc>
        <source-position filename="gdk/gdkdnd.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="199">the drag protocol</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="195">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_action"
              c:identifier="gdk_drag_context_get_selected_action"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="139">Determines the action chosen by the drag destination.</doc>
        <source-position filename="gdk/gdkdnd.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="145">a #GdkDragAction value</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="141">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_window"
              c:identifier="gdk_drag_context_get_source_window"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="157">Returns the #GdkWindow where the DND operation started.</doc>
        <source-position filename="gdk/gdkdnd.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="163">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="159">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_suggested_action"
              c:identifier="gdk_drag_context_get_suggested_action"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="121">Determines the suggested drag action of the context.</doc>
        <source-position filename="gdk/gdkdnd.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="127">a #GdkDragAction value</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="123">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_targets"
              c:identifier="gdk_drag_context_list_targets"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="84">Retrieves the list of targets of the context.</doc>
        <source-position filename="gdk/gdkdnd.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="90">a #GList of targets</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Atom"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdnd.c"
                 line="86">a #GdkDragContext</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_drag_context_ref"
              deprecated="1"
              deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="231">Deprecated function; use g_object_ref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkdnd.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdnd-x11.c"
                 line="233">a #GdkDragContext.</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gdk_drag_context_unref"
              deprecated="1"
              deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="247">Deprecated function; use g_object_unref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkdnd.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkdnd-x11.c"
                 line="249">a #GdkDragContext.</doc>
            <type name="DragContext" c:type="GdkDragContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="protocol">
        <type name="DragProtocol" c:type="GdkDragProtocol"/>
      </field>
      <field name="is_source">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="source_window">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="dest_window">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="targets">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="actions">
        <type name="DragAction" c:type="GdkDragAction"/>
      </field>
      <field name="suggested_action">
        <type name="DragAction" c:type="GdkDragAction"/>
      </field>
      <field name="action">
        <type name="DragAction" c:type="GdkDragAction"/>
      </field>
      <field name="start_time">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="windowing_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="DragContextClass"
            c:type="GdkDragContextClass"
            glib:is-gtype-struct-for="DragContext">
      <source-position filename="gdk/gdkdnd.h" line="102"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="DragProtocol" c:type="GdkDragProtocol">
      <source-position filename="gdk/gdkdnd.h" line="60"/>
      <member name="motif" value="0" c:identifier="GDK_DRAG_PROTO_MOTIF">
      </member>
      <member name="xdnd" value="1" c:identifier="GDK_DRAG_PROTO_XDND">
      </member>
      <member name="rootwin" value="2" c:identifier="GDK_DRAG_PROTO_ROOTWIN">
      </member>
      <member name="none" value="3" c:identifier="GDK_DRAG_PROTO_NONE">
      </member>
      <member name="win32_dropfiles"
              value="4"
              c:identifier="GDK_DRAG_PROTO_WIN32_DROPFILES">
      </member>
      <member name="ole2" value="5" c:identifier="GDK_DRAG_PROTO_OLE2">
      </member>
      <member name="local" value="6" c:identifier="GDK_DRAG_PROTO_LOCAL">
      </member>
    </enumeration>
    <class name="Drawable"
           c:symbol-prefix="drawable"
           c:type="GdkDrawable"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GdkDrawable"
           glib:get-type="gdk_drawable_get_type"
           glib:type-struct="DrawableClass">
      <source-position filename="gdk/gdkdrawable.h" line="232"/>
      <virtual-method name="_copy_to_image" introspectable="0">
        <source-position filename="gdk/gdkdrawable.h" line="180"/>
        <return-value>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="GdkImage*"/>
          </parameter>
          <parameter name="src_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_cairo_surface">
        <source-position filename="gdk/gdkdrawable.h" line="208"/>
        <return-value transfer-ownership="full">
          <type name="cairo.Surface" c:type="cairo_surface_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_gc" introspectable="0">
        <source-position filename="gdk/gdkdrawable.h" line="62"/>
        <return-value>
          <type name="GC" c:type="GdkGC*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_arc">
        <source-position filename="gdk/gdkdrawable.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="filled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="angle1" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="angle2" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_drawable">
        <source-position filename="gdk/gdkdrawable.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="xsrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ysrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xdest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ydest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_drawable_with_src">
        <source-position filename="gdk/gdkdrawable.h" line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="xsrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ysrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xdest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ydest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="original_src" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_glyphs">
        <source-position filename="gdk/gdkdrawable.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="font" transfer-ownership="none">
            <type name="Pango.Font" c:type="PangoFont*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="glyphs" transfer-ownership="none">
            <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_glyphs_transformed">
        <source-position filename="gdk/gdkdrawable.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type name="Pango.Matrix" c:type="PangoMatrix*"/>
          </parameter>
          <parameter name="font" transfer-ownership="none">
            <type name="Pango.Font" c:type="PangoFont*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="glyphs" transfer-ownership="none">
            <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_image">
        <source-position filename="gdk/gdkdrawable.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="GdkImage*"/>
          </parameter>
          <parameter name="xsrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ysrc" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xdest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ydest" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_lines">
        <source-position filename="gdk/gdkdrawable.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="points" transfer-ownership="none">
            <type name="Point" c:type="GdkPoint*"/>
          </parameter>
          <parameter name="npoints" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_pixbuf">
        <source-position filename="gdk/gdkdrawable.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="pixbuf" transfer-ownership="none">
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="src_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dither" transfer-ownership="none">
            <type name="RgbDither" c:type="GdkRgbDither"/>
          </parameter>
          <parameter name="x_dither" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_dither" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_points">
        <source-position filename="gdk/gdkdrawable.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="points" transfer-ownership="none">
            <type name="Point" c:type="GdkPoint*"/>
          </parameter>
          <parameter name="npoints" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_polygon">
        <source-position filename="gdk/gdkdrawable.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="filled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="points" transfer-ownership="none">
            <type name="Point" c:type="GdkPoint*"/>
          </parameter>
          <parameter name="npoints" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_rectangle">
        <source-position filename="gdk/gdkdrawable.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="filled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_segments">
        <source-position filename="gdk/gdkdrawable.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="segs" transfer-ownership="none">
            <type name="Segment" c:type="GdkSegment*"/>
          </parameter>
          <parameter name="nsegs" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_text">
        <source-position filename="gdk/gdkdrawable.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="font" transfer-ownership="none">
            <type name="Font" c:type="GdkFont*"/>
          </parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text_length" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_text_wc">
        <source-position filename="gdk/gdkdrawable.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="font" transfer-ownership="none">
            <type name="Font" c:type="GdkFont*"/>
          </parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="WChar" c:type="const GdkWChar*"/>
          </parameter>
          <parameter name="text_length" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_trapezoids">
        <source-position filename="gdk/gdkdrawable.h" line="196"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
          <parameter name="trapezoids" transfer-ownership="none">
            <type name="Trapezoid" c:type="GdkTrapezoid*"/>
          </parameter>
          <parameter name="n_trapezoids" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_clip_region"
                      invoker="get_clip_region"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1294">Computes the region of a drawable that potentially can be written
to by drawing primitives. This region will not take into account
the clip region for the GC, and may also not take into account
other factors such as if the window is obscured by other windows,
but no area outside of this region will be affected by drawing
primitives.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="157"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1305">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1296">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_colormap"
                      invoker="get_colormap"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="269">Gets the colormap for @drawable, if one is set; returns
%NULL otherwise.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="147"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="276">the colormap, or %NULL</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="271">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_composite_drawable" introspectable="0">
        <source-position filename="gdk/gdkdrawable.h" line="160"/>
        <return-value>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="composite_x_offset" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="composite_y_offset" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_depth" invoker="get_depth">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="186">Obtains the bit depth of the drawable, that is, the number of bits
that make up a pixel in the drawable's visual. Examples are 8 bits
per pixel, 24 bits per pixel, etc.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="194">number of bits per pixel</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="188">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_image"
                      invoker="get_image"
                      introspectable="0"
                      deprecated="1"
                      deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1176">A #GdkImage stores client-side image data (pixels). In contrast,
#GdkPixmap and #GdkWindow are server-side
objects. gdk_drawable_get_image() obtains the pixels from a
server-side drawable as a client-side #GdkImage.  The format of a
#GdkImage depends on the #GdkVisual of the current display, which
makes manipulating #GdkImage extremely difficult; therefore, in
most cases you should use gdk_pixbuf_get_from_drawable() instead of
this lower-level function. A #GdkPixbuf contains image data in a
canonicalized RGB format, rather than a display-dependent format.
Of course, there's a convenience vs. speed tradeoff here, so you'll
want to think about what makes sense for your application.

@x, @y, @width, and @height define the region of @drawable to
obtain as an image.

You would usually copy image data to the client side if you intend
to examine the values of individual pixels, for example to darken
an image or add a red tint. It would be prohibitively slow to
make a round-trip request to the windowing system for each pixel,
so instead you get all of them at once, modify them, then copy
them all back at once.

If the X server or other windowing system backend is on the local
machine, this function may use shared memory to avoid copying
the image data.

If the source drawable is a #GdkWindow and partially offscreen
or obscured, then the obscured portions of the returned image
will contain undefined data.</doc>
        <doc-deprecated xml:space="preserve">Use @drawable as the source and draw to a Cairo image
surface if you want to download contents to the client.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="151"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1214">a #GdkImage containing the contents of @drawable</doc>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1178">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1179">x coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1180">y coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1181">width of region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1182">height or region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_screen"
                      invoker="get_screen"
                      version="2.2"
                      introspectable="0"
                      deprecated="1"
                      deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="203">Gets the #GdkScreen associated with a #GdkDrawable.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_screen() instead</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="149"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="209">the #GdkScreen associated with @drawable</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="205">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_size"
                      invoker="get_size"
                      deprecated="1"
                      deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="142">Fills *@width and *@height with the size of @drawable.
@width or @height can be %NULL if you only want the other one.

On the X11 platform, if @drawable is a #GdkWindow, the returned
size is the size reported in the most-recently-processed configure
event, rather than the current size on the X server.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_width() and gdk_window_get_height() for
            #GdkWindows. Use gdk_pixmap_get_size() for #GdkPixmaps.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="144">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="145">location to store drawable's width, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="146">location to store drawable's height, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_source_drawable" introspectable="0">
        <source-position filename="gdk/gdkdrawable.h" line="203"/>
        <return-value>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_visible_region"
                      invoker="get_visible_region"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1316">Computes the region of a drawable that is potentially visible.
This does not necessarily take into account if the window is
obscured by other windows, but no area outside of this region
is visible.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="158"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1325">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1318">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_visual"
                      invoker="get_visual"
                      introspectable="0"
                      deprecated="1"
                      deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="168">Gets the #GdkVisual describing the pixel format of @drawable.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_visual()</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="148"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="174">a #GdkVisual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="170">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ref_cairo_surface">
        <source-position filename="gdk/gdkdrawable.h" line="201"/>
        <return-value transfer-ownership="full">
          <type name="cairo.Surface" c:type="cairo_surface_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_cairo_clip">
        <source-position filename="gdk/gdkdrawable.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="cr" transfer-ownership="none">
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_colormap" invoker="set_colormap">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="243">Sets the colormap associated with @drawable. Normally this will
happen automatically when the drawable is created; you only need to
use this function if the drawable-creating function did not have a
way to determine the colormap, and you then use drawable operations
that require a colormap. The colormap for all drawables and
graphics contexts you intend to use together should match. i.e.
when using a #GdkGC to draw to a drawable, or copying one drawable
to another, the colormaps should match.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="245">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="cmap" transfer-ownership="none">
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="copy_to_image"
              c:identifier="gdk_drawable_copy_to_image"
              version="2.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1097">Copies a portion of @drawable into the client side image structure
@image. If @image is %NULL, creates a new image of size @width x @height
and copies into that. See gdk_drawable_get_image() for further details.</doc>
        <doc-deprecated xml:space="preserve">Use @drawable as the source and draw to a Cairo image
surface if you want to download contents to the client.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="421"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1112">@image, or a new a #GdkImage containing the contents
              of @drawable</doc>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1099">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1100">a #GdkDrawable, or %NULL if a new @image should be created.</doc>
            <type name="Image" c:type="GdkImage*"/>
          </parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1101">x coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1102">y coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1103">x coordinate within @image. Must be 0 if @image is %NULL</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1104">y coordinate within @image. Must be 0 if @image is %NULL</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1105">width of region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1106">height or region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clip_region"
              c:identifier="gdk_drawable_get_clip_region"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1294">Computes the region of a drawable that potentially can be written
to by drawing primitives. This region will not take into account
the clip region for the GC, and may also not take into account
other factors such as if the window is obscured by other windows,
but no area outside of this region will be affected by drawing
primitives.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="431"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1305">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1296">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_colormap"
              c:identifier="gdk_drawable_get_colormap"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="269">Gets the colormap for @drawable, if one is set; returns
%NULL otherwise.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="255"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="276">the colormap, or %NULL</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="271">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data" c:identifier="gdk_drawable_get_data">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="122">Equivalent to g_object_get_data(); the #GObject variant should be
used instead.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="249"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="130">the data stored at @key</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="124">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="125">name the data was stored under</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_depth" c:identifier="gdk_drawable_get_depth">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="186">Obtains the bit depth of the drawable, that is, the number of bits
that make up a pixel in the drawable's visual. Examples are 8 bits
per pixel, 24 bits per pixel, etc.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="194">number of bits per pixel</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="188">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gdk_drawable_get_display"
              version="2.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="223">Gets the #GdkDisplay associated with a #GdkDrawable.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_display() instead</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="264"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="229">the #GdkDisplay associated with @drawable</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="225">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="gdk_drawable_get_image"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1176">A #GdkImage stores client-side image data (pixels). In contrast,
#GdkPixmap and #GdkWindow are server-side
objects. gdk_drawable_get_image() obtains the pixels from a
server-side drawable as a client-side #GdkImage.  The format of a
#GdkImage depends on the #GdkVisual of the current display, which
makes manipulating #GdkImage extremely difficult; therefore, in
most cases you should use gdk_pixbuf_get_from_drawable() instead of
this lower-level function. A #GdkPixbuf contains image data in a
canonicalized RGB format, rather than a display-dependent format.
Of course, there's a convenience vs. speed tradeoff here, so you'll
want to think about what makes sense for your application.

@x, @y, @width, and @height define the region of @drawable to
obtain as an image.

You would usually copy image data to the client side if you intend
to examine the values of individual pixels, for example to darken
an image or add a red tint. It would be prohibitively slow to
make a round-trip request to the windowing system for each pixel,
so instead you get all of them at once, modify them, then copy
them all back at once.

If the X server or other windowing system backend is on the local
machine, this function may use shared memory to avoid copying
the image data.

If the source drawable is a #GdkWindow and partially offscreen
or obscured, then the obscured portions of the returned image
will contain undefined data.</doc>
        <doc-deprecated xml:space="preserve">Use @drawable as the source and draw to a Cairo image
surface if you want to download contents to the client.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="416"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1214">a #GdkImage containing the contents of @drawable</doc>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1178">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1179">x coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1180">y coordinate on @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1181">width of region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1182">height or region to get</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_drawable_get_screen"
              version="2.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="203">Gets the #GdkScreen associated with a #GdkDrawable.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_screen() instead</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="263"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="209">the #GdkScreen associated with @drawable</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="205">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="gdk_drawable_get_size"
              deprecated="1"
              deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="142">Fills *@width and *@height with the size of @drawable.
@width or @height can be %NULL if you only want the other one.

On the X11 platform, if @drawable is a #GdkWindow, the returned
size is the size reported in the most-recently-processed configure
event, rather than the current size on the X server.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_width() and gdk_window_get_height() for
            #GdkWindows. Use gdk_pixmap_get_size() for #GdkPixmaps.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="259"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="144">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="145">location to store drawable's width, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="146">location to store drawable's height, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_visible_region"
              c:identifier="gdk_drawable_get_visible_region"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="1316">Computes the region of a drawable that is potentially visible.
This does not necessarily take into account if the window is
obscured by other windows, but no area outside of this region
is visible.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="432"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1325">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1318">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visual"
              c:identifier="gdk_drawable_get_visual"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="168">Gets the #GdkVisual describing the pixel format of @drawable.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_window_get_visual()</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="262"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="174">a #GdkVisual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="170">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_drawable_ref"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="286">Deprecated equivalent of calling g_object_ref() on @drawable.
(Drawables were not objects in previous versions of GDK.)</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="268"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="293">the same @drawable passed in</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="288">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_colormap" c:identifier="gdk_drawable_set_colormap">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="243">Sets the colormap associated with @drawable. Normally this will
happen automatically when the drawable is created; you only need to
use this function if the drawable-creating function did not have a
way to determine the colormap, and you then use drawable operations
that require a colormap. The colormap for all drawables and
graphics contexts you intend to use together should match. i.e.
when using a #GdkGC to draw to a drawable, or copying one drawable
to another, the colormaps should match.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="253"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="245">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="246">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_data" c:identifier="gdk_drawable_set_data">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="97">This function is equivalent to g_object_set_data(),
the #GObject variant should be used instead.</doc>
        <source-position filename="gdk/gdkdrawable.h" line="245"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="99">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="100">name to store the data under</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="101">arbitrary data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="102">function to free @data, or %NULL</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gdk_drawable_unref"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkdraw.c"
             line="303">Deprecated equivalent of calling g_object_unref() on @drawable.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkdrawable.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="305">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DrawableClass"
            c:type="GdkDrawableClass"
            glib:is-gtype-struct-for="Drawable">
      <source-position filename="gdk/gdkdrawable.h" line="232"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_gc" introspectable="0">
        <callback name="create_gc" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="62"/>
          <return-value>
            <type name="GC" c:type="GdkGC*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <type name="GCValues" c:type="GdkGCValues*"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_rectangle">
        <callback name="draw_rectangle">
          <source-position filename="gdk/gdkdrawable.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="filled" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_arc">
        <callback name="draw_arc">
          <source-position filename="gdk/gdkdrawable.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="filled" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="angle1" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="angle2" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_polygon">
        <callback name="draw_polygon">
          <source-position filename="gdk/gdkdrawable.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="filled" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="points" transfer-ownership="none">
              <type name="Point" c:type="GdkPoint*"/>
            </parameter>
            <parameter name="npoints" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_text">
        <callback name="draw_text">
          <source-position filename="gdk/gdkdrawable.h" line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="font" transfer-ownership="none">
              <type name="Font" c:type="GdkFont*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="text_length" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_text_wc">
        <callback name="draw_text_wc">
          <source-position filename="gdk/gdkdrawable.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="font" transfer-ownership="none">
              <type name="Font" c:type="GdkFont*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="WChar" c:type="const GdkWChar*"/>
            </parameter>
            <parameter name="text_length" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_drawable">
        <callback name="draw_drawable">
          <source-position filename="gdk/gdkdrawable.h" line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="src" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="xsrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ysrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="xdest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ydest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_points">
        <callback name="draw_points">
          <source-position filename="gdk/gdkdrawable.h" line="109"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="points" transfer-ownership="none">
              <type name="Point" c:type="GdkPoint*"/>
            </parameter>
            <parameter name="npoints" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_segments">
        <callback name="draw_segments">
          <source-position filename="gdk/gdkdrawable.h" line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="segs" transfer-ownership="none">
              <type name="Segment" c:type="GdkSegment*"/>
            </parameter>
            <parameter name="nsegs" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_lines">
        <callback name="draw_lines">
          <source-position filename="gdk/gdkdrawable.h" line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="points" transfer-ownership="none">
              <type name="Point" c:type="GdkPoint*"/>
            </parameter>
            <parameter name="npoints" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_glyphs">
        <callback name="draw_glyphs">
          <source-position filename="gdk/gdkdrawable.h" line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="font" transfer-ownership="none">
              <type name="Pango.Font" c:type="PangoFont*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="glyphs" transfer-ownership="none">
              <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_image">
        <callback name="draw_image">
          <source-position filename="gdk/gdkdrawable.h" line="129"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="GdkImage*"/>
            </parameter>
            <parameter name="xsrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ysrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="xdest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ydest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_depth">
        <callback name="get_depth">
          <source-position filename="gdk/gdkdrawable.h" line="139"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="194">number of bits per pixel</doc>
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="188">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_size">
        <callback name="get_size">
          <source-position filename="gdk/gdkdrawable.h" line="140"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="144">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="width"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="145">location to store drawable's width, or %NULL</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="height"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="146">location to store drawable's height, or %NULL</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_colormap">
        <callback name="set_colormap">
          <source-position filename="gdk/gdkdrawable.h" line="144"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="245">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="cmap" transfer-ownership="none">
              <type name="Colormap" c:type="GdkColormap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_colormap" introspectable="0">
        <callback name="get_colormap" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="147"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="276">the colormap, or %NULL</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="271">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_visual" introspectable="0">
        <callback name="get_visual" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="148"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="174">a #GdkVisual</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="170">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_screen" introspectable="0">
        <callback name="get_screen" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="149"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="209">the #GdkScreen associated with @drawable</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="205">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_image" introspectable="0">
        <callback name="get_image" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="151"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1214">a #GdkImage containing the contents of @drawable</doc>
            <type name="Image" c:type="GdkImage*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1178">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1179">x coordinate on @drawable</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1180">y coordinate on @drawable</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1181">width of region to get</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1182">height or region to get</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_clip_region" introspectable="0">
        <callback name="get_clip_region" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="157"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1305">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1296">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_visible_region" introspectable="0">
        <callback name="get_visible_region" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="158"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gdk/gdkdraw.c"
                 line="1325">a #GdkRegion. This must be freed with gdk_region_destroy()
         when you are done.</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkdraw.c"
                   line="1318">a #GdkDrawable</doc>
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_composite_drawable" introspectable="0">
        <callback name="get_composite_drawable" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="160"/>
          <return-value>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="composite_x_offset" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="composite_y_offset" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_pixbuf">
        <callback name="draw_pixbuf">
          <source-position filename="gdk/gdkdrawable.h" line="168"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="pixbuf" transfer-ownership="none">
              <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
            </parameter>
            <parameter name="src_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="src_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dither" transfer-ownership="none">
              <type name="RgbDither" c:type="GdkRgbDither"/>
            </parameter>
            <parameter name="x_dither" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y_dither" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_copy_to_image" introspectable="0">
        <callback name="_copy_to_image" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="180"/>
          <return-value>
            <type name="Image" c:type="GdkImage*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="GdkImage*"/>
            </parameter>
            <parameter name="src_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="src_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_glyphs_transformed">
        <callback name="draw_glyphs_transformed">
          <source-position filename="gdk/gdkdrawable.h" line="189"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type name="Pango.Matrix" c:type="PangoMatrix*"/>
            </parameter>
            <parameter name="font" transfer-ownership="none">
              <type name="Pango.Font" c:type="PangoFont*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="glyphs" transfer-ownership="none">
              <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_trapezoids">
        <callback name="draw_trapezoids">
          <source-position filename="gdk/gdkdrawable.h" line="196"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="trapezoids" transfer-ownership="none">
              <type name="Trapezoid" c:type="GdkTrapezoid*"/>
            </parameter>
            <parameter name="n_trapezoids" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ref_cairo_surface">
        <callback name="ref_cairo_surface">
          <source-position filename="gdk/gdkdrawable.h" line="201"/>
          <return-value transfer-ownership="full">
            <type name="cairo.Surface" c:type="cairo_surface_t*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_source_drawable" introspectable="0">
        <callback name="get_source_drawable" introspectable="0">
          <source-position filename="gdk/gdkdrawable.h" line="203"/>
          <return-value>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_cairo_clip">
        <callback name="set_cairo_clip">
          <source-position filename="gdk/gdkdrawable.h" line="205"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="cr" transfer-ownership="none">
              <type name="cairo.Context" c:type="cairo_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_cairo_surface">
        <callback name="create_cairo_surface">
          <source-position filename="gdk/gdkdrawable.h" line="208"/>
          <return-value transfer-ownership="full">
            <type name="cairo.Surface" c:type="cairo_surface_t*"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_drawable_with_src">
        <callback name="draw_drawable_with_src">
          <source-position filename="gdk/gdkdrawable.h" line="212"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawable" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="src" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
            <parameter name="xsrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ysrc" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="xdest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="ydest" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="original_src" transfer-ownership="none">
              <type name="Drawable" c:type="GdkDrawable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gdk_reserved7" introspectable="0">
        <callback name="_gdk_reserved7">
          <source-position filename="gdk/gdkdrawable.h" line="224"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved9" introspectable="0">
        <callback name="_gdk_reserved9">
          <source-position filename="gdk/gdkdrawable.h" line="225"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved10" introspectable="0">
        <callback name="_gdk_reserved10">
          <source-position filename="gdk/gdkdrawable.h" line="226"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved11" introspectable="0">
        <callback name="_gdk_reserved11">
          <source-position filename="gdk/gdkdrawable.h" line="227"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved12" introspectable="0">
        <callback name="_gdk_reserved12">
          <source-position filename="gdk/gdkdrawable.h" line="228"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved13" introspectable="0">
        <callback name="_gdk_reserved13">
          <source-position filename="gdk/gdkdrawable.h" line="229"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved14" introspectable="0">
        <callback name="_gdk_reserved14">
          <source-position filename="gdk/gdkdrawable.h" line="230"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved15" introspectable="0">
        <callback name="_gdk_reserved15">
          <source-position filename="gdk/gdkdrawable.h" line="231"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <union name="Event"
           c:type="GdkEvent"
           glib:type-name="GdkEvent"
           glib:get-type="gdk_event_get_type"
           c:symbol-prefix="event">
      <source-position filename="gdk/gdkevents.h" line="514"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="any" writable="1">
        <type name="EventAny" c:type="GdkEventAny"/>
      </field>
      <field name="expose" writable="1">
        <type name="EventExpose" c:type="GdkEventExpose"/>
      </field>
      <field name="no_expose" writable="1">
        <type name="EventNoExpose" c:type="GdkEventNoExpose"/>
      </field>
      <field name="visibility" writable="1">
        <type name="EventVisibility" c:type="GdkEventVisibility"/>
      </field>
      <field name="motion" writable="1">
        <type name="EventMotion" c:type="GdkEventMotion"/>
      </field>
      <field name="button" writable="1">
        <type name="EventButton" c:type="GdkEventButton"/>
      </field>
      <field name="scroll" writable="1">
        <type name="EventScroll" c:type="GdkEventScroll"/>
      </field>
      <field name="key" writable="1">
        <type name="EventKey" c:type="GdkEventKey"/>
      </field>
      <field name="crossing" writable="1">
        <type name="EventCrossing" c:type="GdkEventCrossing"/>
      </field>
      <field name="focus_change" writable="1">
        <type name="EventFocus" c:type="GdkEventFocus"/>
      </field>
      <field name="configure" writable="1">
        <type name="EventConfigure" c:type="GdkEventConfigure"/>
      </field>
      <field name="property" writable="1">
        <type name="EventProperty" c:type="GdkEventProperty"/>
      </field>
      <field name="selection" writable="1">
        <type name="EventSelection" c:type="GdkEventSelection"/>
      </field>
      <field name="owner_change" writable="1">
        <type name="EventOwnerChange" c:type="GdkEventOwnerChange"/>
      </field>
      <field name="proximity" writable="1">
        <type name="EventProximity" c:type="GdkEventProximity"/>
      </field>
      <field name="client" writable="1">
        <type name="EventClient" c:type="GdkEventClient"/>
      </field>
      <field name="dnd" writable="1">
        <type name="EventDND" c:type="GdkEventDND"/>
      </field>
      <field name="window_state" writable="1">
        <type name="EventWindowState" c:type="GdkEventWindowState"/>
      </field>
      <field name="setting" writable="1">
        <type name="EventSetting" c:type="GdkEventSetting"/>
      </field>
      <field name="grab_broken" writable="1">
        <type name="EventGrabBroken" c:type="GdkEventGrabBroken"/>
      </field>
      <constructor name="new" c:identifier="gdk_event_new" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="336">Creates a new event of the given type. All fields are set to 0.</doc>
        <source-position filename="gdk/gdkevents.h" line="527"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="342">a newly-allocated #GdkEvent. The returned #GdkEvent
should be freed with gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="338">a #GdkEventType</doc>
            <type name="EventType" c:type="GdkEventType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gdk_event_copy">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="419">Copies a #GdkEvent, copying or incrementing the reference count of the
resources associated with it (e.g. #GdkWindow's and strings).</doc>
        <source-position filename="gdk/gdkevents.h" line="528"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="426">a copy of @event. The returned #GdkEvent should be freed with
gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="421">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gdk_event_free">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="507">Frees a #GdkEvent, freeing or decrementing any resources associated with it.
Note that this function should only be called with events returned from
functions such as gdk_event_peek(), gdk_event_get(),
gdk_event_get_graphics_expose() and gdk_event_copy() and gdk_event_new().</doc>
        <source-position filename="gdk/gdkevents.h" line="529"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="509">a #GdkEvent.</doc>
            <type name="Event" c:type="GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_axis" c:identifier="gdk_event_get_axis">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="848">Extract the axis value for a particular axis use from
an event structure.</doc>
        <source-position filename="gdk/gdkevents.h" line="540"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="857">%TRUE if the specified axis was found, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="850">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
          <parameter name="axis_use" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="851">the axis use to look for</doc>
            <type name="AxisUse" c:type="GdkAxisUse"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="852">location to store the value found</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_coords" c:identifier="gdk_event_get_coords">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="725">Extract the event window relative x/y coordinates from an event.</doc>
        <source-position filename="gdk/gdkevents.h" line="534"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="733">%TRUE if the event delivered event window coordinates</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="727">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
          <parameter name="x_win"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="728">location to put event window x coordinate</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="y_win"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="729">location to put event window y coordinate</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_root_coords" c:identifier="gdk_event_get_root_coords">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="784">Extract the root window relative x/y coordinates from an event.</doc>
        <source-position filename="gdk/gdkevents.h" line="537"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="792">%TRUE if the event delivered root window coordinates</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="786">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
          <parameter name="x_root"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="787">location to put root window x coordinate</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="y_root"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="788">location to put root window y coordinate</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_event_get_screen"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="985">Returns the screen for the event. The screen is
typically the screen for &lt;literal&gt;event-&gt;any.window&lt;/literal&gt;, but
for events such as mouse events, it is the screen
where the pointer was when the event occurs -
that is, the screen which has the root window
to which &lt;literal&gt;event-&gt;motion.x_root&lt;/literal&gt; and
&lt;literal&gt;event-&gt;motion.y_root&lt;/literal&gt; are relative.</doc>
        <source-position filename="gdk/gdkevents.h" line="550"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="997">the screen for the event</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="987">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="gdk_event_get_state">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="645">If the event contains a "state" field, puts that field in @state. Otherwise
stores an empty state (0). Returns %TRUE if there was a state field
in the event. @event may be %NULL, in which case it's treated
as if the event had no state field.</doc>
        <source-position filename="gdk/gdkevents.h" line="532"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="655">%TRUE if there was a state field in the event</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="647">a #GdkEvent or NULL</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
          <parameter name="state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="648">return location for state</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_time" c:identifier="gdk_event_get_time">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="575">Returns the time stamp from @event, if there is one; otherwise
returns #GDK_CURRENT_TIME. If @event is %NULL, returns #GDK_CURRENT_TIME.</doc>
        <source-position filename="gdk/gdkevents.h" line="531"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="582">time stamp field from @event</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="577">a #GdkEvent</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="put" c:identifier="gdk_event_put">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="307">Appends a copy of the given event onto the front of the event
queue for event-&gt;any.window's display, or the default event
queue if event-&gt;any.window is %NULL. See gdk_display_put_event().</doc>
        <source-position filename="gdk/gdkevents.h" line="525"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="309">a #GdkEvent.</doc>
            <type name="Event" c:type="const GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="send_client_message"
              c:identifier="gdk_event_send_client_message">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="349">Sends an X ClientMessage event to a given window (which must be
on the default #GdkDisplay.)
This could be used for communicating between different applications,
though the amount of data is limited to 20 bytes.</doc>
        <source-position filename="gdk/gdk.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="359">non-zero on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="351">the #GdkEvent to send, which should be a #GdkEventClient.</doc>
            <type name="Event" c:type="GdkEvent*"/>
          </instance-parameter>
          <parameter name="winid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="352">the window to send the X ClientMessage event to.</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_clientmessage_toall"
              c:identifier="gdk_event_send_clientmessage_toall">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="371">Sends an X ClientMessage event to all toplevel windows on the default
#GdkScreen.

Toplevel windows are determined by checking for the WM_STATE property, as
described in the Inter-Client Communication Conventions Manual (ICCCM).
If no windows are found with the WM_STATE property set, the message is sent
to all children of the root window.</doc>
        <source-position filename="gdk/gdk.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="373">the #GdkEvent to send, which should be a #GdkEventClient.</doc>
            <type name="Event" c:type="GdkEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_screen"
              c:identifier="gdk_event_set_screen"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="961">Sets the screen for @event to @screen. The event must
have been allocated by GTK+, for instance, by
gdk_event_copy().</doc>
        <source-position filename="gdk/gdkevents.h" line="548"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="963">a #GdkEvent</doc>
            <type name="Event" c:type="GdkEvent*"/>
          </instance-parameter>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="964">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
        </parameters>
      </method>
      <function name="get" c:identifier="gdk_event_get">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="257">Checks all open displays for a #GdkEvent to process,to be processed
on, fetching events from the windowing system if necessary.
See gdk_display_get_event().</doc>
        <source-position filename="gdk/gdkevents.h" line="519"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="264">the next #GdkEvent to be processed, or %NULL if no events
are pending. The returned #GdkEvent should be freed with gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
      </function>
      <function name="get_graphics_expose"
                c:identifier="gdk_event_get_graphics_expose">
        <source-position filename="gdk/gdkevents.h" line="523"/>
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
        <parameters>
          <parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
        </parameters>
      </function>
      <function name="handler_set" c:identifier="gdk_event_handler_set">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="230">Sets the function to call to handle all events from GDK.

Note that GTK+ uses this to install its own event handler, so it is
usually not useful for GTK+ applications. (Although an application
can call this function then call gtk_main_do_event() to pass
events to GTK+.)</doc>
        <source-position filename="gdk/gdkevents.h" line="544"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="232">the function to call to handle events from GDK.</doc>
            <type name="EventFunc" c:type="GdkEventFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="233">user data to pass to the function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="234">the function to call when the handler function is removed, i.e. when
         gdk_event_handler_set() is called with another event handler.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
      <function name="peek" c:identifier="gdk_event_peek">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="282">If there is an event waiting in the event queue of some open
display, returns a copy of it. See gdk_display_peek_event().</doc>
        <source-position filename="gdk/gdkevents.h" line="521"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="288">a copy of the first #GdkEvent on some event queue, or %NULL if no
events are in any queues. The returned #GdkEvent should be freed with
gdk_event_free().</doc>
          <type name="Event" c:type="GdkEvent*"/>
        </return-value>
      </function>
      <function name="request_motions"
                c:identifier="gdk_event_request_motions"
                version="2.12">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="922">Request more motion notifies if @event is a motion notify hint event.
This function should be used instead of gdk_window_get_pointer() to
request further motion notifies, because it also works for extension
events where motion notifies are provided for devices other than the
core pointer. Coordinate extraction, processing and requesting more
motion events from a %GDK_MOTION_NOTIFY event usually works like this:

|[
{
  /&amp;ast; motion_event handler &amp;ast;/
  x = motion_event-&gt;x;
  y = motion_event-&gt;y;
  /&amp;ast; handle (x,y) motion &amp;ast;/
  gdk_event_request_motions (motion_event); /&amp;ast; handles is_hint events &amp;ast;/
}
]|</doc>
        <source-position filename="gdk/gdkevents.h" line="543"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkevents.c"
                 line="924">a valid #GdkEvent</doc>
            <type name="EventMotion" c:type="const GdkEventMotion*"/>
          </parameter>
        </parameters>
      </function>
      <function name="send_client_message_for_display"
                c:identifier="gdk_event_send_client_message_for_display">
        <source-position filename="gdk/gdk.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GdkEvent*"/>
          </parameter>
          <parameter name="winid" transfer-ownership="none">
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </function>
    </union>
    <record name="EventAny" c:type="GdkEventAny">
      <source-position filename="gdk/gdkevents.h" line="271"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
    </record>
    <record name="EventButton" c:type="GdkEventButton">
      <source-position filename="gdk/gdkevents.h" line="326"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="x" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="axes" writable="1">
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="button" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="device" writable="1">
        <type name="Device" c:type="GdkDevice*"/>
      </field>
      <field name="x_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
    </record>
    <record name="EventClient" c:type="GdkEventClient">
      <source-position filename="gdk/gdkevents.h" line="450"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="message_type" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="data_format" writable="1">
        <type name="gushort" c:type="gushort"/>
      </field>
      <union name="data" c:type="data">
        <source-position filename="gdk/gdkevents.h" line="449"/>
        <field name="b" writable="1">
          <array zero-terminated="0" fixed-size="20">
            <type name="gchar" c:type="char"/>
          </array>
        </field>
        <field name="s" writable="1">
          <array zero-terminated="0" fixed-size="10">
            <type name="gshort" c:type="short"/>
          </array>
        </field>
        <field name="l" writable="1">
          <array zero-terminated="0" fixed-size="5">
            <type name="glong" c:type="long"/>
          </array>
        </field>
      </union>
    </record>
    <record name="EventConfigure" c:type="GdkEventConfigure">
      <source-position filename="gdk/gdkevents.h" line="390"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="x" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="EventCrossing" c:type="GdkEventCrossing">
      <source-position filename="gdk/gdkevents.h" line="372"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="subwindow" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="x" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="x_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="mode" writable="1">
        <type name="CrossingMode" c:type="GdkCrossingMode"/>
      </field>
      <field name="detail" writable="1">
        <type name="NotifyType" c:type="GdkNotifyType"/>
      </field>
      <field name="focus" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="EventDND" c:type="GdkEventDND">
      <source-position filename="gdk/gdkevents.h" line="489"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="context" writable="1">
        <type name="DragContext" c:type="GdkDragContext*"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="x_root" writable="1">
        <type name="gshort" c:type="gshort"/>
      </field>
      <field name="y_root" writable="1">
        <type name="gshort" c:type="gshort"/>
      </field>
    </record>
    <record name="EventExpose" c:type="GdkEventExpose">
      <source-position filename="gdk/gdkevents.h" line="281"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="area" writable="1">
        <type name="Rectangle" c:type="GdkRectangle"/>
      </field>
      <field name="region" writable="1">
        <type name="Region" c:type="GdkRegion*"/>
      </field>
      <field name="count" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="EventFocus" c:type="GdkEventFocus">
      <source-position filename="gdk/gdkevents.h" line="380"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="in" writable="1">
        <type name="gint16" c:type="gint16"/>
      </field>
    </record>
    <callback name="EventFunc" c:type="GdkEventFunc">
      <source-position filename="gdk/gdkevents.h" line="70"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <type name="Event" c:type="GdkEvent*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="EventGrabBroken" c:type="GdkEventGrabBroken">
      <source-position filename="gdk/gdkevents.h" line="477"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="keyboard" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="implicit" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="grab_window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
    </record>
    <record name="EventKey" c:type="GdkEventKey">
      <source-position filename="gdk/gdkevents.h" line="355"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="keyval" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="length" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="string" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="hardware_keycode" writable="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="group" writable="1">
        <type name="guint8" c:type="guint8"/>
      </field>
      <field name="is_modifier" writable="1" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <bitfield name="EventMask" c:type="GdkEventMask">
      <source-position filename="gdk/gdkevents.h" line="185"/>
      <member name="exposure_mask" value="2" c:identifier="GDK_EXPOSURE_MASK">
      </member>
      <member name="pointer_motion_mask"
              value="4"
              c:identifier="GDK_POINTER_MOTION_MASK">
      </member>
      <member name="pointer_motion_hint_mask"
              value="8"
              c:identifier="GDK_POINTER_MOTION_HINT_MASK">
      </member>
      <member name="button_motion_mask"
              value="16"
              c:identifier="GDK_BUTTON_MOTION_MASK">
      </member>
      <member name="button1_motion_mask"
              value="32"
              c:identifier="GDK_BUTTON1_MOTION_MASK">
      </member>
      <member name="button2_motion_mask"
              value="64"
              c:identifier="GDK_BUTTON2_MOTION_MASK">
      </member>
      <member name="button3_motion_mask"
              value="128"
              c:identifier="GDK_BUTTON3_MOTION_MASK">
      </member>
      <member name="button_press_mask"
              value="256"
              c:identifier="GDK_BUTTON_PRESS_MASK">
      </member>
      <member name="button_release_mask"
              value="512"
              c:identifier="GDK_BUTTON_RELEASE_MASK">
      </member>
      <member name="key_press_mask"
              value="1024"
              c:identifier="GDK_KEY_PRESS_MASK">
      </member>
      <member name="key_release_mask"
              value="2048"
              c:identifier="GDK_KEY_RELEASE_MASK">
      </member>
      <member name="enter_notify_mask"
              value="4096"
              c:identifier="GDK_ENTER_NOTIFY_MASK">
      </member>
      <member name="leave_notify_mask"
              value="8192"
              c:identifier="GDK_LEAVE_NOTIFY_MASK">
      </member>
      <member name="focus_change_mask"
              value="16384"
              c:identifier="GDK_FOCUS_CHANGE_MASK">
      </member>
      <member name="structure_mask"
              value="32768"
              c:identifier="GDK_STRUCTURE_MASK">
      </member>
      <member name="property_change_mask"
              value="65536"
              c:identifier="GDK_PROPERTY_CHANGE_MASK">
      </member>
      <member name="visibility_notify_mask"
              value="131072"
              c:identifier="GDK_VISIBILITY_NOTIFY_MASK">
      </member>
      <member name="proximity_in_mask"
              value="262144"
              c:identifier="GDK_PROXIMITY_IN_MASK">
      </member>
      <member name="proximity_out_mask"
              value="524288"
              c:identifier="GDK_PROXIMITY_OUT_MASK">
      </member>
      <member name="substructure_mask"
              value="1048576"
              c:identifier="GDK_SUBSTRUCTURE_MASK">
      </member>
      <member name="scroll_mask"
              value="2097152"
              c:identifier="GDK_SCROLL_MASK">
      </member>
      <member name="all_events_mask"
              value="4194302"
              c:identifier="GDK_ALL_EVENTS_MASK">
      </member>
    </bitfield>
    <record name="EventMotion" c:type="GdkEventMotion">
      <source-position filename="gdk/gdkevents.h" line="311"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="x" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="axes" writable="1">
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="is_hint" writable="1">
        <type name="gint16" c:type="gint16"/>
      </field>
      <field name="device" writable="1">
        <type name="Device" c:type="GdkDevice*"/>
      </field>
      <field name="x_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
    </record>
    <record name="EventNoExpose" c:type="GdkEventNoExpose">
      <source-position filename="gdk/gdkevents.h" line="288"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
    </record>
    <record name="EventOwnerChange" c:type="GdkEventOwnerChange">
      <source-position filename="gdk/gdkevents.h" line="424"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="owner" writable="1">
        <type name="NativeWindow" c:type="GdkNativeWindow"/>
      </field>
      <field name="reason" writable="1">
        <type name="OwnerChange" c:type="GdkOwnerChange"/>
      </field>
      <field name="selection" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="selection_time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <record name="EventProperty" c:type="GdkEventProperty">
      <source-position filename="gdk/gdkevents.h" line="400"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="atom" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="EventProximity" c:type="GdkEventProximity">
      <source-position filename="gdk/gdkevents.h" line="436"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="device" writable="1">
        <type name="Device" c:type="GdkDevice*"/>
      </field>
    </record>
    <record name="EventScroll" c:type="GdkEventScroll">
      <source-position filename="gdk/gdkevents.h" line="340"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="x" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="state" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="direction" writable="1">
        <type name="ScrollDirection" c:type="GdkScrollDirection"/>
      </field>
      <field name="device" writable="1">
        <type name="Device" c:type="GdkDevice*"/>
      </field>
      <field name="x_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y_root" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
    </record>
    <record name="EventSelection" c:type="GdkEventSelection">
      <source-position filename="gdk/gdkevents.h" line="412"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="selection" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="target" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="property" writable="1">
        <type name="Atom" c:type="GdkAtom"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="requestor" writable="1">
        <type name="NativeWindow" c:type="GdkNativeWindow"/>
      </field>
    </record>
    <record name="EventSetting" c:type="GdkEventSetting">
      <source-position filename="gdk/gdkevents.h" line="459"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="action" writable="1">
        <type name="SettingAction" c:type="GdkSettingAction"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
    </record>
    <enumeration name="EventType" c:type="GdkEventType">
      <source-position filename="gdk/gdkevents.h" line="156"/>
      <member name="nothing" value="-1" c:identifier="GDK_NOTHING">
      </member>
      <member name="delete" value="0" c:identifier="GDK_DELETE">
      </member>
      <member name="destroy" value="1" c:identifier="GDK_DESTROY">
      </member>
      <member name="expose" value="2" c:identifier="GDK_EXPOSE">
      </member>
      <member name="motion_notify" value="3" c:identifier="GDK_MOTION_NOTIFY">
      </member>
      <member name="button_press" value="4" c:identifier="GDK_BUTTON_PRESS">
      </member>
      <member name="2button_press" value="5" c:identifier="GDK_2BUTTON_PRESS">
      </member>
      <member name="3button_press" value="6" c:identifier="GDK_3BUTTON_PRESS">
      </member>
      <member name="button_release"
              value="7"
              c:identifier="GDK_BUTTON_RELEASE">
      </member>
      <member name="key_press" value="8" c:identifier="GDK_KEY_PRESS">
      </member>
      <member name="key_release" value="9" c:identifier="GDK_KEY_RELEASE">
      </member>
      <member name="enter_notify" value="10" c:identifier="GDK_ENTER_NOTIFY">
      </member>
      <member name="leave_notify" value="11" c:identifier="GDK_LEAVE_NOTIFY">
      </member>
      <member name="focus_change" value="12" c:identifier="GDK_FOCUS_CHANGE">
      </member>
      <member name="configure" value="13" c:identifier="GDK_CONFIGURE">
      </member>
      <member name="map" value="14" c:identifier="GDK_MAP">
      </member>
      <member name="unmap" value="15" c:identifier="GDK_UNMAP">
      </member>
      <member name="property_notify"
              value="16"
              c:identifier="GDK_PROPERTY_NOTIFY">
      </member>
      <member name="selection_clear"
              value="17"
              c:identifier="GDK_SELECTION_CLEAR">
      </member>
      <member name="selection_request"
              value="18"
              c:identifier="GDK_SELECTION_REQUEST">
      </member>
      <member name="selection_notify"
              value="19"
              c:identifier="GDK_SELECTION_NOTIFY">
      </member>
      <member name="proximity_in" value="20" c:identifier="GDK_PROXIMITY_IN">
      </member>
      <member name="proximity_out" value="21" c:identifier="GDK_PROXIMITY_OUT">
      </member>
      <member name="drag_enter" value="22" c:identifier="GDK_DRAG_ENTER">
      </member>
      <member name="drag_leave" value="23" c:identifier="GDK_DRAG_LEAVE">
      </member>
      <member name="drag_motion" value="24" c:identifier="GDK_DRAG_MOTION">
      </member>
      <member name="drag_status" value="25" c:identifier="GDK_DRAG_STATUS">
      </member>
      <member name="drop_start" value="26" c:identifier="GDK_DROP_START">
      </member>
      <member name="drop_finished" value="27" c:identifier="GDK_DROP_FINISHED">
      </member>
      <member name="client_event" value="28" c:identifier="GDK_CLIENT_EVENT">
      </member>
      <member name="visibility_notify"
              value="29"
              c:identifier="GDK_VISIBILITY_NOTIFY">
      </member>
      <member name="no_expose" value="30" c:identifier="GDK_NO_EXPOSE">
      </member>
      <member name="scroll" value="31" c:identifier="GDK_SCROLL">
      </member>
      <member name="window_state" value="32" c:identifier="GDK_WINDOW_STATE">
      </member>
      <member name="setting" value="33" c:identifier="GDK_SETTING">
      </member>
      <member name="owner_change" value="34" c:identifier="GDK_OWNER_CHANGE">
      </member>
      <member name="grab_broken" value="35" c:identifier="GDK_GRAB_BROKEN">
      </member>
      <member name="damage" value="36" c:identifier="GDK_DAMAGE">
      </member>
      <member name="event_last" value="37" c:identifier="GDK_EVENT_LAST">
      </member>
    </enumeration>
    <record name="EventVisibility" c:type="GdkEventVisibility">
      <source-position filename="gdk/gdkevents.h" line="296"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="state" writable="1">
        <type name="VisibilityState" c:type="GdkVisibilityState"/>
      </field>
    </record>
    <record name="EventWindowState" c:type="GdkEventWindowState">
      <source-position filename="gdk/gdkevents.h" line="468"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="GdkEventType"/>
      </field>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="send_event" writable="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="changed_mask" writable="1">
        <type name="WindowState" c:type="GdkWindowState"/>
      </field>
      <field name="new_window_state" writable="1">
        <type name="WindowState" c:type="GdkWindowState"/>
      </field>
    </record>
    <enumeration name="ExtensionMode" c:type="GdkExtensionMode">
      <source-position filename="gdk/gdkinput.h" line="56"/>
      <member name="none" value="0" c:identifier="GDK_EXTENSION_EVENTS_NONE">
      </member>
      <member name="all" value="1" c:identifier="GDK_EXTENSION_EVENTS_ALL">
      </member>
      <member name="cursor"
              value="2"
              c:identifier="GDK_EXTENSION_EVENTS_CURSOR">
      </member>
    </enumeration>
    <enumeration name="Fill" c:type="GdkFill">
      <source-position filename="gdk/gdkgc.h" line="68"/>
      <member name="solid" value="0" c:identifier="GDK_SOLID">
      </member>
      <member name="tiled" value="1" c:identifier="GDK_TILED">
      </member>
      <member name="stippled" value="2" c:identifier="GDK_STIPPLED">
      </member>
      <member name="opaque_stippled"
              value="3"
              c:identifier="GDK_OPAQUE_STIPPLED">
      </member>
    </enumeration>
    <enumeration name="FillRule" c:type="GdkFillRule">
      <source-position filename="gdk/gdkregion.h" line="47"/>
      <member name="even_odd_rule" value="0" c:identifier="GDK_EVEN_ODD_RULE">
      </member>
      <member name="winding_rule" value="1" c:identifier="GDK_WINDING_RULE">
      </member>
    </enumeration>
    <callback name="FilterFunc" c:type="GdkFilterFunc">
      <source-position filename="gdk/gdkevents.h" line="87"/>
      <return-value transfer-ownership="none">
        <type name="FilterReturn" c:type="GdkFilterReturn"/>
      </return-value>
      <parameters>
        <parameter name="xevent" transfer-ownership="none">
          <type name="XEvent" c:type="GdkXEvent*"/>
        </parameter>
        <parameter name="event" transfer-ownership="none">
          <type name="Event" c:type="GdkEvent*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="FilterReturn" c:type="GdkFilterReturn">
      <source-position filename="gdk/gdkevents.h" line="85"/>
      <member name="continue" value="0" c:identifier="GDK_FILTER_CONTINUE">
      </member>
      <member name="translate" value="1" c:identifier="GDK_FILTER_TRANSLATE">
      </member>
      <member name="remove" value="2" c:identifier="GDK_FILTER_REMOVE">
      </member>
    </enumeration>
    <record name="Font"
            c:type="GdkFont"
            glib:type-name="GdkFont"
            glib:get-type="gdk_font_get_type"
            c:symbol-prefix="font">
      <source-position filename="gdk/gdkfont.h" line="54"/>
      <field name="type" writable="1">
        <type name="FontType" c:type="GdkFontType"/>
      </field>
      <field name="ascent" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="descent" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <method name="equal" c:identifier="gdk_font_equal">
        <source-position filename="gdk/gdkfont.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="fonta" transfer-ownership="none">
            <type name="Font" c:type="const GdkFont*"/>
          </instance-parameter>
          <parameter name="fontb" transfer-ownership="none">
            <type name="Font" c:type="const GdkFont*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gdk_font_get_display"
              introspectable="0">
        <source-position filename="gdk/gdkfont.h" line="130"/>
        <return-value>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="font" transfer-ownership="none">
            <type name="Font" c:type="GdkFont*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="id" c:identifier="gdk_font_id">
        <source-position filename="gdk/gdkfont.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="font" transfer-ownership="none">
            <type name="Font" c:type="const GdkFont*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="gdk_font_ref">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="47">Increases the reference count of a font by one.</doc>
        <source-position filename="gdk/gdkfont.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="53">@font</doc>
          <type name="Font" c:type="GdkFont*"/>
        </return-value>
        <parameters>
          <instance-parameter name="font" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkfont.c"
                 line="49">a #GdkFont</doc>
            <type name="Font" c:type="GdkFont*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="gdk_font_unref">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="67">Decreases the reference count of a font by one.
If the result is zero, destroys the font.</doc>
        <source-position filename="gdk/gdkfont.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="font" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkfont.c"
                 line="69">a #GdkFont</doc>
            <type name="Font" c:type="GdkFont*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_description"
                c:identifier="gdk_font_from_description">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="322">Load a #GdkFont based on a Pango font description. This font will
only be an approximation of the Pango font, and
internationalization will not be handled correctly. This function
should only be used for legacy code that cannot be easily converted
to use Pango. Using Pango directly will produce better results.</doc>
        <source-position filename="gdk/gdkfont.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="332">the newly loaded font, or %NULL if the font
cannot be loaded.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </return-value>
        <parameters>
          <parameter name="font_desc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkfont.c"
                 line="324">a #PangoFontDescription.</doc>
            <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_description_for_display"
                c:identifier="gdk_font_from_description_for_display">
        <source-position filename="gdk/gdkfont.h" line="68"/>
        <return-value transfer-ownership="full">
          <type name="Font" c:type="GdkFont*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="font_desc" transfer-ownership="none">
            <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
          </parameter>
        </parameters>
      </function>
      <function name="load" c:identifier="gdk_font_load">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="341">Loads a font.

The font may be newly loaded or looked up the font in a cache.
You should make no assumptions about the initial reference count.</doc>
        <source-position filename="gdk/gdkfont.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="350">a #GdkFont, or %NULL if the font could not be loaded.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </return-value>
        <parameters>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkfont.c"
                 line="343">a XLFD describing the font to load.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_for_display"
                c:identifier="gdk_font_load_for_display">
        <source-position filename="gdk/gdkfont.h" line="64"/>
        <return-value transfer-ownership="full">
          <type name="Font" c:type="GdkFont*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="font_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="FontType" c:type="GdkFontType">
      <source-position filename="gdk/gdkfont.h" line="47"/>
      <member name="font" value="0" c:identifier="GDK_FONT_FONT">
      </member>
      <member name="fontset" value="1" c:identifier="GDK_FONT_FONTSET">
      </member>
    </enumeration>
    <enumeration name="Function" c:type="GdkFunction">
      <source-position filename="gdk/gdkgc.h" line="106"/>
      <member name="copy" value="0" c:identifier="GDK_COPY">
      </member>
      <member name="invert" value="1" c:identifier="GDK_INVERT">
      </member>
      <member name="xor" value="2" c:identifier="GDK_XOR">
      </member>
      <member name="clear" value="3" c:identifier="GDK_CLEAR">
      </member>
      <member name="and" value="4" c:identifier="GDK_AND">
      </member>
      <member name="and_reverse" value="5" c:identifier="GDK_AND_REVERSE">
      </member>
      <member name="and_invert" value="6" c:identifier="GDK_AND_INVERT">
      </member>
      <member name="noop" value="7" c:identifier="GDK_NOOP">
      </member>
      <member name="or" value="8" c:identifier="GDK_OR">
      </member>
      <member name="equiv" value="9" c:identifier="GDK_EQUIV">
      </member>
      <member name="or_reverse" value="10" c:identifier="GDK_OR_REVERSE">
      </member>
      <member name="copy_invert" value="11" c:identifier="GDK_COPY_INVERT">
      </member>
      <member name="or_invert" value="12" c:identifier="GDK_OR_INVERT">
      </member>
      <member name="nand" value="13" c:identifier="GDK_NAND">
      </member>
      <member name="nor" value="14" c:identifier="GDK_NOR">
      </member>
      <member name="set" value="15" c:identifier="GDK_SET">
      </member>
    </enumeration>
    <class name="GC"
           c:symbol-prefix="gc"
           c:type="GdkGC"
           parent="GObject.Object"
           glib:type-name="GdkGC"
           glib:get-type="gdk_gc_get_type"
           glib:type-struct="GCClass">
      <source-position filename="gdk/gdkgc.h" line="220"/>
      <constructor name="new"
                   c:identifier="gdk_gc_new"
                   deprecated="1"
                   deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="94">Create a new graphics context with default values.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="225"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkgc.c"
               line="101">the new graphics context.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="96">a #GdkDrawable. The created GC must always be used
  with drawables of the same depth as this one.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_values"
                   c:identifier="gdk_gc_new_with_values"
                   deprecated="1"
                   deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="113">Create a new GC with the given initial values.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="226"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkgc.c"
               line="123">the new graphics context.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="115">a #GdkDrawable. The created GC must always be used
  with drawables of the same depth as this one.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="117">a structure containing initial values for the GC.</doc>
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
          <parameter name="values_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="118">a bit mask indicating which fields in @values
  are set.</doc>
            <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_values"
                      invoker="get_values"
                      deprecated="1"
                      deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="261">Retrieves the current values from a graphics context. Note that
only the pixel values of the @values-&gt;foreground and @values-&gt;background
are filled, use gdk_colormap_query_color() to obtain the rgb values
if you need them.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="263">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="264">the #GdkGCValues structure in which to store the results.</doc>
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_dashes"
                      invoker="set_dashes"
                      deprecated="1"
                      deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1084">Sets the way dashed-lines are drawn. Lines will be
drawn with alternating on and off segments of the
lengths specified in @dash_list. The manner in
which the on and off segments are drawn is determined
by the @line_style value of the GC. (This can
be changed with gdk_gc_set_line_attributes().)

The @dash_offset defines the phase of the pattern,
specifying how many pixels into the dash-list the pattern
should actually begin.</doc>
        <doc-deprecated xml:space="preserve">Use cairo_set_dash() to set the dash in Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1086">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="dash_offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1087">the phase of the dash pattern.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dash_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1088">an array of dash lengths.</doc>
            <type name="gint8" c:type="gint8*"/>
          </parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1089">the number of elements in @dash_list.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_values"
                      invoker="set_values"
                      deprecated="1"
                      deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="283">Sets attributes of a graphics context in bulk. For each flag set in
@values_mask, the corresponding field will be read from @values and
set as the new value for @gc. If you're only setting a few values
on @gc, calling individual "setter" functions is likely more
convenient.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="207"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="285">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="286">struct containing the new values</doc>
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="copy"
              c:identifier="gdk_gc_copy"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1152">Copy the set of values from one graphics context
onto another graphics context.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for drawing. cairo_save() and cairo_restore()
can be helpful in cases where you'd have copied a #GdkGC.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="280"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dst_gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1154">the destination graphics context.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="src_gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1155">the source graphics context.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_colormap"
              c:identifier="gdk_gc_get_colormap"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1268">Retrieves the colormap for a given GC, if it exists.
A GC will have a colormap if the drawable for which it was created
has a colormap, or if a colormap was set explicitely with
gdk_gc_set_colormap.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement. Cairo handles colormaps
automatically, so there is no need to care about them.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="286"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkgc.c"
               line="1277">the colormap of @gc, or %NULL if @gc doesn't have one.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1270">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_gc_get_screen"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkgc-x11.c"
             line="651">Gets the #GdkScreen for which @gc was created</doc>
        <source-position filename="gdk/gdkgc.h" line="291"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkgc-x11.c"
               line="657">the #GdkScreen for @gc.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkgc-x11.c"
                 line="653">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="gdk_gc_get_values"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="261">Retrieves the current values from a graphics context. Note that
only the pixel values of the @values-&gt;foreground and @values-&gt;background
are filled, use gdk_colormap_query_color() to obtain the rgb values
if you need them.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="233"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="263">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="264">the #GdkGCValues structure in which to store the results.</doc>
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
        </parameters>
      </method>
      <method name="offset"
              c:identifier="gdk_gc_offset"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1116">Offset attributes such as the clip and tile-stipple origins
of the GC so that drawing at x - x_offset, y - y_offset with
the offset GC  has the same effect as drawing at x, y with the original
GC.</doc>
        <doc-deprecated xml:space="preserve">There is no direct replacement, as this is just a
convenience function for gdk_gc_set_ts_origin and gdk_gc_set_clip_origin().</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="277"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1118">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="x_offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1119">amount by which to offset the GC in the X direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1120">amount by which to offset the GC in the Y direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_gc_ref"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="231">Deprecated function; use g_object_ref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="230"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkgc.c"
               line="237">the gc.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="233">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_background"
              c:identifier="gdk_gc_set_background"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="401">Sets the background color for a graphics context.
Note that this function uses @color-&gt;pixel, use
gdk_gc_set_rgb_bg_color() to specify the background
color as red, green, blue components.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_color() to use a #GdkColor
as the source in Cairo. Note that if you want to draw a background and a
foreground in Cairo, you need to call drawing functions (like cairo_fill())
twice.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="403">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="404">the new background color.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_mask"
              c:identifier="gdk_gc_set_clip_mask"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="612">Sets the clip mask for a graphics context from a bitmap.
The clip mask is interpreted relative to the clip
origin. (See gdk_gc_set_clip_origin()).</doc>
        <doc-deprecated xml:space="preserve">Use cairo_mask() instead.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="258"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="614">the #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="615">a bitmap.</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_origin"
              c:identifier="gdk_gc_set_clip_origin"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="583">Sets the origin of the clip mask. The coordinates are
interpreted relative to the upper-left corner of
the destination drawable of the current operation.</doc>
        <doc-deprecated xml:space="preserve">Use cairo_translate() before applying the clip path in
Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="585">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="586">the x-coordinate of the origin.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="587">the y-coordinate of the origin.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_rectangle"
              c:identifier="gdk_gc_set_clip_rectangle"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="791">Sets the clip mask for a graphics context from a
rectangle. The clip mask is interpreted relative to the clip
origin. (See gdk_gc_set_clip_origin()).</doc>
        <doc-deprecated xml:space="preserve">Use cairo_rectangle() and cairo_clip() in Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="793">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="794">the rectangle to clip to.</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_region"
              c:identifier="gdk_gc_set_clip_region"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="820">Sets the clip mask for a graphics context from a region structure.
The clip mask is interpreted relative to the clip origin. (See
gdk_gc_set_clip_origin()).</doc>
        <doc-deprecated xml:space="preserve">Use gdk_cairo_region() and cairo_clip() in Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="262"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="822">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="823">the #GdkRegion.</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_colormap"
              c:identifier="gdk_gc_set_colormap"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1238">Sets the colormap for the GC to the given colormap. The depth
of the colormap's visual must match the depth of the drawable
for which the GC was created.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement. Cairo handles colormaps
automatically, so there is no need to care about them.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="284"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1240">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1241">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dashes"
              c:identifier="gdk_gc_set_dashes"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1084">Sets the way dashed-lines are drawn. Lines will be
drawn with alternating on and off segments of the
lengths specified in @dash_list. The manner in
which the on and off segments are drawn is determined
by the @line_style value of the GC. (This can
be changed with gdk_gc_set_line_attributes().)

The @dash_offset defines the phase of the pattern,
specifying how many pixels into the dash-list the pattern
should actually begin.</doc>
        <doc-deprecated xml:space="preserve">Use cairo_set_dash() to set the dash in Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="273"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1086">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="dash_offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1087">the phase of the dash pattern.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dash_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1088">an array of dash lengths.</doc>
            <type name="gint8" c:type="gint8*"/>
          </parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1089">the number of elements in @dash_list.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposures"
              c:identifier="gdk_gc_set_exposures"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1018">Sets whether copying non-visible portions of a drawable
using this graphics context generate exposure events
for the corresponding regions of the destination
drawable. (See gdk_draw_drawable()).</doc>
        <doc-deprecated xml:space="preserve">There is no replacement. If you need to control
exposures, you must use drawing operations of the underlying window
system or use gdk_window_invalidate_rect(). Cairo will never
generate exposures.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1020">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="exposures" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1021">if %TRUE, exposure events will be generated.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fill"
              c:identifier="gdk_gc_set_fill"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="475">Set the fill mode for a graphics context.</doc>
        <doc-deprecated xml:space="preserve">You can achieve tiling in Cairo by using
cairo_pattern_set_extend() on the source. For stippling, see the
deprecation comments on gdk_gc_set_stipple().</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="246"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="477">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="478">the new fill mode.</doc>
            <type name="Fill" c:type="GdkFill"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font" c:identifier="gdk_gc_set_font">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="429">Sets the font for a graphics context. (Note that
all text-drawing functions in GDK take a @font
argument; the value set here is used when that
argument is %NULL.)</doc>
        <source-position filename="gdk/gdkgc.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="431">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="font" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="432">the new font.</doc>
            <type name="Font" c:type="GdkFont*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_foreground"
              c:identifier="gdk_gc_set_foreground"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="375">Sets the foreground color for a graphics context.
Note that this function uses @color-&gt;pixel, use
gdk_gc_set_rgb_fg_color() to specify the foreground
color as red, green, blue components.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_color() to use a #GdkColor
as the source in Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="377">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="378">the new foreground color.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_function"
              c:identifier="gdk_gc_set_function"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="452">Determines how the current pixel values and the
pixel values being drawn are combined to produce
the final pixel values.</doc>
        <doc-deprecated xml:space="preserve">Use cairo_set_operator() with Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="454">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="455">the #GdkFunction to use</doc>
            <type name="Function" c:type="GdkFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line_attributes"
              c:identifier="gdk_gc_set_line_attributes"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1045">Sets various attributes of how lines are drawn. See
the corresponding members of #GdkGCValues for full
explanations of the arguments.</doc>
        <doc-deprecated xml:space="preserve">Use the Cairo functions cairo_set_line_width(),
cairo_set_line_join(), cairo_set_line_cap() and cairo_set_dash()
to affect the stroking behavior in Cairo. Keep in mind that the default
attributes of a #cairo_t are different from the default attributes of
a #GdkGC.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="268"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1047">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="line_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1048">the width of lines.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="line_style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1049">the dash-style for lines.</doc>
            <type name="LineStyle" c:type="GdkLineStyle"/>
          </parameter>
          <parameter name="cap_style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1050">the manner in which the ends of lines are drawn.</doc>
            <type name="CapStyle" c:type="GdkCapStyle"/>
          </parameter>
          <parameter name="join_style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1051">the in which lines are joined together.</doc>
            <type name="JoinStyle" c:type="GdkJoinStyle"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rgb_bg_color"
              c:identifier="gdk_gc_set_rgb_bg_color"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1340">Set the background color of a GC using an unallocated color. The
pixel value for the color will be determined using GdkRGB. If the
colormap for the GC has not previously been initialized for GdkRGB,
then for pseudo-color colormaps (colormaps with a small modifiable
number of colors), a colorcube will be allocated in the colormap.

Calling this function for a GC without a colormap is an error.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_color() instead.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="289"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1342">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1343">an unallocated #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rgb_fg_color"
              c:identifier="gdk_gc_set_rgb_fg_color"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="1306">Set the foreground color of a GC using an unallocated color. The
pixel value for the color will be determined using GdkRGB. If the
colormap for the GC has not previously been initialized for GdkRGB,
then for pseudo-color colormaps (colormaps with a small modifiable
number of colors), a colorcube will be allocated in the colormap.

Calling this function for a GC without a colormap is an error.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_color() instead.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1308">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="1309">an unallocated #GdkColor.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stipple"
              c:identifier="gdk_gc_set_stipple"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="524">Set the stipple bitmap for a graphics context. The
stipple will only be used if the fill mode is
%GDK_STIPPLED or %GDK_OPAQUE_STIPPLED.</doc>
        <doc-deprecated xml:space="preserve">Stippling has no direct replacement in Cairo. If you
want to achieve an identical look, you can use the stipple bitmap as a
mask. Most likely, this involves rendering the source to an intermediate
surface using cairo_push_group() first, so that you can then use
cairo_mask() to achieve the stippled look.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="250"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="526">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="stipple" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="527">the new stipple bitmap.</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subwindow"
              c:identifier="gdk_gc_set_subwindow"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="979">Sets how drawing with this GC on a window will affect child
windows of that window.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement. If you need to control
subwindows, you must use drawing operations of the underlying window
system manually. Cairo will always use %GDK_INCLUDE_INFERIORS on sources
and masks and %GDK_CLIP_BY_CHILDREN on targets.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="981">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="982">the subwindow mode.</doc>
            <type name="SubwindowMode" c:type="GdkSubwindowMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tile"
              c:identifier="gdk_gc_set_tile"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="498">Set a tile pixmap for a graphics context.
This will only be used if the fill mode
is %GDK_TILED.</doc>
        <doc-deprecated xml:space="preserve">The following code snippet sets a tiling #GdkPixmap
as the source in Cairo:
|[gdk_cairo_set_source_pixmap (cr, tile, ts_origin_x, ts_origin_y);
cairo_pattern_set_extend (cairo_get_source (cr), CAIRO_EXTEND_REPEAT);]|</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="500">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="tile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="501">the new tile pixmap.</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ts_origin"
              c:identifier="gdk_gc_set_ts_origin"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="551">Set the origin when using tiles or stipples with
the GC. The tile or stipple will be aligned such
that the upper left corner of the tile or stipple
will coincide with this point.</doc>
        <doc-deprecated xml:space="preserve">You can set the origin for tiles and stipples in Cairo
by changing the source's matrix using cairo_pattern_set_matrix(). Or you
can specify it with gdk_cairo_set_source_pixmap() as shown in the example
for gdk_gc_set_tile().</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="252"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="553">a #GdkGC.</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="554">the x-coordinate of the origin.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="555">the y-coordinate of the origin.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_values"
              c:identifier="gdk_gc_set_values"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="283">Sets attributes of a graphics context in bulk. For each flag set in
@values_mask, the corresponding field will be read from @values and
set as the new value for @gc. If you're only setting a few values
on @gc, calling individual "setter" functions is likely more
convenient.</doc>
        <doc-deprecated xml:space="preserve">Use Cairo for rendering.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="285">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="286">struct containing the new values</doc>
            <type name="GCValues" c:type="GdkGCValues*"/>
          </parameter>
          <parameter name="values_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="287">mask indicating which struct fields are to be used</doc>
            <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
          </parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gdk_gc_unref"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkgc.c"
             line="247">Decrement the reference count of @gc.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkgc.h" line="231"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkgc.c"
                 line="249">a #GdkGC</doc>
            <type name="GC" c:type="GdkGC*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="clip_x_origin">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="clip_y_origin">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="ts_x_origin">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="ts_y_origin">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="colormap">
        <type name="Colormap" c:type="GdkColormap*"/>
      </field>
    </class>
    <record name="GCClass" c:type="GdkGCClass" glib:is-gtype-struct-for="GC">
      <source-position filename="gdk/gdkgc.h" line="220"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_values">
        <callback name="get_values">
          <source-position filename="gdk/gdkgc.h" line="205"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="263">a #GdkGC.</doc>
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="264">the #GdkGCValues structure in which to store the results.</doc>
              <type name="GCValues" c:type="GdkGCValues*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_values">
        <callback name="set_values">
          <source-position filename="gdk/gdkgc.h" line="207"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="285">a #GdkGC</doc>
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="286">struct containing the new values</doc>
              <type name="GCValues" c:type="GdkGCValues*"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="GCValuesMask" c:type="GdkGCValuesMask"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_dashes">
        <callback name="set_dashes">
          <source-position filename="gdk/gdkgc.h" line="210"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="1086">a #GdkGC.</doc>
              <type name="GC" c:type="GdkGC*"/>
            </parameter>
            <parameter name="dash_offset" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="1087">the phase of the dash pattern.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dash_list" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="1088">an array of dash lengths.</doc>
              <type name="gint8" c:type="gint8*"/>
            </parameter>
            <parameter name="n" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdk/gdkgc.c"
                   line="1089">the number of elements in @dash_list.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gdk_reserved1" introspectable="0">
        <callback name="_gdk_reserved1">
          <source-position filename="gdk/gdkgc.h" line="216"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved2" introspectable="0">
        <callback name="_gdk_reserved2">
          <source-position filename="gdk/gdkgc.h" line="217"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved3" introspectable="0">
        <callback name="_gdk_reserved3">
          <source-position filename="gdk/gdkgc.h" line="218"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdk_reserved4" introspectable="0">
        <callback name="_gdk_reserved4">
          <source-position filename="gdk/gdkgc.h" line="219"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GCValues" c:type="GdkGCValues">
      <source-position filename="gdk/gdkgc.h" line="180"/>
      <field name="foreground" writable="1">
        <type name="Color" c:type="GdkColor"/>
      </field>
      <field name="background" writable="1">
        <type name="Color" c:type="GdkColor"/>
      </field>
      <field name="font" writable="1">
        <type name="Font" c:type="GdkFont*"/>
      </field>
      <field name="function" writable="1">
        <type name="Function" c:type="GdkFunction"/>
      </field>
      <field name="fill" writable="1">
        <type name="Fill" c:type="GdkFill"/>
      </field>
      <field name="tile" writable="1">
        <type name="Pixmap" c:type="GdkPixmap*"/>
      </field>
      <field name="stipple" writable="1">
        <type name="Pixmap" c:type="GdkPixmap*"/>
      </field>
      <field name="clip_mask" writable="1">
        <type name="Pixmap" c:type="GdkPixmap*"/>
      </field>
      <field name="subwindow_mode" writable="1">
        <type name="SubwindowMode" c:type="GdkSubwindowMode"/>
      </field>
      <field name="ts_x_origin" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="ts_y_origin" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="clip_x_origin" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="clip_y_origin" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="graphics_exposures" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="line_width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="line_style" writable="1">
        <type name="LineStyle" c:type="GdkLineStyle"/>
      </field>
      <field name="cap_style" writable="1">
        <type name="CapStyle" c:type="GdkCapStyle"/>
      </field>
      <field name="join_style" writable="1">
        <type name="JoinStyle" c:type="GdkJoinStyle"/>
      </field>
    </record>
    <bitfield name="GCValuesMask" c:type="GdkGCValuesMask">
      <source-position filename="gdk/gdkgc.h" line="158"/>
      <member name="foreground" value="1" c:identifier="GDK_GC_FOREGROUND">
      </member>
      <member name="background" value="2" c:identifier="GDK_GC_BACKGROUND">
      </member>
      <member name="font" value="4" c:identifier="GDK_GC_FONT">
      </member>
      <member name="function" value="8" c:identifier="GDK_GC_FUNCTION">
      </member>
      <member name="fill" value="16" c:identifier="GDK_GC_FILL">
      </member>
      <member name="tile" value="32" c:identifier="GDK_GC_TILE">
      </member>
      <member name="stipple" value="64" c:identifier="GDK_GC_STIPPLE">
      </member>
      <member name="clip_mask" value="128" c:identifier="GDK_GC_CLIP_MASK">
      </member>
      <member name="subwindow" value="256" c:identifier="GDK_GC_SUBWINDOW">
      </member>
      <member name="ts_x_origin" value="512" c:identifier="GDK_GC_TS_X_ORIGIN">
      </member>
      <member name="ts_y_origin"
              value="1024"
              c:identifier="GDK_GC_TS_Y_ORIGIN">
      </member>
      <member name="clip_x_origin"
              value="2048"
              c:identifier="GDK_GC_CLIP_X_ORIGIN">
      </member>
      <member name="clip_y_origin"
              value="4096"
              c:identifier="GDK_GC_CLIP_Y_ORIGIN">
      </member>
      <member name="exposures" value="8192" c:identifier="GDK_GC_EXPOSURES">
      </member>
      <member name="line_width" value="16384" c:identifier="GDK_GC_LINE_WIDTH">
      </member>
      <member name="line_style" value="32768" c:identifier="GDK_GC_LINE_STYLE">
      </member>
      <member name="cap_style" value="65536" c:identifier="GDK_GC_CAP_STYLE">
      </member>
      <member name="join_style"
              value="131072"
              c:identifier="GDK_GC_JOIN_STYLE">
      </member>
    </bitfield>
    <function-macro name="GC_CLASS"
                    c:identifier="GDK_GC_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkgc.h" line="184"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_GET_CLASS"
                    c:identifier="GDK_GC_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkgc.h" line="187"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GPOINTER_TO_NATIVE_WINDOW"
                    c:identifier="GDK_GPOINTER_TO_NATIVE_WINDOW"
                    introspectable="0">
      <source-position filename="gdk/gdktypes.h" line="86"/>
      <parameters>
        <parameter name="p">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Geometry" c:type="GdkGeometry">
      <source-position filename="gdk/gdkwindow.h" line="239"/>
      <field name="min_width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="min_height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="base_width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="base_height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="width_inc" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="height_inc" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="min_aspect" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="max_aspect" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="win_gravity" writable="1">
        <type name="Gravity" c:type="GdkGravity"/>
      </field>
    </record>
    <enumeration name="GrabStatus" c:type="GdkGrabStatus">
      <source-position filename="gdk/gdktypes.h" line="182"/>
      <member name="success" value="0" c:identifier="GDK_GRAB_SUCCESS">
      </member>
      <member name="already_grabbed"
              value="1"
              c:identifier="GDK_GRAB_ALREADY_GRABBED">
      </member>
      <member name="invalid_time"
              value="2"
              c:identifier="GDK_GRAB_INVALID_TIME">
      </member>
      <member name="not_viewable"
              value="3"
              c:identifier="GDK_GRAB_NOT_VIEWABLE">
      </member>
      <member name="frozen" value="4" c:identifier="GDK_GRAB_FROZEN">
      </member>
    </enumeration>
    <enumeration name="Gravity" c:type="GdkGravity">
      <source-position filename="gdk/gdkwindow.h" line="193"/>
      <member name="north_west"
              value="1"
              c:identifier="GDK_GRAVITY_NORTH_WEST">
      </member>
      <member name="north" value="2" c:identifier="GDK_GRAVITY_NORTH">
      </member>
      <member name="north_east"
              value="3"
              c:identifier="GDK_GRAVITY_NORTH_EAST">
      </member>
      <member name="west" value="4" c:identifier="GDK_GRAVITY_WEST">
      </member>
      <member name="center" value="5" c:identifier="GDK_GRAVITY_CENTER">
      </member>
      <member name="east" value="6" c:identifier="GDK_GRAVITY_EAST">
      </member>
      <member name="south_west"
              value="7"
              c:identifier="GDK_GRAVITY_SOUTH_WEST">
      </member>
      <member name="south" value="8" c:identifier="GDK_GRAVITY_SOUTH">
      </member>
      <member name="south_east"
              value="9"
              c:identifier="GDK_GRAVITY_SOUTH_EAST">
      </member>
      <member name="static" value="10" c:identifier="GDK_GRAVITY_STATIC">
      </member>
    </enumeration>
    <function-macro name="IMAGE" c:identifier="GDK_IMAGE" introspectable="0">
      <source-position filename="gdk/gdkimage.h" line="59"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_CLASS"
                    c:identifier="GDK_IMAGE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkimage.h" line="60"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_GET_CLASS"
                    c:identifier="GDK_IMAGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkimage.h" line="63"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_APP_LAUNCH_CONTEXT"
                    c:identifier="GDK_IS_APP_LAUNCH_CONTEXT"
                    introspectable="0">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_APP_LAUNCH_CONTEXT_CLASS"
                    c:identifier="GDK_IS_APP_LAUNCH_CONTEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkapplaunchcontext.h" line="39"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLORMAP"
                    c:identifier="GDK_IS_COLORMAP"
                    introspectable="0">
      <source-position filename="gdk/gdkcolor.h" line="62"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLORMAP_CLASS"
                    c:identifier="GDK_IS_COLORMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkcolor.h" line="63"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE"
                    c:identifier="GDK_IS_DEVICE"
                    introspectable="0">
      <source-position filename="gdk/gdkinput.h" line="41"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE_CLASS"
                    c:identifier="GDK_IS_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkinput.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISPLAY"
                    c:identifier="GDK_IS_DISPLAY"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplay.h" line="42"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISPLAY_CLASS"
                    c:identifier="GDK_IS_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplay.h" line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISPLAY_MANAGER"
                    c:identifier="GDK_IS_DISPLAY_MANAGER"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplaymanager.h" line="45"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISPLAY_MANAGER_CLASS"
                    c:identifier="GDK_IS_DISPLAY_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdisplaymanager.h" line="46"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAG_CONTEXT"
                    c:identifier="GDK_IS_DRAG_CONTEXT"
                    introspectable="0">
      <source-position filename="gdk/gdkdnd.h" line="71"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAG_CONTEXT_CLASS"
                    c:identifier="GDK_IS_DRAG_CONTEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdnd.h" line="72"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAWABLE"
                    c:identifier="GDK_IS_DRAWABLE"
                    introspectable="0">
      <source-position filename="gdk/gdkdrawable.h" line="49"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAWABLE_CLASS"
                    c:identifier="GDK_IS_DRAWABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkdrawable.h" line="50"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC" c:identifier="GDK_IS_GC" introspectable="0">
      <source-position filename="gdk/gdkgc.h" line="185"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CLASS"
                    c:identifier="GDK_IS_GC_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkgc.h" line="186"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_IMAGE"
                    c:identifier="GDK_IS_IMAGE"
                    introspectable="0">
      <source-position filename="gdk/gdkimage.h" line="61"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_IMAGE_CLASS"
                    c:identifier="GDK_IS_IMAGE_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkimage.h" line="62"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_KEYMAP"
                    c:identifier="GDK_IS_KEYMAP"
                    introspectable="0">
      <source-position filename="gdk/gdkkeys.h" line="62"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_KEYMAP_CLASS"
                    c:identifier="GDK_IS_KEYMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkkeys.h" line="63"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PANGO_RENDERER"
                    c:identifier="GDK_IS_PANGO_RENDERER"
                    introspectable="0">
      <source-position filename="gdk/gdkpango.h" line="39"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PANGO_RENDERER_CLASS"
                    c:identifier="GDK_IS_PANGO_RENDERER_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpango.h" line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PIXMAP"
                    c:identifier="GDK_IS_PIXMAP"
                    introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="45"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PIXMAP_CLASS"
                    c:identifier="GDK_IS_PIXMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="46"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCREEN"
                    c:identifier="GDK_IS_SCREEN"
                    introspectable="0">
      <source-position filename="gdk/gdkscreen.h" line="42"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCREEN_CLASS"
                    c:identifier="GDK_IS_SCREEN_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkscreen.h" line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VISUAL"
                    c:identifier="GDK_IS_VISUAL"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="41"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VISUAL_CLASS"
                    c:identifier="GDK_IS_VISUAL_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WINDOW"
                    c:identifier="GDK_IS_WINDOW"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="258"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WINDOW_CLASS"
                    c:identifier="GDK_IS_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="259"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Image"
           c:symbol-prefix="image"
           c:type="GdkImage"
           parent="GObject.Object"
           glib:type-name="GdkImage"
           glib:get-type="gdk_image_get_type"
           glib:type-struct="ImageClass">
      <source-position filename="gdk/gdkimage.h" line="91"/>
      <constructor name="new" c:identifier="gdk_image_new">
        <source-position filename="gdk/gdkimage.h" line="96"/>
        <return-value transfer-ownership="full">
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="ImageType" c:type="GdkImageType"/>
          </parameter>
          <parameter name="visual" transfer-ownership="none">
            <type name="Visual" c:type="GdkVisual*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get" c:identifier="gdk_image_get" introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="71">This is a deprecated wrapper for gdk_drawable_get_image();
gdk_drawable_get_image() should be used instead. Or even better: in
most cases gdk_pixbuf_get_from_drawable() is the most convenient
choice.</doc>
        <source-position filename="gdk/gdkimage.h" line="101"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="84">a new #GdkImage or %NULL</doc>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="73">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="74">x coordinate in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="75">y coordinate in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="76">width of area in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="77">height of area in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_bits_per_pixel"
              c:identifier="gdk_image_get_bits_per_pixel"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="313">Determines the number of bits per pixel of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="319">the bits per pixel</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="315">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="gdk_image_get_byte_order"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="193">Determines the byte order of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="199">a #GdkVisual</doc>
          <type name="ByteOrder" c:type="GdkByteOrder"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="195">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bytes_per_line"
              c:identifier="gdk_image_get_bytes_per_line"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="293">Determines the number of bytes per line of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="299">the bytes per line</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="295">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bytes_per_pixel"
              c:identifier="gdk_image_get_bytes_per_pixel"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="273">Determines the number of bytes per pixel of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="279">the bytes per pixel</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="275">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_colormap"
              c:identifier="gdk_image_get_colormap"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="132">Retrieves the colormap for a given image, if it exists.  An image
will have a colormap if the drawable from which it was created has
a colormap, or if a colormap was set explicitely with
gdk_image_set_colormap().</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="120"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="141">colormap for the image</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="134">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_depth"
              c:identifier="gdk_image_get_depth"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="253">Determines the depth of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="259">the depth</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="255">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdk_image_get_height"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="233">Determines the height of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="239">the height</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="235">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_type"
              c:identifier="gdk_image_get_image_type"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="153">Determines the type of a given image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="159">the #GdkImageType of the image</doc>
          <type name="ImageType" c:type="GdkImageType"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="155">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel" c:identifier="gdk_image_get_pixel">
        <source-position filename="gdk/gdkimage.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pixels"
              c:identifier="gdk_image_get_pixels"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="333">Returns a pointer to the pixel data of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="131"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="339">the pixel data of the image</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="335">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visual"
              c:identifier="gdk_image_get_visual"
              version="2.22"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="173">Determines the visual that was used to create the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="123"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="179">a #GdkVisual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="175">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdk_image_get_width"
              version="2.22"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="213">Determines the width of the image.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="219">the width</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="215">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="put_pixel" c:identifier="gdk_image_put_pixel">
        <source-position filename="gdk/gdkimage.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="pixel" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_image_ref"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="37">Deprecated function; use g_object_ref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="107"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkimage.c"
               line="43">the image</doc>
          <type name="Image" c:type="GdkImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="39">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_colormap"
              c:identifier="gdk_image_set_colormap"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="102">Sets the colormap for the image to the given colormap.  Normally
there's no need to use this function, images are created with the
correct colormap if you get the image from a drawable. If you
create the image from scratch, use the colormap of the drawable you
intend to render the image to.</doc>
        <doc-deprecated xml:space="preserve">#GdkImage should not be used anymore.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="104">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="105">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gdk_image_unref"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkimage.c"
             line="55">Deprecated function; use g_object_unref() instead.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <source-position filename="gdk/gdkimage.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkimage.c"
                 line="57">a #GdkImage</doc>
            <type name="Image" c:type="GdkImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="type">
        <type name="ImageType" c:type="GdkImageType"/>
      </field>
      <field name="visual">
        <type name="Visual" c:type="GdkVisual*"/>
      </field>
      <field name="byte_order">
        <type name="ByteOrder" c:type="GdkByteOrder"/>
      </field>
      <field name="width">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="height">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="depth">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="bpp">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="bpl">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="bits_per_pixel">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="mem">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="colormap">
        <type name="Colormap" c:type="GdkColormap*"/>
      </field>
      <field name="windowing_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="ImageClass"
            c:type="GdkImageClass"
            glib:is-gtype-struct-for="Image">
      <source-position filename="gdk/gdkimage.h" line="91"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ImageType" c:type="GdkImageType">
      <source-position filename="gdk/gdkimage.h" line="54"/>
      <member name="normal" value="0" c:identifier="GDK_IMAGE_NORMAL">
      </member>
      <member name="shared" value="1" c:identifier="GDK_IMAGE_SHARED">
      </member>
      <member name="fastest" value="2" c:identifier="GDK_IMAGE_FASTEST">
      </member>
    </enumeration>
    <bitfield name="InputCondition" c:type="GdkInputCondition">
      <source-position filename="gdk/gdktypes.h" line="160"/>
      <member name="read" value="1" c:identifier="GDK_INPUT_READ">
      </member>
      <member name="write" value="2" c:identifier="GDK_INPUT_WRITE">
      </member>
      <member name="exception" value="4" c:identifier="GDK_INPUT_EXCEPTION">
      </member>
    </bitfield>
    <callback name="InputFunction" c:type="GdkInputFunction">
      <source-position filename="gdk/gdktypes.h" line="184"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="condition" transfer-ownership="none">
          <type name="InputCondition" c:type="GdkInputCondition"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="InputMode" c:type="GdkInputMode">
      <source-position filename="gdk/gdkinput.h" line="71"/>
      <member name="disabled" value="0" c:identifier="GDK_MODE_DISABLED">
      </member>
      <member name="screen" value="1" c:identifier="GDK_MODE_SCREEN">
      </member>
      <member name="window" value="2" c:identifier="GDK_MODE_WINDOW">
      </member>
    </enumeration>
    <enumeration name="InputSource" c:type="GdkInputSource">
      <source-position filename="gdk/gdkinput.h" line="64"/>
      <member name="mouse" value="0" c:identifier="GDK_SOURCE_MOUSE">
      </member>
      <member name="pen" value="1" c:identifier="GDK_SOURCE_PEN">
      </member>
      <member name="eraser" value="2" c:identifier="GDK_SOURCE_ERASER">
      </member>
      <member name="cursor" value="3" c:identifier="GDK_SOURCE_CURSOR">
      </member>
    </enumeration>
    <enumeration name="JoinStyle" c:type="GdkJoinStyle">
      <source-position filename="gdk/gdkgc.h" line="118"/>
      <member name="miter" value="0" c:identifier="GDK_JOIN_MITER">
      </member>
      <member name="round" value="1" c:identifier="GDK_JOIN_ROUND">
      </member>
      <member name="bevel" value="2" c:identifier="GDK_JOIN_BEVEL">
      </member>
    </enumeration>
    <function-macro name="KEYMAP" c:identifier="GDK_KEYMAP" introspectable="0">
      <source-position filename="gdk/gdkkeys.h" line="60"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="KEYMAP_CLASS"
                    c:identifier="GDK_KEYMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkkeys.h" line="61"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="KEYMAP_GET_CLASS"
                    c:identifier="GDK_KEYMAP_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkkeys.h" line="64"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="KEY_0" value="48" c:type="GDK_KEY_0">
      <source-position filename="gdk/gdkkeysyms.h" line="397"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_1" value="49" c:type="GDK_KEY_1">
      <source-position filename="gdk/gdkkeysyms.h" line="398"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_2" value="50" c:type="GDK_KEY_2">
      <source-position filename="gdk/gdkkeysyms.h" line="399"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3" value="51" c:type="GDK_KEY_3">
      <source-position filename="gdk/gdkkeysyms.h" line="400"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_AltCursor"
              value="64784"
              c:type="GDK_KEY_3270_AltCursor">
      <source-position filename="gdk/gdkkeysyms.h" line="365"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Attn" value="64782" c:type="GDK_KEY_3270_Attn">
      <source-position filename="gdk/gdkkeysyms.h" line="363"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_BackTab"
              value="64773"
              c:type="GDK_KEY_3270_BackTab">
      <source-position filename="gdk/gdkkeysyms.h" line="354"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_ChangeScreen"
              value="64793"
              c:type="GDK_KEY_3270_ChangeScreen">
      <source-position filename="gdk/gdkkeysyms.h" line="374"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Copy" value="64789" c:type="GDK_KEY_3270_Copy">
      <source-position filename="gdk/gdkkeysyms.h" line="370"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_CursorBlink"
              value="64783"
              c:type="GDK_KEY_3270_CursorBlink">
      <source-position filename="gdk/gdkkeysyms.h" line="364"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_CursorSelect"
              value="64796"
              c:type="GDK_KEY_3270_CursorSelect">
      <source-position filename="gdk/gdkkeysyms.h" line="377"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_DeleteWord"
              value="64794"
              c:type="GDK_KEY_3270_DeleteWord">
      <source-position filename="gdk/gdkkeysyms.h" line="375"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Duplicate"
              value="64769"
              c:type="GDK_KEY_3270_Duplicate">
      <source-position filename="gdk/gdkkeysyms.h" line="350"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Enter" value="64798" c:type="GDK_KEY_3270_Enter">
      <source-position filename="gdk/gdkkeysyms.h" line="379"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_EraseEOF"
              value="64774"
              c:type="GDK_KEY_3270_EraseEOF">
      <source-position filename="gdk/gdkkeysyms.h" line="355"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_EraseInput"
              value="64775"
              c:type="GDK_KEY_3270_EraseInput">
      <source-position filename="gdk/gdkkeysyms.h" line="356"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_ExSelect"
              value="64795"
              c:type="GDK_KEY_3270_ExSelect">
      <source-position filename="gdk/gdkkeysyms.h" line="376"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_FieldMark"
              value="64770"
              c:type="GDK_KEY_3270_FieldMark">
      <source-position filename="gdk/gdkkeysyms.h" line="351"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Ident" value="64787" c:type="GDK_KEY_3270_Ident">
      <source-position filename="gdk/gdkkeysyms.h" line="368"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Jump" value="64786" c:type="GDK_KEY_3270_Jump">
      <source-position filename="gdk/gdkkeysyms.h" line="367"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_KeyClick"
              value="64785"
              c:type="GDK_KEY_3270_KeyClick">
      <source-position filename="gdk/gdkkeysyms.h" line="366"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Left2" value="64772" c:type="GDK_KEY_3270_Left2">
      <source-position filename="gdk/gdkkeysyms.h" line="353"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA1" value="64778" c:type="GDK_KEY_3270_PA1">
      <source-position filename="gdk/gdkkeysyms.h" line="359"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA2" value="64779" c:type="GDK_KEY_3270_PA2">
      <source-position filename="gdk/gdkkeysyms.h" line="360"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA3" value="64780" c:type="GDK_KEY_3270_PA3">
      <source-position filename="gdk/gdkkeysyms.h" line="361"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Play" value="64790" c:type="GDK_KEY_3270_Play">
      <source-position filename="gdk/gdkkeysyms.h" line="371"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PrintScreen"
              value="64797"
              c:type="GDK_KEY_3270_PrintScreen">
      <source-position filename="gdk/gdkkeysyms.h" line="378"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Quit" value="64777" c:type="GDK_KEY_3270_Quit">
      <source-position filename="gdk/gdkkeysyms.h" line="358"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Record"
              value="64792"
              c:type="GDK_KEY_3270_Record">
      <source-position filename="gdk/gdkkeysyms.h" line="373"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Reset" value="64776" c:type="GDK_KEY_3270_Reset">
      <source-position filename="gdk/gdkkeysyms.h" line="357"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Right2"
              value="64771"
              c:type="GDK_KEY_3270_Right2">
      <source-position filename="gdk/gdkkeysyms.h" line="352"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Rule" value="64788" c:type="GDK_KEY_3270_Rule">
      <source-position filename="gdk/gdkkeysyms.h" line="369"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Setup" value="64791" c:type="GDK_KEY_3270_Setup">
      <source-position filename="gdk/gdkkeysyms.h" line="372"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Test" value="64781" c:type="GDK_KEY_3270_Test">
      <source-position filename="gdk/gdkkeysyms.h" line="362"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_4" value="52" c:type="GDK_KEY_4">
      <source-position filename="gdk/gdkkeysyms.h" line="401"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_5" value="53" c:type="GDK_KEY_5">
      <source-position filename="gdk/gdkkeysyms.h" line="402"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_6" value="54" c:type="GDK_KEY_6">
      <source-position filename="gdk/gdkkeysyms.h" line="403"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_7" value="55" c:type="GDK_KEY_7">
      <source-position filename="gdk/gdkkeysyms.h" line="404"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_8" value="56" c:type="GDK_KEY_8">
      <source-position filename="gdk/gdkkeysyms.h" line="405"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_9" value="57" c:type="GDK_KEY_9">
      <source-position filename="gdk/gdkkeysyms.h" line="406"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_A" value="65" c:type="GDK_KEY_A">
      <source-position filename="gdk/gdkkeysyms.h" line="414"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AE" value="198" c:type="GDK_KEY_AE">
      <source-position filename="gdk/gdkkeysyms.h" line="515"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aacute" value="193" c:type="GDK_KEY_Aacute">
      <source-position filename="gdk/gdkkeysyms.h" line="510"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abelowdot" value="16785056" c:type="GDK_KEY_Abelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1647"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abreve" value="451" c:type="GDK_KEY_Abreve">
      <source-position filename="gdk/gdkkeysyms.h" line="602"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abreveacute"
              value="16785070"
              c:type="GDK_KEY_Abreveacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1661"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevebelowdot"
              value="16785078"
              c:type="GDK_KEY_Abrevebelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1669"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevegrave"
              value="16785072"
              c:type="GDK_KEY_Abrevegrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1663"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevehook"
              value="16785074"
              c:type="GDK_KEY_Abrevehook">
      <source-position filename="gdk/gdkkeysyms.h" line="1665"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevetilde"
              value="16785076"
              c:type="GDK_KEY_Abrevetilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1667"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AccessX_Enable"
              value="65136"
              c:type="GDK_KEY_AccessX_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="309"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AccessX_Feedback_Enable"
              value="65137"
              c:type="GDK_KEY_AccessX_Feedback_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="310"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflex" value="194" c:type="GDK_KEY_Acircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="511"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexacute"
              value="16785060"
              c:type="GDK_KEY_Acircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1651"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexbelowdot"
              value="16785068"
              c:type="GDK_KEY_Acircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1659"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexgrave"
              value="16785062"
              c:type="GDK_KEY_Acircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1653"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexhook"
              value="16785064"
              c:type="GDK_KEY_Acircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1655"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflextilde"
              value="16785066"
              c:type="GDK_KEY_Acircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1657"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AddFavorite"
              value="269025081"
              c:type="GDK_KEY_AddFavorite">
      <source-position filename="gdk/gdkkeysyms.h" line="2097"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Adiaeresis" value="196" c:type="GDK_KEY_Adiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="513"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Agrave" value="192" c:type="GDK_KEY_Agrave">
      <source-position filename="gdk/gdkkeysyms.h" line="509"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ahook" value="16785058" c:type="GDK_KEY_Ahook">
      <source-position filename="gdk/gdkkeysyms.h" line="1649"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Alt_L" value="65513" c:type="GDK_KEY_Alt_L">
      <source-position filename="gdk/gdkkeysyms.h" line="211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Alt_R" value="65514" c:type="GDK_KEY_Alt_R">
      <source-position filename="gdk/gdkkeysyms.h" line="212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Amacron" value="960" c:type="GDK_KEY_Amacron">
      <source-position filename="gdk/gdkkeysyms.h" line="672"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aogonek" value="417" c:type="GDK_KEY_Aogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="577"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ApplicationLeft"
              value="269025104"
              c:type="GDK_KEY_ApplicationLeft">
      <source-position filename="gdk/gdkkeysyms.h" line="2120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ApplicationRight"
              value="269025105"
              c:type="GDK_KEY_ApplicationRight">
      <source-position filename="gdk/gdkkeysyms.h" line="2121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_0" value="16778848" c:type="GDK_KEY_Arabic_0">
      <source-position filename="gdk/gdkkeysyms.h" line="810"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_1" value="16778849" c:type="GDK_KEY_Arabic_1">
      <source-position filename="gdk/gdkkeysyms.h" line="811"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_2" value="16778850" c:type="GDK_KEY_Arabic_2">
      <source-position filename="gdk/gdkkeysyms.h" line="812"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_3" value="16778851" c:type="GDK_KEY_Arabic_3">
      <source-position filename="gdk/gdkkeysyms.h" line="813"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_4" value="16778852" c:type="GDK_KEY_Arabic_4">
      <source-position filename="gdk/gdkkeysyms.h" line="814"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_5" value="16778853" c:type="GDK_KEY_Arabic_5">
      <source-position filename="gdk/gdkkeysyms.h" line="815"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_6" value="16778854" c:type="GDK_KEY_Arabic_6">
      <source-position filename="gdk/gdkkeysyms.h" line="816"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_7" value="16778855" c:type="GDK_KEY_Arabic_7">
      <source-position filename="gdk/gdkkeysyms.h" line="817"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_8" value="16778856" c:type="GDK_KEY_Arabic_8">
      <source-position filename="gdk/gdkkeysyms.h" line="818"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_9" value="16778857" c:type="GDK_KEY_Arabic_9">
      <source-position filename="gdk/gdkkeysyms.h" line="819"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ain" value="1497" c:type="GDK_KEY_Arabic_ain">
      <source-position filename="gdk/gdkkeysyms.h" line="846"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_alef" value="1479" c:type="GDK_KEY_Arabic_alef">
      <source-position filename="gdk/gdkkeysyms.h" line="828"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_alefmaksura"
              value="1513"
              c:type="GDK_KEY_Arabic_alefmaksura">
      <source-position filename="gdk/gdkkeysyms.h" line="858"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_beh" value="1480" c:type="GDK_KEY_Arabic_beh">
      <source-position filename="gdk/gdkkeysyms.h" line="829"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_comma"
              value="1452"
              c:type="GDK_KEY_Arabic_comma">
      <source-position filename="gdk/gdkkeysyms.h" line="808"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dad" value="1494" c:type="GDK_KEY_Arabic_dad">
      <source-position filename="gdk/gdkkeysyms.h" line="843"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dal" value="1487" c:type="GDK_KEY_Arabic_dal">
      <source-position filename="gdk/gdkkeysyms.h" line="836"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_damma"
              value="1519"
              c:type="GDK_KEY_Arabic_damma">
      <source-position filename="gdk/gdkkeysyms.h" line="864"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dammatan"
              value="1516"
              c:type="GDK_KEY_Arabic_dammatan">
      <source-position filename="gdk/gdkkeysyms.h" line="861"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ddal"
              value="16778888"
              c:type="GDK_KEY_Arabic_ddal">
      <source-position filename="gdk/gdkkeysyms.h" line="806"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_farsi_yeh"
              value="16778956"
              c:type="GDK_KEY_Arabic_farsi_yeh">
      <source-position filename="gdk/gdkkeysyms.h" line="878"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fatha"
              value="1518"
              c:type="GDK_KEY_Arabic_fatha">
      <source-position filename="gdk/gdkkeysyms.h" line="863"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fathatan"
              value="1515"
              c:type="GDK_KEY_Arabic_fathatan">
      <source-position filename="gdk/gdkkeysyms.h" line="860"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_feh" value="1505" c:type="GDK_KEY_Arabic_feh">
      <source-position filename="gdk/gdkkeysyms.h" line="849"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fullstop"
              value="16778964"
              c:type="GDK_KEY_Arabic_fullstop">
      <source-position filename="gdk/gdkkeysyms.h" line="809"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_gaf"
              value="16778927"
              c:type="GDK_KEY_Arabic_gaf">
      <source-position filename="gdk/gdkkeysyms.h" line="874"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ghain"
              value="1498"
              c:type="GDK_KEY_Arabic_ghain">
      <source-position filename="gdk/gdkkeysyms.h" line="847"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ha" value="1511" c:type="GDK_KEY_Arabic_ha">
      <source-position filename="gdk/gdkkeysyms.h" line="855"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hah" value="1485" c:type="GDK_KEY_Arabic_hah">
      <source-position filename="gdk/gdkkeysyms.h" line="834"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza"
              value="1473"
              c:type="GDK_KEY_Arabic_hamza">
      <source-position filename="gdk/gdkkeysyms.h" line="822"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza_above"
              value="16778836"
              c:type="GDK_KEY_Arabic_hamza_above">
      <source-position filename="gdk/gdkkeysyms.h" line="869"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza_below"
              value="16778837"
              c:type="GDK_KEY_Arabic_hamza_below">
      <source-position filename="gdk/gdkkeysyms.h" line="870"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonalef"
              value="1475"
              c:type="GDK_KEY_Arabic_hamzaonalef">
      <source-position filename="gdk/gdkkeysyms.h" line="824"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonwaw"
              value="1476"
              c:type="GDK_KEY_Arabic_hamzaonwaw">
      <source-position filename="gdk/gdkkeysyms.h" line="825"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonyeh"
              value="1478"
              c:type="GDK_KEY_Arabic_hamzaonyeh">
      <source-position filename="gdk/gdkkeysyms.h" line="827"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaunderalef"
              value="1477"
              c:type="GDK_KEY_Arabic_hamzaunderalef">
      <source-position filename="gdk/gdkkeysyms.h" line="826"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh" value="1511" c:type="GDK_KEY_Arabic_heh">
      <source-position filename="gdk/gdkkeysyms.h" line="856"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh_doachashmee"
              value="16778942"
              c:type="GDK_KEY_Arabic_heh_doachashmee">
      <source-position filename="gdk/gdkkeysyms.h" line="876"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh_goal"
              value="16778945"
              c:type="GDK_KEY_Arabic_heh_goal">
      <source-position filename="gdk/gdkkeysyms.h" line="880"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_jeem" value="1484" c:type="GDK_KEY_Arabic_jeem">
      <source-position filename="gdk/gdkkeysyms.h" line="833"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_jeh"
              value="16778904"
              c:type="GDK_KEY_Arabic_jeh">
      <source-position filename="gdk/gdkkeysyms.h" line="871"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kaf" value="1507" c:type="GDK_KEY_Arabic_kaf">
      <source-position filename="gdk/gdkkeysyms.h" line="851"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kasra"
              value="1520"
              c:type="GDK_KEY_Arabic_kasra">
      <source-position filename="gdk/gdkkeysyms.h" line="865"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kasratan"
              value="1517"
              c:type="GDK_KEY_Arabic_kasratan">
      <source-position filename="gdk/gdkkeysyms.h" line="862"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_keheh"
              value="16778921"
              c:type="GDK_KEY_Arabic_keheh">
      <source-position filename="gdk/gdkkeysyms.h" line="873"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_khah" value="1486" c:type="GDK_KEY_Arabic_khah">
      <source-position filename="gdk/gdkkeysyms.h" line="835"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_lam" value="1508" c:type="GDK_KEY_Arabic_lam">
      <source-position filename="gdk/gdkkeysyms.h" line="852"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_madda_above"
              value="16778835"
              c:type="GDK_KEY_Arabic_madda_above">
      <source-position filename="gdk/gdkkeysyms.h" line="868"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_maddaonalef"
              value="1474"
              c:type="GDK_KEY_Arabic_maddaonalef">
      <source-position filename="gdk/gdkkeysyms.h" line="823"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_meem" value="1509" c:type="GDK_KEY_Arabic_meem">
      <source-position filename="gdk/gdkkeysyms.h" line="853"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_noon" value="1510" c:type="GDK_KEY_Arabic_noon">
      <source-position filename="gdk/gdkkeysyms.h" line="854"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_noon_ghunna"
              value="16778938"
              c:type="GDK_KEY_Arabic_noon_ghunna">
      <source-position filename="gdk/gdkkeysyms.h" line="875"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_peh"
              value="16778878"
              c:type="GDK_KEY_Arabic_peh">
      <source-position filename="gdk/gdkkeysyms.h" line="804"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_percent"
              value="16778858"
              c:type="GDK_KEY_Arabic_percent">
      <source-position filename="gdk/gdkkeysyms.h" line="801"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_qaf" value="1506" c:type="GDK_KEY_Arabic_qaf">
      <source-position filename="gdk/gdkkeysyms.h" line="850"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_question_mark"
              value="1471"
              c:type="GDK_KEY_Arabic_question_mark">
      <source-position filename="gdk/gdkkeysyms.h" line="821"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ra" value="1489" c:type="GDK_KEY_Arabic_ra">
      <source-position filename="gdk/gdkkeysyms.h" line="838"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_rreh"
              value="16778897"
              c:type="GDK_KEY_Arabic_rreh">
      <source-position filename="gdk/gdkkeysyms.h" line="807"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sad" value="1493" c:type="GDK_KEY_Arabic_sad">
      <source-position filename="gdk/gdkkeysyms.h" line="842"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_seen" value="1491" c:type="GDK_KEY_Arabic_seen">
      <source-position filename="gdk/gdkkeysyms.h" line="840"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_semicolon"
              value="1467"
              c:type="GDK_KEY_Arabic_semicolon">
      <source-position filename="gdk/gdkkeysyms.h" line="820"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_shadda"
              value="1521"
              c:type="GDK_KEY_Arabic_shadda">
      <source-position filename="gdk/gdkkeysyms.h" line="866"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sheen"
              value="1492"
              c:type="GDK_KEY_Arabic_sheen">
      <source-position filename="gdk/gdkkeysyms.h" line="841"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sukun"
              value="1522"
              c:type="GDK_KEY_Arabic_sukun">
      <source-position filename="gdk/gdkkeysyms.h" line="867"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_superscript_alef"
              value="16778864"
              c:type="GDK_KEY_Arabic_superscript_alef">
      <source-position filename="gdk/gdkkeysyms.h" line="802"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_switch"
              value="65406"
              c:type="GDK_KEY_Arabic_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="881"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tah" value="1495" c:type="GDK_KEY_Arabic_tah">
      <source-position filename="gdk/gdkkeysyms.h" line="844"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tatweel"
              value="1504"
              c:type="GDK_KEY_Arabic_tatweel">
      <source-position filename="gdk/gdkkeysyms.h" line="848"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tcheh"
              value="16778886"
              c:type="GDK_KEY_Arabic_tcheh">
      <source-position filename="gdk/gdkkeysyms.h" line="805"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_teh" value="1482" c:type="GDK_KEY_Arabic_teh">
      <source-position filename="gdk/gdkkeysyms.h" line="831"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tehmarbuta"
              value="1481"
              c:type="GDK_KEY_Arabic_tehmarbuta">
      <source-position filename="gdk/gdkkeysyms.h" line="830"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_thal" value="1488" c:type="GDK_KEY_Arabic_thal">
      <source-position filename="gdk/gdkkeysyms.h" line="837"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_theh" value="1483" c:type="GDK_KEY_Arabic_theh">
      <source-position filename="gdk/gdkkeysyms.h" line="832"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tteh"
              value="16778873"
              c:type="GDK_KEY_Arabic_tteh">
      <source-position filename="gdk/gdkkeysyms.h" line="803"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_veh"
              value="16778916"
              c:type="GDK_KEY_Arabic_veh">
      <source-position filename="gdk/gdkkeysyms.h" line="872"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_waw" value="1512" c:type="GDK_KEY_Arabic_waw">
      <source-position filename="gdk/gdkkeysyms.h" line="857"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_yeh" value="1514" c:type="GDK_KEY_Arabic_yeh">
      <source-position filename="gdk/gdkkeysyms.h" line="859"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_yeh_baree"
              value="16778962"
              c:type="GDK_KEY_Arabic_yeh_baree">
      <source-position filename="gdk/gdkkeysyms.h" line="879"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_zah" value="1496" c:type="GDK_KEY_Arabic_zah">
      <source-position filename="gdk/gdkkeysyms.h" line="845"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_zain" value="1490" c:type="GDK_KEY_Arabic_zain">
      <source-position filename="gdk/gdkkeysyms.h" line="839"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aring" value="197" c:type="GDK_KEY_Aring">
      <source-position filename="gdk/gdkkeysyms.h" line="514"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_AT"
              value="16778552"
              c:type="GDK_KEY_Armenian_AT">
      <source-position filename="gdk/gdkkeysyms.h" line="1529"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_AYB"
              value="16778545"
              c:type="GDK_KEY_Armenian_AYB">
      <source-position filename="gdk/gdkkeysyms.h" line="1515"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_BEN"
              value="16778546"
              c:type="GDK_KEY_Armenian_BEN">
      <source-position filename="gdk/gdkkeysyms.h" line="1517"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_CHA"
              value="16778569"
              c:type="GDK_KEY_Armenian_CHA">
      <source-position filename="gdk/gdkkeysyms.h" line="1563"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_DA"
              value="16778548"
              c:type="GDK_KEY_Armenian_DA">
      <source-position filename="gdk/gdkkeysyms.h" line="1521"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_DZA"
              value="16778561"
              c:type="GDK_KEY_Armenian_DZA">
      <source-position filename="gdk/gdkkeysyms.h" line="1547"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_E"
              value="16778551"
              c:type="GDK_KEY_Armenian_E">
      <source-position filename="gdk/gdkkeysyms.h" line="1527"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_FE"
              value="16778582"
              c:type="GDK_KEY_Armenian_FE">
      <source-position filename="gdk/gdkkeysyms.h" line="1589"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_GHAT"
              value="16778562"
              c:type="GDK_KEY_Armenian_GHAT">
      <source-position filename="gdk/gdkkeysyms.h" line="1549"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_GIM"
              value="16778547"
              c:type="GDK_KEY_Armenian_GIM">
      <source-position filename="gdk/gdkkeysyms.h" line="1519"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_HI"
              value="16778565"
              c:type="GDK_KEY_Armenian_HI">
      <source-position filename="gdk/gdkkeysyms.h" line="1555"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_HO"
              value="16778560"
              c:type="GDK_KEY_Armenian_HO">
      <source-position filename="gdk/gdkkeysyms.h" line="1545"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_INI"
              value="16778555"
              c:type="GDK_KEY_Armenian_INI">
      <source-position filename="gdk/gdkkeysyms.h" line="1535"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_JE"
              value="16778571"
              c:type="GDK_KEY_Armenian_JE">
      <source-position filename="gdk/gdkkeysyms.h" line="1567"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KE"
              value="16778580"
              c:type="GDK_KEY_Armenian_KE">
      <source-position filename="gdk/gdkkeysyms.h" line="1585"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KEN"
              value="16778559"
              c:type="GDK_KEY_Armenian_KEN">
      <source-position filename="gdk/gdkkeysyms.h" line="1543"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KHE"
              value="16778557"
              c:type="GDK_KEY_Armenian_KHE">
      <source-position filename="gdk/gdkkeysyms.h" line="1539"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_LYUN"
              value="16778556"
              c:type="GDK_KEY_Armenian_LYUN">
      <source-position filename="gdk/gdkkeysyms.h" line="1537"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_MEN"
              value="16778564"
              c:type="GDK_KEY_Armenian_MEN">
      <source-position filename="gdk/gdkkeysyms.h" line="1553"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_NU"
              value="16778566"
              c:type="GDK_KEY_Armenian_NU">
      <source-position filename="gdk/gdkkeysyms.h" line="1557"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_O"
              value="16778581"
              c:type="GDK_KEY_Armenian_O">
      <source-position filename="gdk/gdkkeysyms.h" line="1587"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_PE"
              value="16778570"
              c:type="GDK_KEY_Armenian_PE">
      <source-position filename="gdk/gdkkeysyms.h" line="1565"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_PYUR"
              value="16778579"
              c:type="GDK_KEY_Armenian_PYUR">
      <source-position filename="gdk/gdkkeysyms.h" line="1583"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_RA"
              value="16778572"
              c:type="GDK_KEY_Armenian_RA">
      <source-position filename="gdk/gdkkeysyms.h" line="1569"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_RE"
              value="16778576"
              c:type="GDK_KEY_Armenian_RE">
      <source-position filename="gdk/gdkkeysyms.h" line="1577"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_SE"
              value="16778573"
              c:type="GDK_KEY_Armenian_SE">
      <source-position filename="gdk/gdkkeysyms.h" line="1571"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_SHA"
              value="16778567"
              c:type="GDK_KEY_Armenian_SHA">
      <source-position filename="gdk/gdkkeysyms.h" line="1559"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TCHE"
              value="16778563"
              c:type="GDK_KEY_Armenian_TCHE">
      <source-position filename="gdk/gdkkeysyms.h" line="1551"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TO"
              value="16778553"
              c:type="GDK_KEY_Armenian_TO">
      <source-position filename="gdk/gdkkeysyms.h" line="1531"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TSA"
              value="16778558"
              c:type="GDK_KEY_Armenian_TSA">
      <source-position filename="gdk/gdkkeysyms.h" line="1541"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TSO"
              value="16778577"
              c:type="GDK_KEY_Armenian_TSO">
      <source-position filename="gdk/gdkkeysyms.h" line="1579"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TYUN"
              value="16778575"
              c:type="GDK_KEY_Armenian_TYUN">
      <source-position filename="gdk/gdkkeysyms.h" line="1575"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VEV"
              value="16778574"
              c:type="GDK_KEY_Armenian_VEV">
      <source-position filename="gdk/gdkkeysyms.h" line="1573"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VO"
              value="16778568"
              c:type="GDK_KEY_Armenian_VO">
      <source-position filename="gdk/gdkkeysyms.h" line="1561"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VYUN"
              value="16778578"
              c:type="GDK_KEY_Armenian_VYUN">
      <source-position filename="gdk/gdkkeysyms.h" line="1581"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_YECH"
              value="16778549"
              c:type="GDK_KEY_Armenian_YECH">
      <source-position filename="gdk/gdkkeysyms.h" line="1523"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ZA"
              value="16778550"
              c:type="GDK_KEY_Armenian_ZA">
      <source-position filename="gdk/gdkkeysyms.h" line="1525"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ZHE"
              value="16778554"
              c:type="GDK_KEY_Armenian_ZHE">
      <source-position filename="gdk/gdkkeysyms.h" line="1533"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_accent"
              value="16778587"
              c:type="GDK_KEY_Armenian_accent">
      <source-position filename="gdk/gdkkeysyms.h" line="1511"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_amanak"
              value="16778588"
              c:type="GDK_KEY_Armenian_amanak">
      <source-position filename="gdk/gdkkeysyms.h" line="1510"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_apostrophe"
              value="16778586"
              c:type="GDK_KEY_Armenian_apostrophe">
      <source-position filename="gdk/gdkkeysyms.h" line="1591"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_at"
              value="16778600"
              c:type="GDK_KEY_Armenian_at">
      <source-position filename="gdk/gdkkeysyms.h" line="1530"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ayb"
              value="16778593"
              c:type="GDK_KEY_Armenian_ayb">
      <source-position filename="gdk/gdkkeysyms.h" line="1516"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ben"
              value="16778594"
              c:type="GDK_KEY_Armenian_ben">
      <source-position filename="gdk/gdkkeysyms.h" line="1518"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_but"
              value="16778589"
              c:type="GDK_KEY_Armenian_but">
      <source-position filename="gdk/gdkkeysyms.h" line="1506"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_cha"
              value="16778617"
              c:type="GDK_KEY_Armenian_cha">
      <source-position filename="gdk/gdkkeysyms.h" line="1564"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_da"
              value="16778596"
              c:type="GDK_KEY_Armenian_da">
      <source-position filename="gdk/gdkkeysyms.h" line="1522"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_dza"
              value="16778609"
              c:type="GDK_KEY_Armenian_dza">
      <source-position filename="gdk/gdkkeysyms.h" line="1548"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_e"
              value="16778599"
              c:type="GDK_KEY_Armenian_e">
      <source-position filename="gdk/gdkkeysyms.h" line="1528"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_exclam"
              value="16778588"
              c:type="GDK_KEY_Armenian_exclam">
      <source-position filename="gdk/gdkkeysyms.h" line="1509"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_fe"
              value="16778630"
              c:type="GDK_KEY_Armenian_fe">
      <source-position filename="gdk/gdkkeysyms.h" line="1590"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_full_stop"
              value="16778633"
              c:type="GDK_KEY_Armenian_full_stop">
      <source-position filename="gdk/gdkkeysyms.h" line="1503"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ghat"
              value="16778610"
              c:type="GDK_KEY_Armenian_ghat">
      <source-position filename="gdk/gdkkeysyms.h" line="1550"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_gim"
              value="16778595"
              c:type="GDK_KEY_Armenian_gim">
      <source-position filename="gdk/gdkkeysyms.h" line="1520"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_hi"
              value="16778613"
              c:type="GDK_KEY_Armenian_hi">
      <source-position filename="gdk/gdkkeysyms.h" line="1556"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ho"
              value="16778608"
              c:type="GDK_KEY_Armenian_ho">
      <source-position filename="gdk/gdkkeysyms.h" line="1546"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_hyphen"
              value="16778634"
              c:type="GDK_KEY_Armenian_hyphen">
      <source-position filename="gdk/gdkkeysyms.h" line="1507"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ini"
              value="16778603"
              c:type="GDK_KEY_Armenian_ini">
      <source-position filename="gdk/gdkkeysyms.h" line="1536"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_je"
              value="16778619"
              c:type="GDK_KEY_Armenian_je">
      <source-position filename="gdk/gdkkeysyms.h" line="1568"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ke"
              value="16778628"
              c:type="GDK_KEY_Armenian_ke">
      <source-position filename="gdk/gdkkeysyms.h" line="1586"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ken"
              value="16778607"
              c:type="GDK_KEY_Armenian_ken">
      <source-position filename="gdk/gdkkeysyms.h" line="1544"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_khe"
              value="16778605"
              c:type="GDK_KEY_Armenian_khe">
      <source-position filename="gdk/gdkkeysyms.h" line="1540"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ligature_ew"
              value="16778631"
              c:type="GDK_KEY_Armenian_ligature_ew">
      <source-position filename="gdk/gdkkeysyms.h" line="1502"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_lyun"
              value="16778604"
              c:type="GDK_KEY_Armenian_lyun">
      <source-position filename="gdk/gdkkeysyms.h" line="1538"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_men"
              value="16778612"
              c:type="GDK_KEY_Armenian_men">
      <source-position filename="gdk/gdkkeysyms.h" line="1554"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_nu"
              value="16778614"
              c:type="GDK_KEY_Armenian_nu">
      <source-position filename="gdk/gdkkeysyms.h" line="1558"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_o"
              value="16778629"
              c:type="GDK_KEY_Armenian_o">
      <source-position filename="gdk/gdkkeysyms.h" line="1588"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_paruyk"
              value="16778590"
              c:type="GDK_KEY_Armenian_paruyk">
      <source-position filename="gdk/gdkkeysyms.h" line="1514"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_pe"
              value="16778618"
              c:type="GDK_KEY_Armenian_pe">
      <source-position filename="gdk/gdkkeysyms.h" line="1566"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_pyur"
              value="16778627"
              c:type="GDK_KEY_Armenian_pyur">
      <source-position filename="gdk/gdkkeysyms.h" line="1584"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_question"
              value="16778590"
              c:type="GDK_KEY_Armenian_question">
      <source-position filename="gdk/gdkkeysyms.h" line="1513"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ra"
              value="16778620"
              c:type="GDK_KEY_Armenian_ra">
      <source-position filename="gdk/gdkkeysyms.h" line="1570"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_re"
              value="16778624"
              c:type="GDK_KEY_Armenian_re">
      <source-position filename="gdk/gdkkeysyms.h" line="1578"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_se"
              value="16778621"
              c:type="GDK_KEY_Armenian_se">
      <source-position filename="gdk/gdkkeysyms.h" line="1572"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_separation_mark"
              value="16778589"
              c:type="GDK_KEY_Armenian_separation_mark">
      <source-position filename="gdk/gdkkeysyms.h" line="1505"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_sha"
              value="16778615"
              c:type="GDK_KEY_Armenian_sha">
      <source-position filename="gdk/gdkkeysyms.h" line="1560"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_shesht"
              value="16778587"
              c:type="GDK_KEY_Armenian_shesht">
      <source-position filename="gdk/gdkkeysyms.h" line="1512"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tche"
              value="16778611"
              c:type="GDK_KEY_Armenian_tche">
      <source-position filename="gdk/gdkkeysyms.h" line="1552"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_to"
              value="16778601"
              c:type="GDK_KEY_Armenian_to">
      <source-position filename="gdk/gdkkeysyms.h" line="1532"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tsa"
              value="16778606"
              c:type="GDK_KEY_Armenian_tsa">
      <source-position filename="gdk/gdkkeysyms.h" line="1542"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tso"
              value="16778625"
              c:type="GDK_KEY_Armenian_tso">
      <source-position filename="gdk/gdkkeysyms.h" line="1580"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tyun"
              value="16778623"
              c:type="GDK_KEY_Armenian_tyun">
      <source-position filename="gdk/gdkkeysyms.h" line="1576"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_verjaket"
              value="16778633"
              c:type="GDK_KEY_Armenian_verjaket">
      <source-position filename="gdk/gdkkeysyms.h" line="1504"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vev"
              value="16778622"
              c:type="GDK_KEY_Armenian_vev">
      <source-position filename="gdk/gdkkeysyms.h" line="1574"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vo"
              value="16778616"
              c:type="GDK_KEY_Armenian_vo">
      <source-position filename="gdk/gdkkeysyms.h" line="1562"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vyun"
              value="16778626"
              c:type="GDK_KEY_Armenian_vyun">
      <source-position filename="gdk/gdkkeysyms.h" line="1582"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_yech"
              value="16778597"
              c:type="GDK_KEY_Armenian_yech">
      <source-position filename="gdk/gdkkeysyms.h" line="1524"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_yentamna"
              value="16778634"
              c:type="GDK_KEY_Armenian_yentamna">
      <source-position filename="gdk/gdkkeysyms.h" line="1508"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_za"
              value="16778598"
              c:type="GDK_KEY_Armenian_za">
      <source-position filename="gdk/gdkkeysyms.h" line="1526"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_zhe"
              value="16778602"
              c:type="GDK_KEY_Armenian_zhe">
      <source-position filename="gdk/gdkkeysyms.h" line="1534"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Atilde" value="195" c:type="GDK_KEY_Atilde">
      <source-position filename="gdk/gdkkeysyms.h" line="512"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudibleBell_Enable"
              value="65146"
              c:type="GDK_KEY_AudibleBell_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="319"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioCycleTrack"
              value="269025179"
              c:type="GDK_KEY_AudioCycleTrack">
      <source-position filename="gdk/gdkkeysyms.h" line="2189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioForward"
              value="269025175"
              c:type="GDK_KEY_AudioForward">
      <source-position filename="gdk/gdkkeysyms.h" line="2185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioLowerVolume"
              value="269025041"
              c:type="GDK_KEY_AudioLowerVolume">
      <source-position filename="gdk/gdkkeysyms.h" line="2057"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioMedia"
              value="269025074"
              c:type="GDK_KEY_AudioMedia">
      <source-position filename="gdk/gdkkeysyms.h" line="2090"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioMute"
              value="269025042"
              c:type="GDK_KEY_AudioMute">
      <source-position filename="gdk/gdkkeysyms.h" line="2058"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioNext"
              value="269025047"
              c:type="GDK_KEY_AudioNext">
      <source-position filename="gdk/gdkkeysyms.h" line="2063"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPause"
              value="269025073"
              c:type="GDK_KEY_AudioPause">
      <source-position filename="gdk/gdkkeysyms.h" line="2089"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPlay"
              value="269025044"
              c:type="GDK_KEY_AudioPlay">
      <source-position filename="gdk/gdkkeysyms.h" line="2060"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPrev"
              value="269025046"
              c:type="GDK_KEY_AudioPrev">
      <source-position filename="gdk/gdkkeysyms.h" line="2062"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRaiseVolume"
              value="269025043"
              c:type="GDK_KEY_AudioRaiseVolume">
      <source-position filename="gdk/gdkkeysyms.h" line="2059"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRandomPlay"
              value="269025177"
              c:type="GDK_KEY_AudioRandomPlay">
      <source-position filename="gdk/gdkkeysyms.h" line="2187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRecord"
              value="269025052"
              c:type="GDK_KEY_AudioRecord">
      <source-position filename="gdk/gdkkeysyms.h" line="2068"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRepeat"
              value="269025176"
              c:type="GDK_KEY_AudioRepeat">
      <source-position filename="gdk/gdkkeysyms.h" line="2186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRewind"
              value="269025086"
              c:type="GDK_KEY_AudioRewind">
      <source-position filename="gdk/gdkkeysyms.h" line="2102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioStop"
              value="269025045"
              c:type="GDK_KEY_AudioStop">
      <source-position filename="gdk/gdkkeysyms.h" line="2061"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Away" value="269025165" c:type="GDK_KEY_Away">
      <source-position filename="gdk/gdkkeysyms.h" line="2175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_B" value="66" c:type="GDK_KEY_B">
      <source-position filename="gdk/gdkkeysyms.h" line="415"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Babovedot" value="16784898" c:type="GDK_KEY_Babovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="692"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Back" value="269025062" c:type="GDK_KEY_Back">
      <source-position filename="gdk/gdkkeysyms.h" line="2078"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BackForward"
              value="269025087"
              c:type="GDK_KEY_BackForward">
      <source-position filename="gdk/gdkkeysyms.h" line="2103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BackSpace" value="65288" c:type="GDK_KEY_BackSpace">
      <source-position filename="gdk/gdkkeysyms.h" line="46"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Battery" value="269025171" c:type="GDK_KEY_Battery">
      <source-position filename="gdk/gdkkeysyms.h" line="2181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Begin" value="65368" c:type="GDK_KEY_Begin">
      <source-position filename="gdk/gdkkeysyms.h" line="91"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Blue" value="269025190" c:type="GDK_KEY_Blue">
      <source-position filename="gdk/gdkkeysyms.h" line="2200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Bluetooth"
              value="269025172"
              c:type="GDK_KEY_Bluetooth">
      <source-position filename="gdk/gdkkeysyms.h" line="2182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Book" value="269025106" c:type="GDK_KEY_Book">
      <source-position filename="gdk/gdkkeysyms.h" line="2122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BounceKeys_Enable"
              value="65140"
              c:type="GDK_KEY_BounceKeys_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="313"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Break" value="65387" c:type="GDK_KEY_Break">
      <source-position filename="gdk/gdkkeysyms.h" line="102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BrightnessAdjust"
              value="269025083"
              c:type="GDK_KEY_BrightnessAdjust">
      <source-position filename="gdk/gdkkeysyms.h" line="2099"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Byelorussian_SHORTU"
              value="1726"
              c:type="GDK_KEY_Byelorussian_SHORTU">
      <source-position filename="gdk/gdkkeysyms.h" line="954"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Byelorussian_shortu"
              value="1710"
              c:type="GDK_KEY_Byelorussian_shortu">
      <source-position filename="gdk/gdkkeysyms.h" line="931"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_C" value="67" c:type="GDK_KEY_C">
      <source-position filename="gdk/gdkkeysyms.h" line="416"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CD" value="269025107" c:type="GDK_KEY_CD">
      <source-position filename="gdk/gdkkeysyms.h" line="2123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cabovedot" value="709" c:type="GDK_KEY_Cabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="644"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cacute" value="454" c:type="GDK_KEY_Cacute">
      <source-position filename="gdk/gdkkeysyms.h" line="604"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Calculator"
              value="269025053"
              c:type="GDK_KEY_Calculator">
      <source-position filename="gdk/gdkkeysyms.h" line="2069"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Calendar" value="269025056" c:type="GDK_KEY_Calendar">
      <source-position filename="gdk/gdkkeysyms.h" line="2072"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cancel" value="65385" c:type="GDK_KEY_Cancel">
      <source-position filename="gdk/gdkkeysyms.h" line="100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Caps_Lock" value="65509" c:type="GDK_KEY_Caps_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccaron" value="456" c:type="GDK_KEY_Ccaron">
      <source-position filename="gdk/gdkkeysyms.h" line="605"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccedilla" value="199" c:type="GDK_KEY_Ccedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="516"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccircumflex" value="710" c:type="GDK_KEY_Ccircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="645"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Clear" value="65291" c:type="GDK_KEY_Clear">
      <source-position filename="gdk/gdkkeysyms.h" line="49"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ClearGrab"
              value="269024801"
              c:type="GDK_KEY_ClearGrab">
      <source-position filename="gdk/gdkkeysyms.h" line="2217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Close" value="269025110" c:type="GDK_KEY_Close">
      <source-position filename="gdk/gdkkeysyms.h" line="2125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Codeinput" value="65335" c:type="GDK_KEY_Codeinput">
      <source-position filename="gdk/gdkkeysyms.h" line="57"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ColonSign" value="16785569" c:type="GDK_KEY_ColonSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1740"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Community"
              value="269025085"
              c:type="GDK_KEY_Community">
      <source-position filename="gdk/gdkkeysyms.h" line="2101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ContrastAdjust"
              value="269025058"
              c:type="GDK_KEY_ContrastAdjust">
      <source-position filename="gdk/gdkkeysyms.h" line="2074"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Control_L" value="65507" c:type="GDK_KEY_Control_L">
      <source-position filename="gdk/gdkkeysyms.h" line="205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Control_R" value="65508" c:type="GDK_KEY_Control_R">
      <source-position filename="gdk/gdkkeysyms.h" line="206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Copy" value="269025111" c:type="GDK_KEY_Copy">
      <source-position filename="gdk/gdkkeysyms.h" line="2126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CruzeiroSign"
              value="16785570"
              c:type="GDK_KEY_CruzeiroSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1741"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cut" value="269025112" c:type="GDK_KEY_Cut">
      <source-position filename="gdk/gdkkeysyms.h" line="2127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CycleAngle"
              value="269025180"
              c:type="GDK_KEY_CycleAngle">
      <source-position filename="gdk/gdkkeysyms.h" line="2190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_A" value="1761" c:type="GDK_KEY_Cyrillic_A">
      <source-position filename="gdk/gdkkeysyms.h" line="990"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_BE" value="1762" c:type="GDK_KEY_Cyrillic_BE">
      <source-position filename="gdk/gdkkeysyms.h" line="991"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE"
              value="1790"
              c:type="GDK_KEY_Cyrillic_CHE">
      <source-position filename="gdk/gdkkeysyms.h" line="1019"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE_descender"
              value="16778422"
              c:type="GDK_KEY_Cyrillic_CHE_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="898"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE_vertstroke"
              value="16778424"
              c:type="GDK_KEY_Cyrillic_CHE_vertstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="900"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_DE" value="1764" c:type="GDK_KEY_Cyrillic_DE">
      <source-position filename="gdk/gdkkeysyms.h" line="993"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_DZHE"
              value="1727"
              c:type="GDK_KEY_Cyrillic_DZHE">
      <source-position filename="gdk/gdkkeysyms.h" line="955"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_E" value="1788" c:type="GDK_KEY_Cyrillic_E">
      <source-position filename="gdk/gdkkeysyms.h" line="1017"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EF" value="1766" c:type="GDK_KEY_Cyrillic_EF">
      <source-position filename="gdk/gdkkeysyms.h" line="995"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EL" value="1772" c:type="GDK_KEY_Cyrillic_EL">
      <source-position filename="gdk/gdkkeysyms.h" line="1001"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EM" value="1773" c:type="GDK_KEY_Cyrillic_EM">
      <source-position filename="gdk/gdkkeysyms.h" line="1002"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EN" value="1774" c:type="GDK_KEY_Cyrillic_EN">
      <source-position filename="gdk/gdkkeysyms.h" line="1003"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EN_descender"
              value="16778402"
              c:type="GDK_KEY_Cyrillic_EN_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="890"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ER" value="1778" c:type="GDK_KEY_Cyrillic_ER">
      <source-position filename="gdk/gdkkeysyms.h" line="1007"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ES" value="1779" c:type="GDK_KEY_Cyrillic_ES">
      <source-position filename="gdk/gdkkeysyms.h" line="1008"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_GHE"
              value="1767"
              c:type="GDK_KEY_Cyrillic_GHE">
      <source-position filename="gdk/gdkkeysyms.h" line="996"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_GHE_bar"
              value="16778386"
              c:type="GDK_KEY_Cyrillic_GHE_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="882"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HA" value="1768" c:type="GDK_KEY_Cyrillic_HA">
      <source-position filename="gdk/gdkkeysyms.h" line="997"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HARDSIGN"
              value="1791"
              c:type="GDK_KEY_Cyrillic_HARDSIGN">
      <source-position filename="gdk/gdkkeysyms.h" line="1020"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HA_descender"
              value="16778418"
              c:type="GDK_KEY_Cyrillic_HA_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="896"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_I" value="1769" c:type="GDK_KEY_Cyrillic_I">
      <source-position filename="gdk/gdkkeysyms.h" line="998"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_IE" value="1765" c:type="GDK_KEY_Cyrillic_IE">
      <source-position filename="gdk/gdkkeysyms.h" line="994"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_IO" value="1715" c:type="GDK_KEY_Cyrillic_IO">
      <source-position filename="gdk/gdkkeysyms.h" line="937"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_I_macron"
              value="16778466"
              c:type="GDK_KEY_Cyrillic_I_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="906"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_JE" value="1720" c:type="GDK_KEY_Cyrillic_JE">
      <source-position filename="gdk/gdkkeysyms.h" line="945"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA" value="1771" c:type="GDK_KEY_Cyrillic_KA">
      <source-position filename="gdk/gdkkeysyms.h" line="1000"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA_descender"
              value="16778394"
              c:type="GDK_KEY_Cyrillic_KA_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="886"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA_vertstroke"
              value="16778396"
              c:type="GDK_KEY_Cyrillic_KA_vertstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="888"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_LJE"
              value="1721"
              c:type="GDK_KEY_Cyrillic_LJE">
      <source-position filename="gdk/gdkkeysyms.h" line="947"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_NJE"
              value="1722"
              c:type="GDK_KEY_Cyrillic_NJE">
      <source-position filename="gdk/gdkkeysyms.h" line="949"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_O" value="1775" c:type="GDK_KEY_Cyrillic_O">
      <source-position filename="gdk/gdkkeysyms.h" line="1004"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_O_bar"
              value="16778472"
              c:type="GDK_KEY_Cyrillic_O_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="908"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_PE" value="1776" c:type="GDK_KEY_Cyrillic_PE">
      <source-position filename="gdk/gdkkeysyms.h" line="1005"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SCHWA"
              value="16778456"
              c:type="GDK_KEY_Cyrillic_SCHWA">
      <source-position filename="gdk/gdkkeysyms.h" line="904"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHA"
              value="1787"
              c:type="GDK_KEY_Cyrillic_SHA">
      <source-position filename="gdk/gdkkeysyms.h" line="1016"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHCHA"
              value="1789"
              c:type="GDK_KEY_Cyrillic_SHCHA">
      <source-position filename="gdk/gdkkeysyms.h" line="1018"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHHA"
              value="16778426"
              c:type="GDK_KEY_Cyrillic_SHHA">
      <source-position filename="gdk/gdkkeysyms.h" line="902"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHORTI"
              value="1770"
              c:type="GDK_KEY_Cyrillic_SHORTI">
      <source-position filename="gdk/gdkkeysyms.h" line="999"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SOFTSIGN"
              value="1784"
              c:type="GDK_KEY_Cyrillic_SOFTSIGN">
      <source-position filename="gdk/gdkkeysyms.h" line="1013"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_TE" value="1780" c:type="GDK_KEY_Cyrillic_TE">
      <source-position filename="gdk/gdkkeysyms.h" line="1009"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_TSE"
              value="1763"
              c:type="GDK_KEY_Cyrillic_TSE">
      <source-position filename="gdk/gdkkeysyms.h" line="992"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U" value="1781" c:type="GDK_KEY_Cyrillic_U">
      <source-position filename="gdk/gdkkeysyms.h" line="1010"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_macron"
              value="16778478"
              c:type="GDK_KEY_Cyrillic_U_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="910"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_straight"
              value="16778414"
              c:type="GDK_KEY_Cyrillic_U_straight">
      <source-position filename="gdk/gdkkeysyms.h" line="892"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_straight_bar"
              value="16778416"
              c:type="GDK_KEY_Cyrillic_U_straight_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="894"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_VE" value="1783" c:type="GDK_KEY_Cyrillic_VE">
      <source-position filename="gdk/gdkkeysyms.h" line="1012"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YA" value="1777" c:type="GDK_KEY_Cyrillic_YA">
      <source-position filename="gdk/gdkkeysyms.h" line="1006"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YERU"
              value="1785"
              c:type="GDK_KEY_Cyrillic_YERU">
      <source-position filename="gdk/gdkkeysyms.h" line="1014"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YU" value="1760" c:type="GDK_KEY_Cyrillic_YU">
      <source-position filename="gdk/gdkkeysyms.h" line="989"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZE" value="1786" c:type="GDK_KEY_Cyrillic_ZE">
      <source-position filename="gdk/gdkkeysyms.h" line="1015"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZHE"
              value="1782"
              c:type="GDK_KEY_Cyrillic_ZHE">
      <source-position filename="gdk/gdkkeysyms.h" line="1011"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZHE_descender"
              value="16778390"
              c:type="GDK_KEY_Cyrillic_ZHE_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="884"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_a" value="1729" c:type="GDK_KEY_Cyrillic_a">
      <source-position filename="gdk/gdkkeysyms.h" line="958"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_be" value="1730" c:type="GDK_KEY_Cyrillic_be">
      <source-position filename="gdk/gdkkeysyms.h" line="959"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che"
              value="1758"
              c:type="GDK_KEY_Cyrillic_che">
      <source-position filename="gdk/gdkkeysyms.h" line="987"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che_descender"
              value="16778423"
              c:type="GDK_KEY_Cyrillic_che_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="899"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che_vertstroke"
              value="16778425"
              c:type="GDK_KEY_Cyrillic_che_vertstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="901"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_de" value="1732" c:type="GDK_KEY_Cyrillic_de">
      <source-position filename="gdk/gdkkeysyms.h" line="961"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_dzhe"
              value="1711"
              c:type="GDK_KEY_Cyrillic_dzhe">
      <source-position filename="gdk/gdkkeysyms.h" line="932"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_e" value="1756" c:type="GDK_KEY_Cyrillic_e">
      <source-position filename="gdk/gdkkeysyms.h" line="985"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ef" value="1734" c:type="GDK_KEY_Cyrillic_ef">
      <source-position filename="gdk/gdkkeysyms.h" line="963"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_el" value="1740" c:type="GDK_KEY_Cyrillic_el">
      <source-position filename="gdk/gdkkeysyms.h" line="969"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_em" value="1741" c:type="GDK_KEY_Cyrillic_em">
      <source-position filename="gdk/gdkkeysyms.h" line="970"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_en" value="1742" c:type="GDK_KEY_Cyrillic_en">
      <source-position filename="gdk/gdkkeysyms.h" line="971"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_en_descender"
              value="16778403"
              c:type="GDK_KEY_Cyrillic_en_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="891"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_er" value="1746" c:type="GDK_KEY_Cyrillic_er">
      <source-position filename="gdk/gdkkeysyms.h" line="975"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_es" value="1747" c:type="GDK_KEY_Cyrillic_es">
      <source-position filename="gdk/gdkkeysyms.h" line="976"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ghe"
              value="1735"
              c:type="GDK_KEY_Cyrillic_ghe">
      <source-position filename="gdk/gdkkeysyms.h" line="964"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ghe_bar"
              value="16778387"
              c:type="GDK_KEY_Cyrillic_ghe_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="883"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ha" value="1736" c:type="GDK_KEY_Cyrillic_ha">
      <source-position filename="gdk/gdkkeysyms.h" line="965"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ha_descender"
              value="16778419"
              c:type="GDK_KEY_Cyrillic_ha_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="897"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_hardsign"
              value="1759"
              c:type="GDK_KEY_Cyrillic_hardsign">
      <source-position filename="gdk/gdkkeysyms.h" line="988"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_i" value="1737" c:type="GDK_KEY_Cyrillic_i">
      <source-position filename="gdk/gdkkeysyms.h" line="966"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_i_macron"
              value="16778467"
              c:type="GDK_KEY_Cyrillic_i_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="907"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ie" value="1733" c:type="GDK_KEY_Cyrillic_ie">
      <source-position filename="gdk/gdkkeysyms.h" line="962"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_io" value="1699" c:type="GDK_KEY_Cyrillic_io">
      <source-position filename="gdk/gdkkeysyms.h" line="914"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_je" value="1704" c:type="GDK_KEY_Cyrillic_je">
      <source-position filename="gdk/gdkkeysyms.h" line="922"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka" value="1739" c:type="GDK_KEY_Cyrillic_ka">
      <source-position filename="gdk/gdkkeysyms.h" line="968"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka_descender"
              value="16778395"
              c:type="GDK_KEY_Cyrillic_ka_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="887"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka_vertstroke"
              value="16778397"
              c:type="GDK_KEY_Cyrillic_ka_vertstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="889"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_lje"
              value="1705"
              c:type="GDK_KEY_Cyrillic_lje">
      <source-position filename="gdk/gdkkeysyms.h" line="924"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_nje"
              value="1706"
              c:type="GDK_KEY_Cyrillic_nje">
      <source-position filename="gdk/gdkkeysyms.h" line="926"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_o" value="1743" c:type="GDK_KEY_Cyrillic_o">
      <source-position filename="gdk/gdkkeysyms.h" line="972"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_o_bar"
              value="16778473"
              c:type="GDK_KEY_Cyrillic_o_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="909"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_pe" value="1744" c:type="GDK_KEY_Cyrillic_pe">
      <source-position filename="gdk/gdkkeysyms.h" line="973"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_schwa"
              value="16778457"
              c:type="GDK_KEY_Cyrillic_schwa">
      <source-position filename="gdk/gdkkeysyms.h" line="905"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_sha"
              value="1755"
              c:type="GDK_KEY_Cyrillic_sha">
      <source-position filename="gdk/gdkkeysyms.h" line="984"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shcha"
              value="1757"
              c:type="GDK_KEY_Cyrillic_shcha">
      <source-position filename="gdk/gdkkeysyms.h" line="986"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shha"
              value="16778427"
              c:type="GDK_KEY_Cyrillic_shha">
      <source-position filename="gdk/gdkkeysyms.h" line="903"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shorti"
              value="1738"
              c:type="GDK_KEY_Cyrillic_shorti">
      <source-position filename="gdk/gdkkeysyms.h" line="967"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_softsign"
              value="1752"
              c:type="GDK_KEY_Cyrillic_softsign">
      <source-position filename="gdk/gdkkeysyms.h" line="981"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_te" value="1748" c:type="GDK_KEY_Cyrillic_te">
      <source-position filename="gdk/gdkkeysyms.h" line="977"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_tse"
              value="1731"
              c:type="GDK_KEY_Cyrillic_tse">
      <source-position filename="gdk/gdkkeysyms.h" line="960"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u" value="1749" c:type="GDK_KEY_Cyrillic_u">
      <source-position filename="gdk/gdkkeysyms.h" line="978"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_macron"
              value="16778479"
              c:type="GDK_KEY_Cyrillic_u_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="911"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_straight"
              value="16778415"
              c:type="GDK_KEY_Cyrillic_u_straight">
      <source-position filename="gdk/gdkkeysyms.h" line="893"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_straight_bar"
              value="16778417"
              c:type="GDK_KEY_Cyrillic_u_straight_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="895"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ve" value="1751" c:type="GDK_KEY_Cyrillic_ve">
      <source-position filename="gdk/gdkkeysyms.h" line="980"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ya" value="1745" c:type="GDK_KEY_Cyrillic_ya">
      <source-position filename="gdk/gdkkeysyms.h" line="974"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_yeru"
              value="1753"
              c:type="GDK_KEY_Cyrillic_yeru">
      <source-position filename="gdk/gdkkeysyms.h" line="982"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_yu" value="1728" c:type="GDK_KEY_Cyrillic_yu">
      <source-position filename="gdk/gdkkeysyms.h" line="957"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ze" value="1754" c:type="GDK_KEY_Cyrillic_ze">
      <source-position filename="gdk/gdkkeysyms.h" line="983"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_zhe"
              value="1750"
              c:type="GDK_KEY_Cyrillic_zhe">
      <source-position filename="gdk/gdkkeysyms.h" line="979"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_zhe_descender"
              value="16778391"
              c:type="GDK_KEY_Cyrillic_zhe_descender">
      <source-position filename="gdk/gdkkeysyms.h" line="885"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_D" value="68" c:type="GDK_KEY_D">
      <source-position filename="gdk/gdkkeysyms.h" line="417"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_DOS" value="269025114" c:type="GDK_KEY_DOS">
      <source-position filename="gdk/gdkkeysyms.h" line="2129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dabovedot" value="16784906" c:type="GDK_KEY_Dabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="694"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dcaron" value="463" c:type="GDK_KEY_Dcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="608"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Delete" value="65535" c:type="GDK_KEY_Delete">
      <source-position filename="gdk/gdkkeysyms.h" line="55"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Display" value="269025113" c:type="GDK_KEY_Display">
      <source-position filename="gdk/gdkkeysyms.h" line="2128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Documents"
              value="269025115"
              c:type="GDK_KEY_Documents">
      <source-position filename="gdk/gdkkeysyms.h" line="2130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_DongSign" value="16785579" c:type="GDK_KEY_DongSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1750"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Down" value="65364" c:type="GDK_KEY_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="85"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dstroke" value="464" c:type="GDK_KEY_Dstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="609"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_E" value="69" c:type="GDK_KEY_E">
      <source-position filename="gdk/gdkkeysyms.h" line="418"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ENG" value="957" c:type="GDK_KEY_ENG">
      <source-position filename="gdk/gdkkeysyms.h" line="670"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ETH" value="208" c:type="GDK_KEY_ETH">
      <source-position filename="gdk/gdkkeysyms.h" line="525"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eabovedot" value="972" c:type="GDK_KEY_Eabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="674"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eacute" value="201" c:type="GDK_KEY_Eacute">
      <source-position filename="gdk/gdkkeysyms.h" line="518"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ebelowdot" value="16785080" c:type="GDK_KEY_Ebelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1671"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecaron" value="460" c:type="GDK_KEY_Ecaron">
      <source-position filename="gdk/gdkkeysyms.h" line="607"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflex" value="202" c:type="GDK_KEY_Ecircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="519"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexacute"
              value="16785086"
              c:type="GDK_KEY_Ecircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1677"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexbelowdot"
              value="16785094"
              c:type="GDK_KEY_Ecircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1685"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexgrave"
              value="16785088"
              c:type="GDK_KEY_Ecircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1679"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexhook"
              value="16785090"
              c:type="GDK_KEY_Ecircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1681"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflextilde"
              value="16785092"
              c:type="GDK_KEY_Ecircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1683"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_EcuSign" value="16785568" c:type="GDK_KEY_EcuSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1739"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ediaeresis" value="203" c:type="GDK_KEY_Ediaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="520"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Egrave" value="200" c:type="GDK_KEY_Egrave">
      <source-position filename="gdk/gdkkeysyms.h" line="517"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ehook" value="16785082" c:type="GDK_KEY_Ehook">
      <source-position filename="gdk/gdkkeysyms.h" line="1673"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eisu_Shift" value="65327" c:type="GDK_KEY_Eisu_Shift">
      <source-position filename="gdk/gdkkeysyms.h" line="76"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eisu_toggle"
              value="65328"
              c:type="GDK_KEY_Eisu_toggle">
      <source-position filename="gdk/gdkkeysyms.h" line="77"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eject" value="269025068" c:type="GDK_KEY_Eject">
      <source-position filename="gdk/gdkkeysyms.h" line="2084"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Emacron" value="938" c:type="GDK_KEY_Emacron">
      <source-position filename="gdk/gdkkeysyms.h" line="661"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_End" value="65367" c:type="GDK_KEY_End">
      <source-position filename="gdk/gdkkeysyms.h" line="90"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eogonek" value="458" c:type="GDK_KEY_Eogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="606"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Escape" value="65307" c:type="GDK_KEY_Escape">
      <source-position filename="gdk/gdkkeysyms.h" line="54"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eth" value="208" c:type="GDK_KEY_Eth">
      <source-position filename="gdk/gdkkeysyms.h" line="526"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Etilde" value="16785084" c:type="GDK_KEY_Etilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1675"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_EuroSign" value="8364" c:type="GDK_KEY_EuroSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1751"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Excel" value="269025116" c:type="GDK_KEY_Excel">
      <source-position filename="gdk/gdkkeysyms.h" line="2131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Execute" value="65378" c:type="GDK_KEY_Execute">
      <source-position filename="gdk/gdkkeysyms.h" line="94"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Explorer" value="269025117" c:type="GDK_KEY_Explorer">
      <source-position filename="gdk/gdkkeysyms.h" line="2132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F" value="70" c:type="GDK_KEY_F">
      <source-position filename="gdk/gdkkeysyms.h" line="419"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F1" value="65470" c:type="GDK_KEY_F1">
      <source-position filename="gdk/gdkkeysyms.h" line="143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F10" value="65479" c:type="GDK_KEY_F10">
      <source-position filename="gdk/gdkkeysyms.h" line="152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F11" value="65480" c:type="GDK_KEY_F11">
      <source-position filename="gdk/gdkkeysyms.h" line="153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F12" value="65481" c:type="GDK_KEY_F12">
      <source-position filename="gdk/gdkkeysyms.h" line="155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F13" value="65482" c:type="GDK_KEY_F13">
      <source-position filename="gdk/gdkkeysyms.h" line="157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F14" value="65483" c:type="GDK_KEY_F14">
      <source-position filename="gdk/gdkkeysyms.h" line="159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F15" value="65484" c:type="GDK_KEY_F15">
      <source-position filename="gdk/gdkkeysyms.h" line="161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F16" value="65485" c:type="GDK_KEY_F16">
      <source-position filename="gdk/gdkkeysyms.h" line="163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F17" value="65486" c:type="GDK_KEY_F17">
      <source-position filename="gdk/gdkkeysyms.h" line="165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F18" value="65487" c:type="GDK_KEY_F18">
      <source-position filename="gdk/gdkkeysyms.h" line="167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F19" value="65488" c:type="GDK_KEY_F19">
      <source-position filename="gdk/gdkkeysyms.h" line="169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F2" value="65471" c:type="GDK_KEY_F2">
      <source-position filename="gdk/gdkkeysyms.h" line="144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F20" value="65489" c:type="GDK_KEY_F20">
      <source-position filename="gdk/gdkkeysyms.h" line="171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F21" value="65490" c:type="GDK_KEY_F21">
      <source-position filename="gdk/gdkkeysyms.h" line="173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F22" value="65491" c:type="GDK_KEY_F22">
      <source-position filename="gdk/gdkkeysyms.h" line="175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F23" value="65492" c:type="GDK_KEY_F23">
      <source-position filename="gdk/gdkkeysyms.h" line="177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F24" value="65493" c:type="GDK_KEY_F24">
      <source-position filename="gdk/gdkkeysyms.h" line="179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F25" value="65494" c:type="GDK_KEY_F25">
      <source-position filename="gdk/gdkkeysyms.h" line="181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F26" value="65495" c:type="GDK_KEY_F26">
      <source-position filename="gdk/gdkkeysyms.h" line="183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F27" value="65496" c:type="GDK_KEY_F27">
      <source-position filename="gdk/gdkkeysyms.h" line="185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F28" value="65497" c:type="GDK_KEY_F28">
      <source-position filename="gdk/gdkkeysyms.h" line="187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F29" value="65498" c:type="GDK_KEY_F29">
      <source-position filename="gdk/gdkkeysyms.h" line="189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F3" value="65472" c:type="GDK_KEY_F3">
      <source-position filename="gdk/gdkkeysyms.h" line="145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F30" value="65499" c:type="GDK_KEY_F30">
      <source-position filename="gdk/gdkkeysyms.h" line="191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F31" value="65500" c:type="GDK_KEY_F31">
      <source-position filename="gdk/gdkkeysyms.h" line="193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F32" value="65501" c:type="GDK_KEY_F32">
      <source-position filename="gdk/gdkkeysyms.h" line="195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F33" value="65502" c:type="GDK_KEY_F33">
      <source-position filename="gdk/gdkkeysyms.h" line="197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F34" value="65503" c:type="GDK_KEY_F34">
      <source-position filename="gdk/gdkkeysyms.h" line="199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F35" value="65504" c:type="GDK_KEY_F35">
      <source-position filename="gdk/gdkkeysyms.h" line="201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F4" value="65473" c:type="GDK_KEY_F4">
      <source-position filename="gdk/gdkkeysyms.h" line="146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F5" value="65474" c:type="GDK_KEY_F5">
      <source-position filename="gdk/gdkkeysyms.h" line="147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F6" value="65475" c:type="GDK_KEY_F6">
      <source-position filename="gdk/gdkkeysyms.h" line="148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F7" value="65476" c:type="GDK_KEY_F7">
      <source-position filename="gdk/gdkkeysyms.h" line="149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F8" value="65477" c:type="GDK_KEY_F8">
      <source-position filename="gdk/gdkkeysyms.h" line="150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F9" value="65478" c:type="GDK_KEY_F9">
      <source-position filename="gdk/gdkkeysyms.h" line="151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FFrancSign"
              value="16785571"
              c:type="GDK_KEY_FFrancSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1742"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Fabovedot" value="16784926" c:type="GDK_KEY_Fabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="699"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_0" value="16778992" c:type="GDK_KEY_Farsi_0">
      <source-position filename="gdk/gdkkeysyms.h" line="791"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_1" value="16778993" c:type="GDK_KEY_Farsi_1">
      <source-position filename="gdk/gdkkeysyms.h" line="792"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_2" value="16778994" c:type="GDK_KEY_Farsi_2">
      <source-position filename="gdk/gdkkeysyms.h" line="793"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_3" value="16778995" c:type="GDK_KEY_Farsi_3">
      <source-position filename="gdk/gdkkeysyms.h" line="794"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_4" value="16778996" c:type="GDK_KEY_Farsi_4">
      <source-position filename="gdk/gdkkeysyms.h" line="795"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_5" value="16778997" c:type="GDK_KEY_Farsi_5">
      <source-position filename="gdk/gdkkeysyms.h" line="796"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_6" value="16778998" c:type="GDK_KEY_Farsi_6">
      <source-position filename="gdk/gdkkeysyms.h" line="797"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_7" value="16778999" c:type="GDK_KEY_Farsi_7">
      <source-position filename="gdk/gdkkeysyms.h" line="798"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_8" value="16779000" c:type="GDK_KEY_Farsi_8">
      <source-position filename="gdk/gdkkeysyms.h" line="799"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_9" value="16779001" c:type="GDK_KEY_Farsi_9">
      <source-position filename="gdk/gdkkeysyms.h" line="800"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_yeh" value="16778956" c:type="GDK_KEY_Farsi_yeh">
      <source-position filename="gdk/gdkkeysyms.h" line="877"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Favorites"
              value="269025072"
              c:type="GDK_KEY_Favorites">
      <source-position filename="gdk/gdkkeysyms.h" line="2088"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Finance" value="269025084" c:type="GDK_KEY_Finance">
      <source-position filename="gdk/gdkkeysyms.h" line="2100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Find" value="65384" c:type="GDK_KEY_Find">
      <source-position filename="gdk/gdkkeysyms.h" line="99"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_First_Virtual_Screen"
              value="65232"
              c:type="GDK_KEY_First_Virtual_Screen">
      <source-position filename="gdk/gdkkeysyms.h" line="304"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Forward" value="269025063" c:type="GDK_KEY_Forward">
      <source-position filename="gdk/gdkkeysyms.h" line="2079"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FrameBack"
              value="269025181"
              c:type="GDK_KEY_FrameBack">
      <source-position filename="gdk/gdkkeysyms.h" line="2191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FrameForward"
              value="269025182"
              c:type="GDK_KEY_FrameForward">
      <source-position filename="gdk/gdkkeysyms.h" line="2192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_G" value="71" c:type="GDK_KEY_G">
      <source-position filename="gdk/gdkkeysyms.h" line="420"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gabovedot" value="725" c:type="GDK_KEY_Gabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="646"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Game" value="269025118" c:type="GDK_KEY_Game">
      <source-position filename="gdk/gdkkeysyms.h" line="2133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gbreve" value="683" c:type="GDK_KEY_Gbreve">
      <source-position filename="gdk/gdkkeysyms.h" line="637"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcaron" value="16777702" c:type="GDK_KEY_Gcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="1634"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcedilla" value="939" c:type="GDK_KEY_Gcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="662"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcircumflex" value="728" c:type="GDK_KEY_Gcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="647"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_an"
              value="16781520"
              c:type="GDK_KEY_Georgian_an">
      <source-position filename="gdk/gdkkeysyms.h" line="1592"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_ban"
              value="16781521"
              c:type="GDK_KEY_Georgian_ban">
      <source-position filename="gdk/gdkkeysyms.h" line="1593"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_can"
              value="16781546"
              c:type="GDK_KEY_Georgian_can">
      <source-position filename="gdk/gdkkeysyms.h" line="1618"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_char"
              value="16781549"
              c:type="GDK_KEY_Georgian_char">
      <source-position filename="gdk/gdkkeysyms.h" line="1621"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_chin"
              value="16781545"
              c:type="GDK_KEY_Georgian_chin">
      <source-position filename="gdk/gdkkeysyms.h" line="1617"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_cil"
              value="16781548"
              c:type="GDK_KEY_Georgian_cil">
      <source-position filename="gdk/gdkkeysyms.h" line="1620"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_don"
              value="16781523"
              c:type="GDK_KEY_Georgian_don">
      <source-position filename="gdk/gdkkeysyms.h" line="1595"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_en"
              value="16781524"
              c:type="GDK_KEY_Georgian_en">
      <source-position filename="gdk/gdkkeysyms.h" line="1596"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_fi"
              value="16781558"
              c:type="GDK_KEY_Georgian_fi">
      <source-position filename="gdk/gdkkeysyms.h" line="1630"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_gan"
              value="16781522"
              c:type="GDK_KEY_Georgian_gan">
      <source-position filename="gdk/gdkkeysyms.h" line="1594"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_ghan"
              value="16781542"
              c:type="GDK_KEY_Georgian_ghan">
      <source-position filename="gdk/gdkkeysyms.h" line="1614"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hae"
              value="16781552"
              c:type="GDK_KEY_Georgian_hae">
      <source-position filename="gdk/gdkkeysyms.h" line="1624"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_har"
              value="16781556"
              c:type="GDK_KEY_Georgian_har">
      <source-position filename="gdk/gdkkeysyms.h" line="1628"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_he"
              value="16781553"
              c:type="GDK_KEY_Georgian_he">
      <source-position filename="gdk/gdkkeysyms.h" line="1625"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hie"
              value="16781554"
              c:type="GDK_KEY_Georgian_hie">
      <source-position filename="gdk/gdkkeysyms.h" line="1626"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hoe"
              value="16781557"
              c:type="GDK_KEY_Georgian_hoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1629"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_in"
              value="16781528"
              c:type="GDK_KEY_Georgian_in">
      <source-position filename="gdk/gdkkeysyms.h" line="1600"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_jhan"
              value="16781551"
              c:type="GDK_KEY_Georgian_jhan">
      <source-position filename="gdk/gdkkeysyms.h" line="1623"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_jil"
              value="16781547"
              c:type="GDK_KEY_Georgian_jil">
      <source-position filename="gdk/gdkkeysyms.h" line="1619"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_kan"
              value="16781529"
              c:type="GDK_KEY_Georgian_kan">
      <source-position filename="gdk/gdkkeysyms.h" line="1601"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_khar"
              value="16781541"
              c:type="GDK_KEY_Georgian_khar">
      <source-position filename="gdk/gdkkeysyms.h" line="1613"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_las"
              value="16781530"
              c:type="GDK_KEY_Georgian_las">
      <source-position filename="gdk/gdkkeysyms.h" line="1602"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_man"
              value="16781531"
              c:type="GDK_KEY_Georgian_man">
      <source-position filename="gdk/gdkkeysyms.h" line="1603"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_nar"
              value="16781532"
              c:type="GDK_KEY_Georgian_nar">
      <source-position filename="gdk/gdkkeysyms.h" line="1604"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_on"
              value="16781533"
              c:type="GDK_KEY_Georgian_on">
      <source-position filename="gdk/gdkkeysyms.h" line="1605"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_par"
              value="16781534"
              c:type="GDK_KEY_Georgian_par">
      <source-position filename="gdk/gdkkeysyms.h" line="1606"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_phar"
              value="16781540"
              c:type="GDK_KEY_Georgian_phar">
      <source-position filename="gdk/gdkkeysyms.h" line="1612"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_qar"
              value="16781543"
              c:type="GDK_KEY_Georgian_qar">
      <source-position filename="gdk/gdkkeysyms.h" line="1615"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_rae"
              value="16781536"
              c:type="GDK_KEY_Georgian_rae">
      <source-position filename="gdk/gdkkeysyms.h" line="1608"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_san"
              value="16781537"
              c:type="GDK_KEY_Georgian_san">
      <source-position filename="gdk/gdkkeysyms.h" line="1609"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_shin"
              value="16781544"
              c:type="GDK_KEY_Georgian_shin">
      <source-position filename="gdk/gdkkeysyms.h" line="1616"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_tan"
              value="16781527"
              c:type="GDK_KEY_Georgian_tan">
      <source-position filename="gdk/gdkkeysyms.h" line="1599"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_tar"
              value="16781538"
              c:type="GDK_KEY_Georgian_tar">
      <source-position filename="gdk/gdkkeysyms.h" line="1610"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_un"
              value="16781539"
              c:type="GDK_KEY_Georgian_un">
      <source-position filename="gdk/gdkkeysyms.h" line="1611"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_vin"
              value="16781525"
              c:type="GDK_KEY_Georgian_vin">
      <source-position filename="gdk/gdkkeysyms.h" line="1597"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_we"
              value="16781555"
              c:type="GDK_KEY_Georgian_we">
      <source-position filename="gdk/gdkkeysyms.h" line="1627"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_xan"
              value="16781550"
              c:type="GDK_KEY_Georgian_xan">
      <source-position filename="gdk/gdkkeysyms.h" line="1622"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_zen"
              value="16781526"
              c:type="GDK_KEY_Georgian_zen">
      <source-position filename="gdk/gdkkeysyms.h" line="1598"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_zhar"
              value="16781535"
              c:type="GDK_KEY_Georgian_zhar">
      <source-position filename="gdk/gdkkeysyms.h" line="1607"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Go" value="269025119" c:type="GDK_KEY_Go">
      <source-position filename="gdk/gdkkeysyms.h" line="2134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ALPHA" value="1985" c:type="GDK_KEY_Greek_ALPHA">
      <source-position filename="gdk/gdkkeysyms.h" line="1044"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ALPHAaccent"
              value="1953"
              c:type="GDK_KEY_Greek_ALPHAaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1021"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_BETA" value="1986" c:type="GDK_KEY_Greek_BETA">
      <source-position filename="gdk/gdkkeysyms.h" line="1045"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_CHI" value="2007" c:type="GDK_KEY_Greek_CHI">
      <source-position filename="gdk/gdkkeysyms.h" line="1066"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_DELTA" value="1988" c:type="GDK_KEY_Greek_DELTA">
      <source-position filename="gdk/gdkkeysyms.h" line="1047"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_EPSILON"
              value="1989"
              c:type="GDK_KEY_Greek_EPSILON">
      <source-position filename="gdk/gdkkeysyms.h" line="1048"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_EPSILONaccent"
              value="1954"
              c:type="GDK_KEY_Greek_EPSILONaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1022"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ETA" value="1991" c:type="GDK_KEY_Greek_ETA">
      <source-position filename="gdk/gdkkeysyms.h" line="1050"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ETAaccent"
              value="1955"
              c:type="GDK_KEY_Greek_ETAaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1023"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_GAMMA" value="1987" c:type="GDK_KEY_Greek_GAMMA">
      <source-position filename="gdk/gdkkeysyms.h" line="1046"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTA" value="1993" c:type="GDK_KEY_Greek_IOTA">
      <source-position filename="gdk/gdkkeysyms.h" line="1052"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAaccent"
              value="1956"
              c:type="GDK_KEY_Greek_IOTAaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1024"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAdiaeresis"
              value="1957"
              c:type="GDK_KEY_Greek_IOTAdiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1026"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAdieresis"
              value="1957"
              c:type="GDK_KEY_Greek_IOTAdieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1025"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_KAPPA" value="1994" c:type="GDK_KEY_Greek_KAPPA">
      <source-position filename="gdk/gdkkeysyms.h" line="1053"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_LAMBDA"
              value="1995"
              c:type="GDK_KEY_Greek_LAMBDA">
      <source-position filename="gdk/gdkkeysyms.h" line="1055"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_LAMDA" value="1995" c:type="GDK_KEY_Greek_LAMDA">
      <source-position filename="gdk/gdkkeysyms.h" line="1054"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_MU" value="1996" c:type="GDK_KEY_Greek_MU">
      <source-position filename="gdk/gdkkeysyms.h" line="1056"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_NU" value="1997" c:type="GDK_KEY_Greek_NU">
      <source-position filename="gdk/gdkkeysyms.h" line="1057"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMEGA" value="2009" c:type="GDK_KEY_Greek_OMEGA">
      <source-position filename="gdk/gdkkeysyms.h" line="1068"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMEGAaccent"
              value="1963"
              c:type="GDK_KEY_Greek_OMEGAaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1030"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMICRON"
              value="1999"
              c:type="GDK_KEY_Greek_OMICRON">
      <source-position filename="gdk/gdkkeysyms.h" line="1059"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMICRONaccent"
              value="1959"
              c:type="GDK_KEY_Greek_OMICRONaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1027"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PHI" value="2006" c:type="GDK_KEY_Greek_PHI">
      <source-position filename="gdk/gdkkeysyms.h" line="1065"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PI" value="2000" c:type="GDK_KEY_Greek_PI">
      <source-position filename="gdk/gdkkeysyms.h" line="1060"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PSI" value="2008" c:type="GDK_KEY_Greek_PSI">
      <source-position filename="gdk/gdkkeysyms.h" line="1067"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_RHO" value="2001" c:type="GDK_KEY_Greek_RHO">
      <source-position filename="gdk/gdkkeysyms.h" line="1061"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_SIGMA" value="2002" c:type="GDK_KEY_Greek_SIGMA">
      <source-position filename="gdk/gdkkeysyms.h" line="1062"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_TAU" value="2004" c:type="GDK_KEY_Greek_TAU">
      <source-position filename="gdk/gdkkeysyms.h" line="1063"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_THETA" value="1992" c:type="GDK_KEY_Greek_THETA">
      <source-position filename="gdk/gdkkeysyms.h" line="1051"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILON"
              value="2005"
              c:type="GDK_KEY_Greek_UPSILON">
      <source-position filename="gdk/gdkkeysyms.h" line="1064"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILONaccent"
              value="1960"
              c:type="GDK_KEY_Greek_UPSILONaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1028"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILONdieresis"
              value="1961"
              c:type="GDK_KEY_Greek_UPSILONdieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1029"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_XI" value="1998" c:type="GDK_KEY_Greek_XI">
      <source-position filename="gdk/gdkkeysyms.h" line="1058"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ZETA" value="1990" c:type="GDK_KEY_Greek_ZETA">
      <source-position filename="gdk/gdkkeysyms.h" line="1049"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_accentdieresis"
              value="1966"
              c:type="GDK_KEY_Greek_accentdieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1031"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_alpha" value="2017" c:type="GDK_KEY_Greek_alpha">
      <source-position filename="gdk/gdkkeysyms.h" line="1069"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_alphaaccent"
              value="1969"
              c:type="GDK_KEY_Greek_alphaaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1033"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_beta" value="2018" c:type="GDK_KEY_Greek_beta">
      <source-position filename="gdk/gdkkeysyms.h" line="1070"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_chi" value="2039" c:type="GDK_KEY_Greek_chi">
      <source-position filename="gdk/gdkkeysyms.h" line="1092"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_delta" value="2020" c:type="GDK_KEY_Greek_delta">
      <source-position filename="gdk/gdkkeysyms.h" line="1072"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_epsilon"
              value="2021"
              c:type="GDK_KEY_Greek_epsilon">
      <source-position filename="gdk/gdkkeysyms.h" line="1073"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_epsilonaccent"
              value="1970"
              c:type="GDK_KEY_Greek_epsilonaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1034"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_eta" value="2023" c:type="GDK_KEY_Greek_eta">
      <source-position filename="gdk/gdkkeysyms.h" line="1075"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_etaaccent"
              value="1971"
              c:type="GDK_KEY_Greek_etaaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1035"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_finalsmallsigma"
              value="2035"
              c:type="GDK_KEY_Greek_finalsmallsigma">
      <source-position filename="gdk/gdkkeysyms.h" line="1088"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_gamma" value="2019" c:type="GDK_KEY_Greek_gamma">
      <source-position filename="gdk/gdkkeysyms.h" line="1071"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_horizbar"
              value="1967"
              c:type="GDK_KEY_Greek_horizbar">
      <source-position filename="gdk/gdkkeysyms.h" line="1032"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iota" value="2025" c:type="GDK_KEY_Greek_iota">
      <source-position filename="gdk/gdkkeysyms.h" line="1077"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotaaccent"
              value="1972"
              c:type="GDK_KEY_Greek_iotaaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1036"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotaaccentdieresis"
              value="1974"
              c:type="GDK_KEY_Greek_iotaaccentdieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1038"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotadieresis"
              value="1973"
              c:type="GDK_KEY_Greek_iotadieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1037"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_kappa" value="2026" c:type="GDK_KEY_Greek_kappa">
      <source-position filename="gdk/gdkkeysyms.h" line="1078"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_lambda"
              value="2027"
              c:type="GDK_KEY_Greek_lambda">
      <source-position filename="gdk/gdkkeysyms.h" line="1080"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_lamda" value="2027" c:type="GDK_KEY_Greek_lamda">
      <source-position filename="gdk/gdkkeysyms.h" line="1079"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_mu" value="2028" c:type="GDK_KEY_Greek_mu">
      <source-position filename="gdk/gdkkeysyms.h" line="1081"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_nu" value="2029" c:type="GDK_KEY_Greek_nu">
      <source-position filename="gdk/gdkkeysyms.h" line="1082"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omega" value="2041" c:type="GDK_KEY_Greek_omega">
      <source-position filename="gdk/gdkkeysyms.h" line="1094"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omegaaccent"
              value="1979"
              c:type="GDK_KEY_Greek_omegaaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1043"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omicron"
              value="2031"
              c:type="GDK_KEY_Greek_omicron">
      <source-position filename="gdk/gdkkeysyms.h" line="1084"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omicronaccent"
              value="1975"
              c:type="GDK_KEY_Greek_omicronaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1039"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_phi" value="2038" c:type="GDK_KEY_Greek_phi">
      <source-position filename="gdk/gdkkeysyms.h" line="1091"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_pi" value="2032" c:type="GDK_KEY_Greek_pi">
      <source-position filename="gdk/gdkkeysyms.h" line="1085"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_psi" value="2040" c:type="GDK_KEY_Greek_psi">
      <source-position filename="gdk/gdkkeysyms.h" line="1093"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_rho" value="2033" c:type="GDK_KEY_Greek_rho">
      <source-position filename="gdk/gdkkeysyms.h" line="1086"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_sigma" value="2034" c:type="GDK_KEY_Greek_sigma">
      <source-position filename="gdk/gdkkeysyms.h" line="1087"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_switch"
              value="65406"
              c:type="GDK_KEY_Greek_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="1095"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_tau" value="2036" c:type="GDK_KEY_Greek_tau">
      <source-position filename="gdk/gdkkeysyms.h" line="1089"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_theta" value="2024" c:type="GDK_KEY_Greek_theta">
      <source-position filename="gdk/gdkkeysyms.h" line="1076"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilon"
              value="2037"
              c:type="GDK_KEY_Greek_upsilon">
      <source-position filename="gdk/gdkkeysyms.h" line="1090"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilonaccent"
              value="1976"
              c:type="GDK_KEY_Greek_upsilonaccent">
      <source-position filename="gdk/gdkkeysyms.h" line="1040"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilonaccentdieresis"
              value="1978"
              c:type="GDK_KEY_Greek_upsilonaccentdieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1042"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilondieresis"
              value="1977"
              c:type="GDK_KEY_Greek_upsilondieresis">
      <source-position filename="gdk/gdkkeysyms.h" line="1041"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_xi" value="2030" c:type="GDK_KEY_Greek_xi">
      <source-position filename="gdk/gdkkeysyms.h" line="1083"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_zeta" value="2022" c:type="GDK_KEY_Greek_zeta">
      <source-position filename="gdk/gdkkeysyms.h" line="1074"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Green" value="269025188" c:type="GDK_KEY_Green">
      <source-position filename="gdk/gdkkeysyms.h" line="2198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_H" value="72" c:type="GDK_KEY_H">
      <source-position filename="gdk/gdkkeysyms.h" line="421"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul" value="65329" c:type="GDK_KEY_Hangul">
      <source-position filename="gdk/gdkkeysyms.h" line="1395"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_A" value="3775" c:type="GDK_KEY_Hangul_A">
      <source-position filename="gdk/gdkkeysyms.h" line="1441"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AE" value="3776" c:type="GDK_KEY_Hangul_AE">
      <source-position filename="gdk/gdkkeysyms.h" line="1442"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AraeA"
              value="3830"
              c:type="GDK_KEY_Hangul_AraeA">
      <source-position filename="gdk/gdkkeysyms.h" line="1496"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AraeAE"
              value="3831"
              c:type="GDK_KEY_Hangul_AraeAE">
      <source-position filename="gdk/gdkkeysyms.h" line="1497"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Banja"
              value="65337"
              c:type="GDK_KEY_Hangul_Banja">
      <source-position filename="gdk/gdkkeysyms.h" line="1403"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Cieuc"
              value="3770"
              c:type="GDK_KEY_Hangul_Cieuc">
      <source-position filename="gdk/gdkkeysyms.h" line="1436"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Codeinput"
              value="65335"
              c:type="GDK_KEY_Hangul_Codeinput">
      <source-position filename="gdk/gdkkeysyms.h" line="1401"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Dikeud"
              value="3751"
              c:type="GDK_KEY_Hangul_Dikeud">
      <source-position filename="gdk/gdkkeysyms.h" line="1417"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_E" value="3780" c:type="GDK_KEY_Hangul_E">
      <source-position filename="gdk/gdkkeysyms.h" line="1446"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_EO" value="3779" c:type="GDK_KEY_Hangul_EO">
      <source-position filename="gdk/gdkkeysyms.h" line="1445"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_EU" value="3793" c:type="GDK_KEY_Hangul_EU">
      <source-position filename="gdk/gdkkeysyms.h" line="1459"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_End" value="65331" c:type="GDK_KEY_Hangul_End">
      <source-position filename="gdk/gdkkeysyms.h" line="1397"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Hanja"
              value="65332"
              c:type="GDK_KEY_Hangul_Hanja">
      <source-position filename="gdk/gdkkeysyms.h" line="1398"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Hieuh"
              value="3774"
              c:type="GDK_KEY_Hangul_Hieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1440"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_I" value="3795" c:type="GDK_KEY_Hangul_I">
      <source-position filename="gdk/gdkkeysyms.h" line="1461"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Ieung"
              value="3767"
              c:type="GDK_KEY_Hangul_Ieung">
      <source-position filename="gdk/gdkkeysyms.h" line="1433"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Cieuc"
              value="3818"
              c:type="GDK_KEY_Hangul_J_Cieuc">
      <source-position filename="gdk/gdkkeysyms.h" line="1484"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Dikeud"
              value="3802"
              c:type="GDK_KEY_Hangul_J_Dikeud">
      <source-position filename="gdk/gdkkeysyms.h" line="1468"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Hieuh"
              value="3822"
              c:type="GDK_KEY_Hangul_J_Hieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1488"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Ieung"
              value="3816"
              c:type="GDK_KEY_Hangul_J_Ieung">
      <source-position filename="gdk/gdkkeysyms.h" line="1482"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Jieuj"
              value="3817"
              c:type="GDK_KEY_Hangul_J_Jieuj">
      <source-position filename="gdk/gdkkeysyms.h" line="1483"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Khieuq"
              value="3819"
              c:type="GDK_KEY_Hangul_J_Khieuq">
      <source-position filename="gdk/gdkkeysyms.h" line="1485"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Kiyeog"
              value="3796"
              c:type="GDK_KEY_Hangul_J_Kiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1462"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_KiyeogSios"
              value="3798"
              c:type="GDK_KEY_Hangul_J_KiyeogSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1464"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_KkogjiDalrinIeung"
              value="3833"
              c:type="GDK_KEY_Hangul_J_KkogjiDalrinIeung">
      <source-position filename="gdk/gdkkeysyms.h" line="1499"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Mieum"
              value="3811"
              c:type="GDK_KEY_Hangul_J_Mieum">
      <source-position filename="gdk/gdkkeysyms.h" line="1477"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Nieun"
              value="3799"
              c:type="GDK_KEY_Hangul_J_Nieun">
      <source-position filename="gdk/gdkkeysyms.h" line="1465"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_NieunHieuh"
              value="3801"
              c:type="GDK_KEY_Hangul_J_NieunHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1467"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_NieunJieuj"
              value="3800"
              c:type="GDK_KEY_Hangul_J_NieunJieuj">
      <source-position filename="gdk/gdkkeysyms.h" line="1466"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_PanSios"
              value="3832"
              c:type="GDK_KEY_Hangul_J_PanSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1498"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Phieuf"
              value="3821"
              c:type="GDK_KEY_Hangul_J_Phieuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1487"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Pieub"
              value="3812"
              c:type="GDK_KEY_Hangul_J_Pieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1478"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_PieubSios"
              value="3813"
              c:type="GDK_KEY_Hangul_J_PieubSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1479"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Rieul"
              value="3803"
              c:type="GDK_KEY_Hangul_J_Rieul">
      <source-position filename="gdk/gdkkeysyms.h" line="1469"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulHieuh"
              value="3810"
              c:type="GDK_KEY_Hangul_J_RieulHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1476"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulKiyeog"
              value="3804"
              c:type="GDK_KEY_Hangul_J_RieulKiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1470"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulMieum"
              value="3805"
              c:type="GDK_KEY_Hangul_J_RieulMieum">
      <source-position filename="gdk/gdkkeysyms.h" line="1471"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulPhieuf"
              value="3809"
              c:type="GDK_KEY_Hangul_J_RieulPhieuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1475"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulPieub"
              value="3806"
              c:type="GDK_KEY_Hangul_J_RieulPieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1472"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulSios"
              value="3807"
              c:type="GDK_KEY_Hangul_J_RieulSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1473"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulTieut"
              value="3808"
              c:type="GDK_KEY_Hangul_J_RieulTieut">
      <source-position filename="gdk/gdkkeysyms.h" line="1474"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Sios"
              value="3814"
              c:type="GDK_KEY_Hangul_J_Sios">
      <source-position filename="gdk/gdkkeysyms.h" line="1480"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_SsangKiyeog"
              value="3797"
              c:type="GDK_KEY_Hangul_J_SsangKiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1463"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_SsangSios"
              value="3815"
              c:type="GDK_KEY_Hangul_J_SsangSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1481"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Tieut"
              value="3820"
              c:type="GDK_KEY_Hangul_J_Tieut">
      <source-position filename="gdk/gdkkeysyms.h" line="1486"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_YeorinHieuh"
              value="3834"
              c:type="GDK_KEY_Hangul_J_YeorinHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1500"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jamo"
              value="65333"
              c:type="GDK_KEY_Hangul_Jamo">
      <source-position filename="gdk/gdkkeysyms.h" line="1399"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jeonja"
              value="65336"
              c:type="GDK_KEY_Hangul_Jeonja">
      <source-position filename="gdk/gdkkeysyms.h" line="1402"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jieuj"
              value="3768"
              c:type="GDK_KEY_Hangul_Jieuj">
      <source-position filename="gdk/gdkkeysyms.h" line="1434"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Khieuq"
              value="3771"
              c:type="GDK_KEY_Hangul_Khieuq">
      <source-position filename="gdk/gdkkeysyms.h" line="1437"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Kiyeog"
              value="3745"
              c:type="GDK_KEY_Hangul_Kiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1411"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_KiyeogSios"
              value="3747"
              c:type="GDK_KEY_Hangul_KiyeogSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1413"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_KkogjiDalrinIeung"
              value="3827"
              c:type="GDK_KEY_Hangul_KkogjiDalrinIeung">
      <source-position filename="gdk/gdkkeysyms.h" line="1493"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Mieum"
              value="3761"
              c:type="GDK_KEY_Hangul_Mieum">
      <source-position filename="gdk/gdkkeysyms.h" line="1427"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_MultipleCandidate"
              value="65341"
              c:type="GDK_KEY_Hangul_MultipleCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="1407"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Nieun"
              value="3748"
              c:type="GDK_KEY_Hangul_Nieun">
      <source-position filename="gdk/gdkkeysyms.h" line="1414"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_NieunHieuh"
              value="3750"
              c:type="GDK_KEY_Hangul_NieunHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1416"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_NieunJieuj"
              value="3749"
              c:type="GDK_KEY_Hangul_NieunJieuj">
      <source-position filename="gdk/gdkkeysyms.h" line="1415"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_O" value="3783" c:type="GDK_KEY_Hangul_O">
      <source-position filename="gdk/gdkkeysyms.h" line="1449"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_OE" value="3786" c:type="GDK_KEY_Hangul_OE">
      <source-position filename="gdk/gdkkeysyms.h" line="1452"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PanSios"
              value="3826"
              c:type="GDK_KEY_Hangul_PanSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1492"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Phieuf"
              value="3773"
              c:type="GDK_KEY_Hangul_Phieuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1439"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Pieub"
              value="3762"
              c:type="GDK_KEY_Hangul_Pieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1428"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PieubSios"
              value="3764"
              c:type="GDK_KEY_Hangul_PieubSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1430"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PostHanja"
              value="65339"
              c:type="GDK_KEY_Hangul_PostHanja">
      <source-position filename="gdk/gdkkeysyms.h" line="1405"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PreHanja"
              value="65338"
              c:type="GDK_KEY_Hangul_PreHanja">
      <source-position filename="gdk/gdkkeysyms.h" line="1404"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PreviousCandidate"
              value="65342"
              c:type="GDK_KEY_Hangul_PreviousCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="1408"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Rieul"
              value="3753"
              c:type="GDK_KEY_Hangul_Rieul">
      <source-position filename="gdk/gdkkeysyms.h" line="1419"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulHieuh"
              value="3760"
              c:type="GDK_KEY_Hangul_RieulHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1426"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulKiyeog"
              value="3754"
              c:type="GDK_KEY_Hangul_RieulKiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1420"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulMieum"
              value="3755"
              c:type="GDK_KEY_Hangul_RieulMieum">
      <source-position filename="gdk/gdkkeysyms.h" line="1421"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulPhieuf"
              value="3759"
              c:type="GDK_KEY_Hangul_RieulPhieuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1425"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulPieub"
              value="3756"
              c:type="GDK_KEY_Hangul_RieulPieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1422"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulSios"
              value="3757"
              c:type="GDK_KEY_Hangul_RieulSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1423"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulTieut"
              value="3758"
              c:type="GDK_KEY_Hangul_RieulTieut">
      <source-position filename="gdk/gdkkeysyms.h" line="1424"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulYeorinHieuh"
              value="3823"
              c:type="GDK_KEY_Hangul_RieulYeorinHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1489"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Romaja"
              value="65334"
              c:type="GDK_KEY_Hangul_Romaja">
      <source-position filename="gdk/gdkkeysyms.h" line="1400"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SingleCandidate"
              value="65340"
              c:type="GDK_KEY_Hangul_SingleCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="1406"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Sios" value="3765" c:type="GDK_KEY_Hangul_Sios">
      <source-position filename="gdk/gdkkeysyms.h" line="1431"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Special"
              value="65343"
              c:type="GDK_KEY_Hangul_Special">
      <source-position filename="gdk/gdkkeysyms.h" line="1409"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangDikeud"
              value="3752"
              c:type="GDK_KEY_Hangul_SsangDikeud">
      <source-position filename="gdk/gdkkeysyms.h" line="1418"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangJieuj"
              value="3769"
              c:type="GDK_KEY_Hangul_SsangJieuj">
      <source-position filename="gdk/gdkkeysyms.h" line="1435"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangKiyeog"
              value="3746"
              c:type="GDK_KEY_Hangul_SsangKiyeog">
      <source-position filename="gdk/gdkkeysyms.h" line="1412"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangPieub"
              value="3763"
              c:type="GDK_KEY_Hangul_SsangPieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1429"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangSios"
              value="3766"
              c:type="GDK_KEY_Hangul_SsangSios">
      <source-position filename="gdk/gdkkeysyms.h" line="1432"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Start"
              value="65330"
              c:type="GDK_KEY_Hangul_Start">
      <source-position filename="gdk/gdkkeysyms.h" line="1396"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumMieum"
              value="3824"
              c:type="GDK_KEY_Hangul_SunkyeongeumMieum">
      <source-position filename="gdk/gdkkeysyms.h" line="1490"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumPhieuf"
              value="3828"
              c:type="GDK_KEY_Hangul_SunkyeongeumPhieuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1494"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumPieub"
              value="3825"
              c:type="GDK_KEY_Hangul_SunkyeongeumPieub">
      <source-position filename="gdk/gdkkeysyms.h" line="1491"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Tieut"
              value="3772"
              c:type="GDK_KEY_Hangul_Tieut">
      <source-position filename="gdk/gdkkeysyms.h" line="1438"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_U" value="3788" c:type="GDK_KEY_Hangul_U">
      <source-position filename="gdk/gdkkeysyms.h" line="1454"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WA" value="3784" c:type="GDK_KEY_Hangul_WA">
      <source-position filename="gdk/gdkkeysyms.h" line="1450"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WAE" value="3785" c:type="GDK_KEY_Hangul_WAE">
      <source-position filename="gdk/gdkkeysyms.h" line="1451"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WE" value="3790" c:type="GDK_KEY_Hangul_WE">
      <source-position filename="gdk/gdkkeysyms.h" line="1456"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WEO" value="3789" c:type="GDK_KEY_Hangul_WEO">
      <source-position filename="gdk/gdkkeysyms.h" line="1455"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WI" value="3791" c:type="GDK_KEY_Hangul_WI">
      <source-position filename="gdk/gdkkeysyms.h" line="1457"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YA" value="3777" c:type="GDK_KEY_Hangul_YA">
      <source-position filename="gdk/gdkkeysyms.h" line="1443"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YAE" value="3778" c:type="GDK_KEY_Hangul_YAE">
      <source-position filename="gdk/gdkkeysyms.h" line="1444"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YE" value="3782" c:type="GDK_KEY_Hangul_YE">
      <source-position filename="gdk/gdkkeysyms.h" line="1448"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YEO" value="3781" c:type="GDK_KEY_Hangul_YEO">
      <source-position filename="gdk/gdkkeysyms.h" line="1447"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YI" value="3794" c:type="GDK_KEY_Hangul_YI">
      <source-position filename="gdk/gdkkeysyms.h" line="1460"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YO" value="3787" c:type="GDK_KEY_Hangul_YO">
      <source-position filename="gdk/gdkkeysyms.h" line="1453"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YU" value="3792" c:type="GDK_KEY_Hangul_YU">
      <source-position filename="gdk/gdkkeysyms.h" line="1458"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YeorinHieuh"
              value="3829"
              c:type="GDK_KEY_Hangul_YeorinHieuh">
      <source-position filename="gdk/gdkkeysyms.h" line="1495"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_switch"
              value="65406"
              c:type="GDK_KEY_Hangul_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="1410"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hankaku" value="65321" c:type="GDK_KEY_Hankaku">
      <source-position filename="gdk/gdkkeysyms.h" line="70"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hcircumflex" value="678" c:type="GDK_KEY_Hcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="635"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hebrew_switch"
              value="65406"
              c:type="GDK_KEY_Hebrew_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="1310"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Help" value="65386" c:type="GDK_KEY_Help">
      <source-position filename="gdk/gdkkeysyms.h" line="101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Henkan" value="65315" c:type="GDK_KEY_Henkan">
      <source-position filename="gdk/gdkkeysyms.h" line="64"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Henkan_Mode"
              value="65315"
              c:type="GDK_KEY_Henkan_Mode">
      <source-position filename="gdk/gdkkeysyms.h" line="63"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hibernate"
              value="269025192"
              c:type="GDK_KEY_Hibernate">
      <source-position filename="gdk/gdkkeysyms.h" line="2202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hiragana" value="65317" c:type="GDK_KEY_Hiragana">
      <source-position filename="gdk/gdkkeysyms.h" line="66"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hiragana_Katakana"
              value="65319"
              c:type="GDK_KEY_Hiragana_Katakana">
      <source-position filename="gdk/gdkkeysyms.h" line="68"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_History" value="269025079" c:type="GDK_KEY_History">
      <source-position filename="gdk/gdkkeysyms.h" line="2095"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Home" value="65360" c:type="GDK_KEY_Home">
      <source-position filename="gdk/gdkkeysyms.h" line="81"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_HomePage" value="269025048" c:type="GDK_KEY_HomePage">
      <source-position filename="gdk/gdkkeysyms.h" line="2064"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_HotLinks" value="269025082" c:type="GDK_KEY_HotLinks">
      <source-position filename="gdk/gdkkeysyms.h" line="2098"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hstroke" value="673" c:type="GDK_KEY_Hstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="634"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hyper_L" value="65517" c:type="GDK_KEY_Hyper_L">
      <source-position filename="gdk/gdkkeysyms.h" line="215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hyper_R" value="65518" c:type="GDK_KEY_Hyper_R">
      <source-position filename="gdk/gdkkeysyms.h" line="216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_I" value="73" c:type="GDK_KEY_I">
      <source-position filename="gdk/gdkkeysyms.h" line="422"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Center_Object"
              value="65075"
              c:type="GDK_KEY_ISO_Center_Object">
      <source-position filename="gdk/gdkkeysyms.h" line="255"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Continuous_Underline"
              value="65072"
              c:type="GDK_KEY_ISO_Continuous_Underline">
      <source-position filename="gdk/gdkkeysyms.h" line="252"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Discontinuous_Underline"
              value="65073"
              c:type="GDK_KEY_ISO_Discontinuous_Underline">
      <source-position filename="gdk/gdkkeysyms.h" line="253"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Emphasize"
              value="65074"
              c:type="GDK_KEY_ISO_Emphasize">
      <source-position filename="gdk/gdkkeysyms.h" line="254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Enter" value="65076" c:type="GDK_KEY_ISO_Enter">
      <source-position filename="gdk/gdkkeysyms.h" line="256"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Down"
              value="65071"
              c:type="GDK_KEY_ISO_Fast_Cursor_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="251"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Left"
              value="65068"
              c:type="GDK_KEY_ISO_Fast_Cursor_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="248"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Right"
              value="65069"
              c:type="GDK_KEY_ISO_Fast_Cursor_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="249"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Up"
              value="65070"
              c:type="GDK_KEY_ISO_Fast_Cursor_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="250"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_First_Group"
              value="65036"
              c:type="GDK_KEY_ISO_First_Group">
      <source-position filename="gdk/gdkkeysyms.h" line="232"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_First_Group_Lock"
              value="65037"
              c:type="GDK_KEY_ISO_First_Group_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="233"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Latch"
              value="65030"
              c:type="GDK_KEY_ISO_Group_Latch">
      <source-position filename="gdk/gdkkeysyms.h" line="226"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Lock"
              value="65031"
              c:type="GDK_KEY_ISO_Group_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="227"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Shift"
              value="65406"
              c:type="GDK_KEY_ISO_Group_Shift">
      <source-position filename="gdk/gdkkeysyms.h" line="225"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Last_Group"
              value="65038"
              c:type="GDK_KEY_ISO_Last_Group">
      <source-position filename="gdk/gdkkeysyms.h" line="234"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Last_Group_Lock"
              value="65039"
              c:type="GDK_KEY_ISO_Last_Group_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="235"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Left_Tab"
              value="65056"
              c:type="GDK_KEY_ISO_Left_Tab">
      <source-position filename="gdk/gdkkeysyms.h" line="236"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level2_Latch"
              value="65026"
              c:type="GDK_KEY_ISO_Level2_Latch">
      <source-position filename="gdk/gdkkeysyms.h" line="218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Latch"
              value="65028"
              c:type="GDK_KEY_ISO_Level3_Latch">
      <source-position filename="gdk/gdkkeysyms.h" line="220"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Lock"
              value="65029"
              c:type="GDK_KEY_ISO_Level3_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Shift"
              value="65027"
              c:type="GDK_KEY_ISO_Level3_Shift">
      <source-position filename="gdk/gdkkeysyms.h" line="219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Latch"
              value="65042"
              c:type="GDK_KEY_ISO_Level5_Latch">
      <source-position filename="gdk/gdkkeysyms.h" line="223"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Lock"
              value="65043"
              c:type="GDK_KEY_ISO_Level5_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="224"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Shift"
              value="65041"
              c:type="GDK_KEY_ISO_Level5_Shift">
      <source-position filename="gdk/gdkkeysyms.h" line="222"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Lock" value="65025" c:type="GDK_KEY_ISO_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Move_Line_Down"
              value="65058"
              c:type="GDK_KEY_ISO_Move_Line_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="238"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Move_Line_Up"
              value="65057"
              c:type="GDK_KEY_ISO_Move_Line_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Next_Group"
              value="65032"
              c:type="GDK_KEY_ISO_Next_Group">
      <source-position filename="gdk/gdkkeysyms.h" line="228"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Next_Group_Lock"
              value="65033"
              c:type="GDK_KEY_ISO_Next_Group_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Line_Down"
              value="65060"
              c:type="GDK_KEY_ISO_Partial_Line_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="240"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Line_Up"
              value="65059"
              c:type="GDK_KEY_ISO_Partial_Line_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="239"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Space_Left"
              value="65061"
              c:type="GDK_KEY_ISO_Partial_Space_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="241"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Space_Right"
              value="65062"
              c:type="GDK_KEY_ISO_Partial_Space_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="242"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Prev_Group"
              value="65034"
              c:type="GDK_KEY_ISO_Prev_Group">
      <source-position filename="gdk/gdkkeysyms.h" line="230"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Prev_Group_Lock"
              value="65035"
              c:type="GDK_KEY_ISO_Prev_Group_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="231"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Both_Margins"
              value="65067"
              c:type="GDK_KEY_ISO_Release_Both_Margins">
      <source-position filename="gdk/gdkkeysyms.h" line="247"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Margin_Left"
              value="65065"
              c:type="GDK_KEY_ISO_Release_Margin_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="245"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Margin_Right"
              value="65066"
              c:type="GDK_KEY_ISO_Release_Margin_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Set_Margin_Left"
              value="65063"
              c:type="GDK_KEY_ISO_Set_Margin_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="243"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Set_Margin_Right"
              value="65064"
              c:type="GDK_KEY_ISO_Set_Margin_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="244"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iabovedot" value="681" c:type="GDK_KEY_Iabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="636"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iacute" value="205" c:type="GDK_KEY_Iacute">
      <source-position filename="gdk/gdkkeysyms.h" line="522"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ibelowdot" value="16785098" c:type="GDK_KEY_Ibelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1689"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ibreve" value="16777516" c:type="GDK_KEY_Ibreve">
      <source-position filename="gdk/gdkkeysyms.h" line="1632"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Icircumflex" value="206" c:type="GDK_KEY_Icircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="523"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Idiaeresis" value="207" c:type="GDK_KEY_Idiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="524"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Igrave" value="204" c:type="GDK_KEY_Igrave">
      <source-position filename="gdk/gdkkeysyms.h" line="521"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ihook" value="16785096" c:type="GDK_KEY_Ihook">
      <source-position filename="gdk/gdkkeysyms.h" line="1687"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Imacron" value="975" c:type="GDK_KEY_Imacron">
      <source-position filename="gdk/gdkkeysyms.h" line="675"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Insert" value="65379" c:type="GDK_KEY_Insert">
      <source-position filename="gdk/gdkkeysyms.h" line="95"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iogonek" value="967" c:type="GDK_KEY_Iogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="673"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Itilde" value="933" c:type="GDK_KEY_Itilde">
      <source-position filename="gdk/gdkkeysyms.h" line="659"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_J" value="74" c:type="GDK_KEY_J">
      <source-position filename="gdk/gdkkeysyms.h" line="423"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Jcircumflex" value="684" c:type="GDK_KEY_Jcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="638"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_K" value="75" c:type="GDK_KEY_K">
      <source-position filename="gdk/gdkkeysyms.h" line="424"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_0" value="65456" c:type="GDK_KEY_KP_0">
      <source-position filename="gdk/gdkkeysyms.h" line="133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_1" value="65457" c:type="GDK_KEY_KP_1">
      <source-position filename="gdk/gdkkeysyms.h" line="134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_2" value="65458" c:type="GDK_KEY_KP_2">
      <source-position filename="gdk/gdkkeysyms.h" line="135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_3" value="65459" c:type="GDK_KEY_KP_3">
      <source-position filename="gdk/gdkkeysyms.h" line="136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_4" value="65460" c:type="GDK_KEY_KP_4">
      <source-position filename="gdk/gdkkeysyms.h" line="137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_5" value="65461" c:type="GDK_KEY_KP_5">
      <source-position filename="gdk/gdkkeysyms.h" line="138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_6" value="65462" c:type="GDK_KEY_KP_6">
      <source-position filename="gdk/gdkkeysyms.h" line="139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_7" value="65463" c:type="GDK_KEY_KP_7">
      <source-position filename="gdk/gdkkeysyms.h" line="140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_8" value="65464" c:type="GDK_KEY_KP_8">
      <source-position filename="gdk/gdkkeysyms.h" line="141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_9" value="65465" c:type="GDK_KEY_KP_9">
      <source-position filename="gdk/gdkkeysyms.h" line="142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Add" value="65451" c:type="GDK_KEY_KP_Add">
      <source-position filename="gdk/gdkkeysyms.h" line="128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Begin" value="65437" c:type="GDK_KEY_KP_Begin">
      <source-position filename="gdk/gdkkeysyms.h" line="123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Decimal" value="65454" c:type="GDK_KEY_KP_Decimal">
      <source-position filename="gdk/gdkkeysyms.h" line="131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Delete" value="65439" c:type="GDK_KEY_KP_Delete">
      <source-position filename="gdk/gdkkeysyms.h" line="125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Divide" value="65455" c:type="GDK_KEY_KP_Divide">
      <source-position filename="gdk/gdkkeysyms.h" line="132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Down" value="65433" c:type="GDK_KEY_KP_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_End" value="65436" c:type="GDK_KEY_KP_End">
      <source-position filename="gdk/gdkkeysyms.h" line="122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Enter" value="65421" c:type="GDK_KEY_KP_Enter">
      <source-position filename="gdk/gdkkeysyms.h" line="108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Equal" value="65469" c:type="GDK_KEY_KP_Equal">
      <source-position filename="gdk/gdkkeysyms.h" line="126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F1" value="65425" c:type="GDK_KEY_KP_F1">
      <source-position filename="gdk/gdkkeysyms.h" line="109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F2" value="65426" c:type="GDK_KEY_KP_F2">
      <source-position filename="gdk/gdkkeysyms.h" line="110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F3" value="65427" c:type="GDK_KEY_KP_F3">
      <source-position filename="gdk/gdkkeysyms.h" line="111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F4" value="65428" c:type="GDK_KEY_KP_F4">
      <source-position filename="gdk/gdkkeysyms.h" line="112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Home" value="65429" c:type="GDK_KEY_KP_Home">
      <source-position filename="gdk/gdkkeysyms.h" line="113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Insert" value="65438" c:type="GDK_KEY_KP_Insert">
      <source-position filename="gdk/gdkkeysyms.h" line="124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Left" value="65430" c:type="GDK_KEY_KP_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Multiply"
              value="65450"
              c:type="GDK_KEY_KP_Multiply">
      <source-position filename="gdk/gdkkeysyms.h" line="127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Next" value="65435" c:type="GDK_KEY_KP_Next">
      <source-position filename="gdk/gdkkeysyms.h" line="120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Page_Down"
              value="65435"
              c:type="GDK_KEY_KP_Page_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Page_Up" value="65434" c:type="GDK_KEY_KP_Page_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Prior" value="65434" c:type="GDK_KEY_KP_Prior">
      <source-position filename="gdk/gdkkeysyms.h" line="118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Right" value="65432" c:type="GDK_KEY_KP_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Separator"
              value="65452"
              c:type="GDK_KEY_KP_Separator">
      <source-position filename="gdk/gdkkeysyms.h" line="129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Space" value="65408" c:type="GDK_KEY_KP_Space">
      <source-position filename="gdk/gdkkeysyms.h" line="106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Subtract"
              value="65453"
              c:type="GDK_KEY_KP_Subtract">
      <source-position filename="gdk/gdkkeysyms.h" line="130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Tab" value="65417" c:type="GDK_KEY_KP_Tab">
      <source-position filename="gdk/gdkkeysyms.h" line="107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Up" value="65431" c:type="GDK_KEY_KP_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kana_Lock" value="65325" c:type="GDK_KEY_Kana_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="74"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kana_Shift" value="65326" c:type="GDK_KEY_Kana_Shift">
      <source-position filename="gdk/gdkkeysyms.h" line="75"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kanji" value="65313" c:type="GDK_KEY_Kanji">
      <source-position filename="gdk/gdkkeysyms.h" line="61"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kanji_Bangou"
              value="65335"
              c:type="GDK_KEY_Kanji_Bangou">
      <source-position filename="gdk/gdkkeysyms.h" line="78"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Katakana" value="65318" c:type="GDK_KEY_Katakana">
      <source-position filename="gdk/gdkkeysyms.h" line="67"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdBrightnessDown"
              value="269025030"
              c:type="GDK_KEY_KbdBrightnessDown">
      <source-position filename="gdk/gdkkeysyms.h" line="2055"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdBrightnessUp"
              value="269025029"
              c:type="GDK_KEY_KbdBrightnessUp">
      <source-position filename="gdk/gdkkeysyms.h" line="2054"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdLightOnOff"
              value="269025028"
              c:type="GDK_KEY_KbdLightOnOff">
      <source-position filename="gdk/gdkkeysyms.h" line="2053"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kcedilla" value="979" c:type="GDK_KEY_Kcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="678"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Korean_Won" value="3839" c:type="GDK_KEY_Korean_Won">
      <source-position filename="gdk/gdkkeysyms.h" line="1501"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L" value="76" c:type="GDK_KEY_L">
      <source-position filename="gdk/gdkkeysyms.h" line="425"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L1" value="65480" c:type="GDK_KEY_L1">
      <source-position filename="gdk/gdkkeysyms.h" line="154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L10" value="65489" c:type="GDK_KEY_L10">
      <source-position filename="gdk/gdkkeysyms.h" line="172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L2" value="65481" c:type="GDK_KEY_L2">
      <source-position filename="gdk/gdkkeysyms.h" line="156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L3" value="65482" c:type="GDK_KEY_L3">
      <source-position filename="gdk/gdkkeysyms.h" line="158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L4" value="65483" c:type="GDK_KEY_L4">
      <source-position filename="gdk/gdkkeysyms.h" line="160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L5" value="65484" c:type="GDK_KEY_L5">
      <source-position filename="gdk/gdkkeysyms.h" line="162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L6" value="65485" c:type="GDK_KEY_L6">
      <source-position filename="gdk/gdkkeysyms.h" line="164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L7" value="65486" c:type="GDK_KEY_L7">
      <source-position filename="gdk/gdkkeysyms.h" line="166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L8" value="65487" c:type="GDK_KEY_L8">
      <source-position filename="gdk/gdkkeysyms.h" line="168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L9" value="65488" c:type="GDK_KEY_L9">
      <source-position filename="gdk/gdkkeysyms.h" line="170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lacute" value="453" c:type="GDK_KEY_Lacute">
      <source-position filename="gdk/gdkkeysyms.h" line="603"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Last_Virtual_Screen"
              value="65236"
              c:type="GDK_KEY_Last_Virtual_Screen">
      <source-position filename="gdk/gdkkeysyms.h" line="307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch0" value="269025088" c:type="GDK_KEY_Launch0">
      <source-position filename="gdk/gdkkeysyms.h" line="2104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch1" value="269025089" c:type="GDK_KEY_Launch1">
      <source-position filename="gdk/gdkkeysyms.h" line="2105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch2" value="269025090" c:type="GDK_KEY_Launch2">
      <source-position filename="gdk/gdkkeysyms.h" line="2106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch3" value="269025091" c:type="GDK_KEY_Launch3">
      <source-position filename="gdk/gdkkeysyms.h" line="2107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch4" value="269025092" c:type="GDK_KEY_Launch4">
      <source-position filename="gdk/gdkkeysyms.h" line="2108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch5" value="269025093" c:type="GDK_KEY_Launch5">
      <source-position filename="gdk/gdkkeysyms.h" line="2109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch6" value="269025094" c:type="GDK_KEY_Launch6">
      <source-position filename="gdk/gdkkeysyms.h" line="2110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch7" value="269025095" c:type="GDK_KEY_Launch7">
      <source-position filename="gdk/gdkkeysyms.h" line="2111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch8" value="269025096" c:type="GDK_KEY_Launch8">
      <source-position filename="gdk/gdkkeysyms.h" line="2112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch9" value="269025097" c:type="GDK_KEY_Launch9">
      <source-position filename="gdk/gdkkeysyms.h" line="2113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchA" value="269025098" c:type="GDK_KEY_LaunchA">
      <source-position filename="gdk/gdkkeysyms.h" line="2114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchB" value="269025099" c:type="GDK_KEY_LaunchB">
      <source-position filename="gdk/gdkkeysyms.h" line="2115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchC" value="269025100" c:type="GDK_KEY_LaunchC">
      <source-position filename="gdk/gdkkeysyms.h" line="2116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchD" value="269025101" c:type="GDK_KEY_LaunchD">
      <source-position filename="gdk/gdkkeysyms.h" line="2117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchE" value="269025102" c:type="GDK_KEY_LaunchE">
      <source-position filename="gdk/gdkkeysyms.h" line="2118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchF" value="269025103" c:type="GDK_KEY_LaunchF">
      <source-position filename="gdk/gdkkeysyms.h" line="2119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lbelowdot" value="16784950" c:type="GDK_KEY_Lbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1645"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lcaron" value="421" c:type="GDK_KEY_Lcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="580"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lcedilla" value="934" c:type="GDK_KEY_Lcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="660"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Left" value="65361" c:type="GDK_KEY_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="82"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LightBulb"
              value="269025077"
              c:type="GDK_KEY_LightBulb">
      <source-position filename="gdk/gdkkeysyms.h" line="2093"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Linefeed" value="65290" c:type="GDK_KEY_Linefeed">
      <source-position filename="gdk/gdkkeysyms.h" line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LiraSign" value="16785572" c:type="GDK_KEY_LiraSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1743"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LogOff" value="269025121" c:type="GDK_KEY_LogOff">
      <source-position filename="gdk/gdkkeysyms.h" line="2136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lstroke" value="419" c:type="GDK_KEY_Lstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="579"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_M" value="77" c:type="GDK_KEY_M">
      <source-position filename="gdk/gdkkeysyms.h" line="426"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mabovedot" value="16784960" c:type="GDK_KEY_Mabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="701"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_DSE"
              value="1717"
              c:type="GDK_KEY_Macedonia_DSE">
      <source-position filename="gdk/gdkkeysyms.h" line="940"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_GJE"
              value="1714"
              c:type="GDK_KEY_Macedonia_GJE">
      <source-position filename="gdk/gdkkeysyms.h" line="936"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_KJE"
              value="1724"
              c:type="GDK_KEY_Macedonia_KJE">
      <source-position filename="gdk/gdkkeysyms.h" line="952"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_dse"
              value="1701"
              c:type="GDK_KEY_Macedonia_dse">
      <source-position filename="gdk/gdkkeysyms.h" line="917"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_gje"
              value="1698"
              c:type="GDK_KEY_Macedonia_gje">
      <source-position filename="gdk/gdkkeysyms.h" line="913"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_kje"
              value="1708"
              c:type="GDK_KEY_Macedonia_kje">
      <source-position filename="gdk/gdkkeysyms.h" line="929"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mae_Koho" value="65342" c:type="GDK_KEY_Mae_Koho">
      <source-position filename="gdk/gdkkeysyms.h" line="80"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mail" value="269025049" c:type="GDK_KEY_Mail">
      <source-position filename="gdk/gdkkeysyms.h" line="2065"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MailForward"
              value="269025168"
              c:type="GDK_KEY_MailForward">
      <source-position filename="gdk/gdkkeysyms.h" line="2178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Market" value="269025122" c:type="GDK_KEY_Market">
      <source-position filename="gdk/gdkkeysyms.h" line="2137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Massyo" value="65324" c:type="GDK_KEY_Massyo">
      <source-position filename="gdk/gdkkeysyms.h" line="73"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meeting" value="269025123" c:type="GDK_KEY_Meeting">
      <source-position filename="gdk/gdkkeysyms.h" line="2138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Memo" value="269025054" c:type="GDK_KEY_Memo">
      <source-position filename="gdk/gdkkeysyms.h" line="2070"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Menu" value="65383" c:type="GDK_KEY_Menu">
      <source-position filename="gdk/gdkkeysyms.h" line="98"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MenuKB" value="269025125" c:type="GDK_KEY_MenuKB">
      <source-position filename="gdk/gdkkeysyms.h" line="2139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MenuPB" value="269025126" c:type="GDK_KEY_MenuPB">
      <source-position filename="gdk/gdkkeysyms.h" line="2140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Messenger"
              value="269025166"
              c:type="GDK_KEY_Messenger">
      <source-position filename="gdk/gdkkeysyms.h" line="2176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meta_L" value="65511" c:type="GDK_KEY_Meta_L">
      <source-position filename="gdk/gdkkeysyms.h" line="209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meta_R" value="65512" c:type="GDK_KEY_Meta_R">
      <source-position filename="gdk/gdkkeysyms.h" line="210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MillSign" value="16785573" c:type="GDK_KEY_MillSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1744"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ModeLock" value="269025025" c:type="GDK_KEY_ModeLock">
      <source-position filename="gdk/gdkkeysyms.h" line="2050"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mode_switch"
              value="65406"
              c:type="GDK_KEY_Mode_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MonBrightnessDown"
              value="269025027"
              c:type="GDK_KEY_MonBrightnessDown">
      <source-position filename="gdk/gdkkeysyms.h" line="2052"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MonBrightnessUp"
              value="269025026"
              c:type="GDK_KEY_MonBrightnessUp">
      <source-position filename="gdk/gdkkeysyms.h" line="2051"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MouseKeys_Accel_Enable"
              value="65143"
              c:type="GDK_KEY_MouseKeys_Accel_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="316"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MouseKeys_Enable"
              value="65142"
              c:type="GDK_KEY_MouseKeys_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="315"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Muhenkan" value="65314" c:type="GDK_KEY_Muhenkan">
      <source-position filename="gdk/gdkkeysyms.h" line="62"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Multi_key" value="65312" c:type="GDK_KEY_Multi_key">
      <source-position filename="gdk/gdkkeysyms.h" line="56"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MultipleCandidate"
              value="65341"
              c:type="GDK_KEY_MultipleCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Music" value="269025170" c:type="GDK_KEY_Music">
      <source-position filename="gdk/gdkkeysyms.h" line="2180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MyComputer"
              value="269025075"
              c:type="GDK_KEY_MyComputer">
      <source-position filename="gdk/gdkkeysyms.h" line="2091"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MySites" value="269025127" c:type="GDK_KEY_MySites">
      <source-position filename="gdk/gdkkeysyms.h" line="2141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_N" value="78" c:type="GDK_KEY_N">
      <source-position filename="gdk/gdkkeysyms.h" line="427"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Nacute" value="465" c:type="GDK_KEY_Nacute">
      <source-position filename="gdk/gdkkeysyms.h" line="610"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_NairaSign" value="16785574" c:type="GDK_KEY_NairaSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1745"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ncaron" value="466" c:type="GDK_KEY_Ncaron">
      <source-position filename="gdk/gdkkeysyms.h" line="611"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ncedilla" value="977" c:type="GDK_KEY_Ncedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="676"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_New" value="269025128" c:type="GDK_KEY_New">
      <source-position filename="gdk/gdkkeysyms.h" line="2142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_NewSheqelSign"
              value="16785578"
              c:type="GDK_KEY_NewSheqelSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1749"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_News" value="269025129" c:type="GDK_KEY_News">
      <source-position filename="gdk/gdkkeysyms.h" line="2143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next" value="65366" c:type="GDK_KEY_Next">
      <source-position filename="gdk/gdkkeysyms.h" line="88"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next_VMode"
              value="269024802"
              c:type="GDK_KEY_Next_VMode">
      <source-position filename="gdk/gdkkeysyms.h" line="2218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next_Virtual_Screen"
              value="65234"
              c:type="GDK_KEY_Next_Virtual_Screen">
      <source-position filename="gdk/gdkkeysyms.h" line="306"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ntilde" value="209" c:type="GDK_KEY_Ntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="527"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Num_Lock" value="65407" c:type="GDK_KEY_Num_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_O" value="79" c:type="GDK_KEY_O">
      <source-position filename="gdk/gdkkeysyms.h" line="428"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OE" value="5052" c:type="GDK_KEY_OE">
      <source-position filename="gdk/gdkkeysyms.h" line="718"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Oacute" value="211" c:type="GDK_KEY_Oacute">
      <source-position filename="gdk/gdkkeysyms.h" line="529"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Obarred" value="16777631" c:type="GDK_KEY_Obarred">
      <source-position filename="gdk/gdkkeysyms.h" line="1636"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Obelowdot" value="16785100" c:type="GDK_KEY_Obelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1691"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocaron" value="16777681" c:type="GDK_KEY_Ocaron">
      <source-position filename="gdk/gdkkeysyms.h" line="1635"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflex" value="212" c:type="GDK_KEY_Ocircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="530"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexacute"
              value="16785104"
              c:type="GDK_KEY_Ocircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1695"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexbelowdot"
              value="16785112"
              c:type="GDK_KEY_Ocircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1703"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexgrave"
              value="16785106"
              c:type="GDK_KEY_Ocircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1697"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexhook"
              value="16785108"
              c:type="GDK_KEY_Ocircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1699"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflextilde"
              value="16785110"
              c:type="GDK_KEY_Ocircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1701"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Odiaeresis" value="214" c:type="GDK_KEY_Odiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="532"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Odoubleacute"
              value="469"
              c:type="GDK_KEY_Odoubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="612"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OfficeHome"
              value="269025130"
              c:type="GDK_KEY_OfficeHome">
      <source-position filename="gdk/gdkkeysyms.h" line="2144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ograve" value="210" c:type="GDK_KEY_Ograve">
      <source-position filename="gdk/gdkkeysyms.h" line="528"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohook" value="16785102" c:type="GDK_KEY_Ohook">
      <source-position filename="gdk/gdkkeysyms.h" line="1693"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorn" value="16777632" c:type="GDK_KEY_Ohorn">
      <source-position filename="gdk/gdkkeysyms.h" line="1735"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornacute"
              value="16785114"
              c:type="GDK_KEY_Ohornacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1705"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornbelowdot"
              value="16785122"
              c:type="GDK_KEY_Ohornbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1713"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorngrave"
              value="16785116"
              c:type="GDK_KEY_Ohorngrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1707"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornhook" value="16785118" c:type="GDK_KEY_Ohornhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1709"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorntilde"
              value="16785120"
              c:type="GDK_KEY_Ohorntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1711"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Omacron" value="978" c:type="GDK_KEY_Omacron">
      <source-position filename="gdk/gdkkeysyms.h" line="677"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ooblique" value="216" c:type="GDK_KEY_Ooblique">
      <source-position filename="gdk/gdkkeysyms.h" line="535"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Open" value="269025131" c:type="GDK_KEY_Open">
      <source-position filename="gdk/gdkkeysyms.h" line="2145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OpenURL" value="269025080" c:type="GDK_KEY_OpenURL">
      <source-position filename="gdk/gdkkeysyms.h" line="2096"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Option" value="269025132" c:type="GDK_KEY_Option">
      <source-position filename="gdk/gdkkeysyms.h" line="2146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Oslash" value="216" c:type="GDK_KEY_Oslash">
      <source-position filename="gdk/gdkkeysyms.h" line="534"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Otilde" value="213" c:type="GDK_KEY_Otilde">
      <source-position filename="gdk/gdkkeysyms.h" line="531"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Overlay1_Enable"
              value="65144"
              c:type="GDK_KEY_Overlay1_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="317"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Overlay2_Enable"
              value="65145"
              c:type="GDK_KEY_Overlay2_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="318"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_P" value="80" c:type="GDK_KEY_P">
      <source-position filename="gdk/gdkkeysyms.h" line="429"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pabovedot" value="16784982" c:type="GDK_KEY_Pabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="703"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Page_Down" value="65366" c:type="GDK_KEY_Page_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="89"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Page_Up" value="65365" c:type="GDK_KEY_Page_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="87"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Paste" value="269025133" c:type="GDK_KEY_Paste">
      <source-position filename="gdk/gdkkeysyms.h" line="2147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pause" value="65299" c:type="GDK_KEY_Pause">
      <source-position filename="gdk/gdkkeysyms.h" line="51"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PesetaSign"
              value="16785575"
              c:type="GDK_KEY_PesetaSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1746"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Phone" value="269025134" c:type="GDK_KEY_Phone">
      <source-position filename="gdk/gdkkeysyms.h" line="2148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pictures" value="269025169" c:type="GDK_KEY_Pictures">
      <source-position filename="gdk/gdkkeysyms.h" line="2179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Accelerate"
              value="65274"
              c:type="GDK_KEY_Pointer_Accelerate">
      <source-position filename="gdk/gdkkeysyms.h" line="347"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button1"
              value="65257"
              c:type="GDK_KEY_Pointer_Button1">
      <source-position filename="gdk/gdkkeysyms.h" line="329"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button2"
              value="65258"
              c:type="GDK_KEY_Pointer_Button2">
      <source-position filename="gdk/gdkkeysyms.h" line="330"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button3"
              value="65259"
              c:type="GDK_KEY_Pointer_Button3">
      <source-position filename="gdk/gdkkeysyms.h" line="331"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button4"
              value="65260"
              c:type="GDK_KEY_Pointer_Button4">
      <source-position filename="gdk/gdkkeysyms.h" line="332"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button5"
              value="65261"
              c:type="GDK_KEY_Pointer_Button5">
      <source-position filename="gdk/gdkkeysyms.h" line="333"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button_Dflt"
              value="65256"
              c:type="GDK_KEY_Pointer_Button_Dflt">
      <source-position filename="gdk/gdkkeysyms.h" line="328"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick1"
              value="65263"
              c:type="GDK_KEY_Pointer_DblClick1">
      <source-position filename="gdk/gdkkeysyms.h" line="335"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick2"
              value="65264"
              c:type="GDK_KEY_Pointer_DblClick2">
      <source-position filename="gdk/gdkkeysyms.h" line="336"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick3"
              value="65265"
              c:type="GDK_KEY_Pointer_DblClick3">
      <source-position filename="gdk/gdkkeysyms.h" line="337"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick4"
              value="65266"
              c:type="GDK_KEY_Pointer_DblClick4">
      <source-position filename="gdk/gdkkeysyms.h" line="338"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick5"
              value="65267"
              c:type="GDK_KEY_Pointer_DblClick5">
      <source-position filename="gdk/gdkkeysyms.h" line="339"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick_Dflt"
              value="65262"
              c:type="GDK_KEY_Pointer_DblClick_Dflt">
      <source-position filename="gdk/gdkkeysyms.h" line="334"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DfltBtnNext"
              value="65275"
              c:type="GDK_KEY_Pointer_DfltBtnNext">
      <source-position filename="gdk/gdkkeysyms.h" line="348"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DfltBtnPrev"
              value="65276"
              c:type="GDK_KEY_Pointer_DfltBtnPrev">
      <source-position filename="gdk/gdkkeysyms.h" line="349"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Down"
              value="65251"
              c:type="GDK_KEY_Pointer_Down">
      <source-position filename="gdk/gdkkeysyms.h" line="323"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DownLeft"
              value="65254"
              c:type="GDK_KEY_Pointer_DownLeft">
      <source-position filename="gdk/gdkkeysyms.h" line="326"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DownRight"
              value="65255"
              c:type="GDK_KEY_Pointer_DownRight">
      <source-position filename="gdk/gdkkeysyms.h" line="327"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag1"
              value="65269"
              c:type="GDK_KEY_Pointer_Drag1">
      <source-position filename="gdk/gdkkeysyms.h" line="341"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag2"
              value="65270"
              c:type="GDK_KEY_Pointer_Drag2">
      <source-position filename="gdk/gdkkeysyms.h" line="342"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag3"
              value="65271"
              c:type="GDK_KEY_Pointer_Drag3">
      <source-position filename="gdk/gdkkeysyms.h" line="343"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag4"
              value="65272"
              c:type="GDK_KEY_Pointer_Drag4">
      <source-position filename="gdk/gdkkeysyms.h" line="344"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag5"
              value="65277"
              c:type="GDK_KEY_Pointer_Drag5">
      <source-position filename="gdk/gdkkeysyms.h" line="345"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag_Dflt"
              value="65268"
              c:type="GDK_KEY_Pointer_Drag_Dflt">
      <source-position filename="gdk/gdkkeysyms.h" line="340"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_EnableKeys"
              value="65273"
              c:type="GDK_KEY_Pointer_EnableKeys">
      <source-position filename="gdk/gdkkeysyms.h" line="346"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Left"
              value="65248"
              c:type="GDK_KEY_Pointer_Left">
      <source-position filename="gdk/gdkkeysyms.h" line="320"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Right"
              value="65249"
              c:type="GDK_KEY_Pointer_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="321"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Up" value="65250" c:type="GDK_KEY_Pointer_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="322"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_UpLeft"
              value="65252"
              c:type="GDK_KEY_Pointer_UpLeft">
      <source-position filename="gdk/gdkkeysyms.h" line="324"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_UpRight"
              value="65253"
              c:type="GDK_KEY_Pointer_UpRight">
      <source-position filename="gdk/gdkkeysyms.h" line="325"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PowerDown"
              value="269025057"
              c:type="GDK_KEY_PowerDown">
      <source-position filename="gdk/gdkkeysyms.h" line="2073"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PowerOff" value="269025066" c:type="GDK_KEY_PowerOff">
      <source-position filename="gdk/gdkkeysyms.h" line="2082"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prev_VMode"
              value="269024803"
              c:type="GDK_KEY_Prev_VMode">
      <source-position filename="gdk/gdkkeysyms.h" line="2219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prev_Virtual_Screen"
              value="65233"
              c:type="GDK_KEY_Prev_Virtual_Screen">
      <source-position filename="gdk/gdkkeysyms.h" line="305"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PreviousCandidate"
              value="65342"
              c:type="GDK_KEY_PreviousCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="60"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Print" value="65377" c:type="GDK_KEY_Print">
      <source-position filename="gdk/gdkkeysyms.h" line="93"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prior" value="65365" c:type="GDK_KEY_Prior">
      <source-position filename="gdk/gdkkeysyms.h" line="86"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Q" value="81" c:type="GDK_KEY_Q">
      <source-position filename="gdk/gdkkeysyms.h" line="430"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R" value="82" c:type="GDK_KEY_R">
      <source-position filename="gdk/gdkkeysyms.h" line="431"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R1" value="65490" c:type="GDK_KEY_R1">
      <source-position filename="gdk/gdkkeysyms.h" line="174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R10" value="65499" c:type="GDK_KEY_R10">
      <source-position filename="gdk/gdkkeysyms.h" line="192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R11" value="65500" c:type="GDK_KEY_R11">
      <source-position filename="gdk/gdkkeysyms.h" line="194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R12" value="65501" c:type="GDK_KEY_R12">
      <source-position filename="gdk/gdkkeysyms.h" line="196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R13" value="65502" c:type="GDK_KEY_R13">
      <source-position filename="gdk/gdkkeysyms.h" line="198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R14" value="65503" c:type="GDK_KEY_R14">
      <source-position filename="gdk/gdkkeysyms.h" line="200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R15" value="65504" c:type="GDK_KEY_R15">
      <source-position filename="gdk/gdkkeysyms.h" line="202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R2" value="65491" c:type="GDK_KEY_R2">
      <source-position filename="gdk/gdkkeysyms.h" line="176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R3" value="65492" c:type="GDK_KEY_R3">
      <source-position filename="gdk/gdkkeysyms.h" line="178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R4" value="65493" c:type="GDK_KEY_R4">
      <source-position filename="gdk/gdkkeysyms.h" line="180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R5" value="65494" c:type="GDK_KEY_R5">
      <source-position filename="gdk/gdkkeysyms.h" line="182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R6" value="65495" c:type="GDK_KEY_R6">
      <source-position filename="gdk/gdkkeysyms.h" line="184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R7" value="65496" c:type="GDK_KEY_R7">
      <source-position filename="gdk/gdkkeysyms.h" line="186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R8" value="65497" c:type="GDK_KEY_R8">
      <source-position filename="gdk/gdkkeysyms.h" line="188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R9" value="65498" c:type="GDK_KEY_R9">
      <source-position filename="gdk/gdkkeysyms.h" line="190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Racute" value="448" c:type="GDK_KEY_Racute">
      <source-position filename="gdk/gdkkeysyms.h" line="601"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Rcaron" value="472" c:type="GDK_KEY_Rcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="613"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Rcedilla" value="931" c:type="GDK_KEY_Rcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="658"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Red" value="269025187" c:type="GDK_KEY_Red">
      <source-position filename="gdk/gdkkeysyms.h" line="2197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Redo" value="65382" c:type="GDK_KEY_Redo">
      <source-position filename="gdk/gdkkeysyms.h" line="97"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Refresh" value="269025065" c:type="GDK_KEY_Refresh">
      <source-position filename="gdk/gdkkeysyms.h" line="2081"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Reload" value="269025139" c:type="GDK_KEY_Reload">
      <source-position filename="gdk/gdkkeysyms.h" line="2150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RepeatKeys_Enable"
              value="65138"
              c:type="GDK_KEY_RepeatKeys_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="311"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Reply" value="269025138" c:type="GDK_KEY_Reply">
      <source-position filename="gdk/gdkkeysyms.h" line="2149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Return" value="65293" c:type="GDK_KEY_Return">
      <source-position filename="gdk/gdkkeysyms.h" line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Right" value="65363" c:type="GDK_KEY_Right">
      <source-position filename="gdk/gdkkeysyms.h" line="84"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerDown"
              value="269025060"
              c:type="GDK_KEY_RockerDown">
      <source-position filename="gdk/gdkkeysyms.h" line="2076"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerEnter"
              value="269025061"
              c:type="GDK_KEY_RockerEnter">
      <source-position filename="gdk/gdkkeysyms.h" line="2077"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerUp" value="269025059" c:type="GDK_KEY_RockerUp">
      <source-position filename="gdk/gdkkeysyms.h" line="2075"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Romaji" value="65316" c:type="GDK_KEY_Romaji">
      <source-position filename="gdk/gdkkeysyms.h" line="65"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotateWindows"
              value="269025140"
              c:type="GDK_KEY_RotateWindows">
      <source-position filename="gdk/gdkkeysyms.h" line="2151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotationKB"
              value="269025142"
              c:type="GDK_KEY_RotationKB">
      <source-position filename="gdk/gdkkeysyms.h" line="2153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotationPB"
              value="269025141"
              c:type="GDK_KEY_RotationPB">
      <source-position filename="gdk/gdkkeysyms.h" line="2152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RupeeSign" value="16785576" c:type="GDK_KEY_RupeeSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1747"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_S" value="83" c:type="GDK_KEY_S">
      <source-position filename="gdk/gdkkeysyms.h" line="432"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SCHWA" value="16777615" c:type="GDK_KEY_SCHWA">
      <source-position filename="gdk/gdkkeysyms.h" line="1643"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sabovedot" value="16784992" c:type="GDK_KEY_Sabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="707"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sacute" value="422" c:type="GDK_KEY_Sacute">
      <source-position filename="gdk/gdkkeysyms.h" line="581"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Save" value="269025143" c:type="GDK_KEY_Save">
      <source-position filename="gdk/gdkkeysyms.h" line="2154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scaron" value="425" c:type="GDK_KEY_Scaron">
      <source-position filename="gdk/gdkkeysyms.h" line="582"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scedilla" value="426" c:type="GDK_KEY_Scedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="583"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scircumflex" value="734" c:type="GDK_KEY_Scircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="649"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScreenSaver"
              value="269025069"
              c:type="GDK_KEY_ScreenSaver">
      <source-position filename="gdk/gdkkeysyms.h" line="2085"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollClick"
              value="269025146"
              c:type="GDK_KEY_ScrollClick">
      <source-position filename="gdk/gdkkeysyms.h" line="2157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollDown"
              value="269025145"
              c:type="GDK_KEY_ScrollDown">
      <source-position filename="gdk/gdkkeysyms.h" line="2156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollUp" value="269025144" c:type="GDK_KEY_ScrollUp">
      <source-position filename="gdk/gdkkeysyms.h" line="2155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scroll_Lock"
              value="65300"
              c:type="GDK_KEY_Scroll_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="52"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Search" value="269025051" c:type="GDK_KEY_Search">
      <source-position filename="gdk/gdkkeysyms.h" line="2067"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Select" value="65376" c:type="GDK_KEY_Select">
      <source-position filename="gdk/gdkkeysyms.h" line="92"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SelectButton"
              value="269025184"
              c:type="GDK_KEY_SelectButton">
      <source-position filename="gdk/gdkkeysyms.h" line="2194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Send" value="269025147" c:type="GDK_KEY_Send">
      <source-position filename="gdk/gdkkeysyms.h" line="2158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_DJE" value="1713" c:type="GDK_KEY_Serbian_DJE">
      <source-position filename="gdk/gdkkeysyms.h" line="935"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_DZE" value="1727" c:type="GDK_KEY_Serbian_DZE">
      <source-position filename="gdk/gdkkeysyms.h" line="956"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_JE" value="1720" c:type="GDK_KEY_Serbian_JE">
      <source-position filename="gdk/gdkkeysyms.h" line="946"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_LJE" value="1721" c:type="GDK_KEY_Serbian_LJE">
      <source-position filename="gdk/gdkkeysyms.h" line="948"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_NJE" value="1722" c:type="GDK_KEY_Serbian_NJE">
      <source-position filename="gdk/gdkkeysyms.h" line="950"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_TSHE"
              value="1723"
              c:type="GDK_KEY_Serbian_TSHE">
      <source-position filename="gdk/gdkkeysyms.h" line="951"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_dje" value="1697" c:type="GDK_KEY_Serbian_dje">
      <source-position filename="gdk/gdkkeysyms.h" line="912"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_dze" value="1711" c:type="GDK_KEY_Serbian_dze">
      <source-position filename="gdk/gdkkeysyms.h" line="933"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_je" value="1704" c:type="GDK_KEY_Serbian_je">
      <source-position filename="gdk/gdkkeysyms.h" line="923"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_lje" value="1705" c:type="GDK_KEY_Serbian_lje">
      <source-position filename="gdk/gdkkeysyms.h" line="925"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_nje" value="1706" c:type="GDK_KEY_Serbian_nje">
      <source-position filename="gdk/gdkkeysyms.h" line="927"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_tshe"
              value="1707"
              c:type="GDK_KEY_Serbian_tshe">
      <source-position filename="gdk/gdkkeysyms.h" line="928"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_L" value="65505" c:type="GDK_KEY_Shift_L">
      <source-position filename="gdk/gdkkeysyms.h" line="203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_Lock" value="65510" c:type="GDK_KEY_Shift_Lock">
      <source-position filename="gdk/gdkkeysyms.h" line="208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_R" value="65506" c:type="GDK_KEY_Shift_R">
      <source-position filename="gdk/gdkkeysyms.h" line="204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shop" value="269025078" c:type="GDK_KEY_Shop">
      <source-position filename="gdk/gdkkeysyms.h" line="2094"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SingleCandidate"
              value="65340"
              c:type="GDK_KEY_SingleCandidate">
      <source-position filename="gdk/gdkkeysyms.h" line="58"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sleep" value="269025071" c:type="GDK_KEY_Sleep">
      <source-position filename="gdk/gdkkeysyms.h" line="2087"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SlowKeys_Enable"
              value="65139"
              c:type="GDK_KEY_SlowKeys_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="312"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Spell" value="269025148" c:type="GDK_KEY_Spell">
      <source-position filename="gdk/gdkkeysyms.h" line="2159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SplitScreen"
              value="269025149"
              c:type="GDK_KEY_SplitScreen">
      <source-position filename="gdk/gdkkeysyms.h" line="2160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Standby" value="269025040" c:type="GDK_KEY_Standby">
      <source-position filename="gdk/gdkkeysyms.h" line="2056"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Start" value="269025050" c:type="GDK_KEY_Start">
      <source-position filename="gdk/gdkkeysyms.h" line="2066"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_StickyKeys_Enable"
              value="65141"
              c:type="GDK_KEY_StickyKeys_Enable">
      <source-position filename="gdk/gdkkeysyms.h" line="314"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Stop" value="269025064" c:type="GDK_KEY_Stop">
      <source-position filename="gdk/gdkkeysyms.h" line="2080"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Subtitle" value="269025178" c:type="GDK_KEY_Subtitle">
      <source-position filename="gdk/gdkkeysyms.h" line="2188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Super_L" value="65515" c:type="GDK_KEY_Super_L">
      <source-position filename="gdk/gdkkeysyms.h" line="213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Super_R" value="65516" c:type="GDK_KEY_Super_R">
      <source-position filename="gdk/gdkkeysyms.h" line="214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Support" value="269025150" c:type="GDK_KEY_Support">
      <source-position filename="gdk/gdkkeysyms.h" line="2161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Suspend" value="269025191" c:type="GDK_KEY_Suspend">
      <source-position filename="gdk/gdkkeysyms.h" line="2201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_1"
              value="269024769"
              c:type="GDK_KEY_Switch_VT_1">
      <source-position filename="gdk/gdkkeysyms.h" line="2204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_10"
              value="269024778"
              c:type="GDK_KEY_Switch_VT_10">
      <source-position filename="gdk/gdkkeysyms.h" line="2213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_11"
              value="269024779"
              c:type="GDK_KEY_Switch_VT_11">
      <source-position filename="gdk/gdkkeysyms.h" line="2214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_12"
              value="269024780"
              c:type="GDK_KEY_Switch_VT_12">
      <source-position filename="gdk/gdkkeysyms.h" line="2215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_2"
              value="269024770"
              c:type="GDK_KEY_Switch_VT_2">
      <source-position filename="gdk/gdkkeysyms.h" line="2205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_3"
              value="269024771"
              c:type="GDK_KEY_Switch_VT_3">
      <source-position filename="gdk/gdkkeysyms.h" line="2206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_4"
              value="269024772"
              c:type="GDK_KEY_Switch_VT_4">
      <source-position filename="gdk/gdkkeysyms.h" line="2207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_5"
              value="269024773"
              c:type="GDK_KEY_Switch_VT_5">
      <source-position filename="gdk/gdkkeysyms.h" line="2208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_6"
              value="269024774"
              c:type="GDK_KEY_Switch_VT_6">
      <source-position filename="gdk/gdkkeysyms.h" line="2209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_7"
              value="269024775"
              c:type="GDK_KEY_Switch_VT_7">
      <source-position filename="gdk/gdkkeysyms.h" line="2210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_8"
              value="269024776"
              c:type="GDK_KEY_Switch_VT_8">
      <source-position filename="gdk/gdkkeysyms.h" line="2211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_9"
              value="269024777"
              c:type="GDK_KEY_Switch_VT_9">
      <source-position filename="gdk/gdkkeysyms.h" line="2212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sys_Req" value="65301" c:type="GDK_KEY_Sys_Req">
      <source-position filename="gdk/gdkkeysyms.h" line="53"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_T" value="84" c:type="GDK_KEY_T">
      <source-position filename="gdk/gdkkeysyms.h" line="433"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_THORN" value="222" c:type="GDK_KEY_THORN">
      <source-position filename="gdk/gdkkeysyms.h" line="541"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tab" value="65289" c:type="GDK_KEY_Tab">
      <source-position filename="gdk/gdkkeysyms.h" line="47"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tabovedot" value="16785002" c:type="GDK_KEY_Tabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="713"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TaskPane" value="269025151" c:type="GDK_KEY_TaskPane">
      <source-position filename="gdk/gdkkeysyms.h" line="2162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tcaron" value="427" c:type="GDK_KEY_Tcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="584"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tcedilla" value="478" c:type="GDK_KEY_Tcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="616"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Terminal" value="269025152" c:type="GDK_KEY_Terminal">
      <source-position filename="gdk/gdkkeysyms.h" line="2163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Terminate_Server"
              value="65237"
              c:type="GDK_KEY_Terminate_Server">
      <source-position filename="gdk/gdkkeysyms.h" line="308"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_baht" value="3551" c:type="GDK_KEY_Thai_baht">
      <source-position filename="gdk/gdkkeysyms.h" line="1370"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_bobaimai"
              value="3514"
              c:type="GDK_KEY_Thai_bobaimai">
      <source-position filename="gdk/gdkkeysyms.h" line="1336"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochan"
              value="3496"
              c:type="GDK_KEY_Thai_chochan">
      <source-position filename="gdk/gdkkeysyms.h" line="1318"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochang"
              value="3498"
              c:type="GDK_KEY_Thai_chochang">
      <source-position filename="gdk/gdkkeysyms.h" line="1320"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_choching"
              value="3497"
              c:type="GDK_KEY_Thai_choching">
      <source-position filename="gdk/gdkkeysyms.h" line="1319"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochoe"
              value="3500"
              c:type="GDK_KEY_Thai_chochoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1322"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_dochada"
              value="3502"
              c:type="GDK_KEY_Thai_dochada">
      <source-position filename="gdk/gdkkeysyms.h" line="1324"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_dodek" value="3508" c:type="GDK_KEY_Thai_dodek">
      <source-position filename="gdk/gdkkeysyms.h" line="1330"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_fofa" value="3517" c:type="GDK_KEY_Thai_fofa">
      <source-position filename="gdk/gdkkeysyms.h" line="1339"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_fofan" value="3519" c:type="GDK_KEY_Thai_fofan">
      <source-position filename="gdk/gdkkeysyms.h" line="1341"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_hohip" value="3531" c:type="GDK_KEY_Thai_hohip">
      <source-position filename="gdk/gdkkeysyms.h" line="1353"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_honokhuk"
              value="3534"
              c:type="GDK_KEY_Thai_honokhuk">
      <source-position filename="gdk/gdkkeysyms.h" line="1356"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhai"
              value="3490"
              c:type="GDK_KEY_Thai_khokhai">
      <source-position filename="gdk/gdkkeysyms.h" line="1312"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhon"
              value="3493"
              c:type="GDK_KEY_Thai_khokhon">
      <source-position filename="gdk/gdkkeysyms.h" line="1315"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhuat"
              value="3491"
              c:type="GDK_KEY_Thai_khokhuat">
      <source-position filename="gdk/gdkkeysyms.h" line="1313"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhwai"
              value="3492"
              c:type="GDK_KEY_Thai_khokhwai">
      <source-position filename="gdk/gdkkeysyms.h" line="1314"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khorakhang"
              value="3494"
              c:type="GDK_KEY_Thai_khorakhang">
      <source-position filename="gdk/gdkkeysyms.h" line="1316"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_kokai" value="3489" c:type="GDK_KEY_Thai_kokai">
      <source-position filename="gdk/gdkkeysyms.h" line="1311"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lakkhangyao"
              value="3557"
              c:type="GDK_KEY_Thai_lakkhangyao">
      <source-position filename="gdk/gdkkeysyms.h" line="1376"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekchet"
              value="3575"
              c:type="GDK_KEY_Thai_lekchet">
      <source-position filename="gdk/gdkkeysyms.h" line="1392"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekha" value="3573" c:type="GDK_KEY_Thai_lekha">
      <source-position filename="gdk/gdkkeysyms.h" line="1390"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekhok" value="3574" c:type="GDK_KEY_Thai_lekhok">
      <source-position filename="gdk/gdkkeysyms.h" line="1391"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekkao" value="3577" c:type="GDK_KEY_Thai_lekkao">
      <source-position filename="gdk/gdkkeysyms.h" line="1394"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leknung"
              value="3569"
              c:type="GDK_KEY_Thai_leknung">
      <source-position filename="gdk/gdkkeysyms.h" line="1386"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekpaet"
              value="3576"
              c:type="GDK_KEY_Thai_lekpaet">
      <source-position filename="gdk/gdkkeysyms.h" line="1393"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksam" value="3571" c:type="GDK_KEY_Thai_leksam">
      <source-position filename="gdk/gdkkeysyms.h" line="1388"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksi" value="3572" c:type="GDK_KEY_Thai_leksi">
      <source-position filename="gdk/gdkkeysyms.h" line="1389"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksong"
              value="3570"
              c:type="GDK_KEY_Thai_leksong">
      <source-position filename="gdk/gdkkeysyms.h" line="1387"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksun" value="3568" c:type="GDK_KEY_Thai_leksun">
      <source-position filename="gdk/gdkkeysyms.h" line="1385"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lochula"
              value="3532"
              c:type="GDK_KEY_Thai_lochula">
      <source-position filename="gdk/gdkkeysyms.h" line="1354"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_loling" value="3525" c:type="GDK_KEY_Thai_loling">
      <source-position filename="gdk/gdkkeysyms.h" line="1347"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lu" value="3526" c:type="GDK_KEY_Thai_lu">
      <source-position filename="gdk/gdkkeysyms.h" line="1348"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maichattawa"
              value="3563"
              c:type="GDK_KEY_Thai_maichattawa">
      <source-position filename="gdk/gdkkeysyms.h" line="1382"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maiek" value="3560" c:type="GDK_KEY_Thai_maiek">
      <source-position filename="gdk/gdkkeysyms.h" line="1379"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maihanakat"
              value="3537"
              c:type="GDK_KEY_Thai_maihanakat">
      <source-position filename="gdk/gdkkeysyms.h" line="1359"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maihanakat_maitho"
              value="3550"
              c:type="GDK_KEY_Thai_maihanakat_maitho">
      <source-position filename="gdk/gdkkeysyms.h" line="1369"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitaikhu"
              value="3559"
              c:type="GDK_KEY_Thai_maitaikhu">
      <source-position filename="gdk/gdkkeysyms.h" line="1378"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitho" value="3561" c:type="GDK_KEY_Thai_maitho">
      <source-position filename="gdk/gdkkeysyms.h" line="1380"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitri" value="3562" c:type="GDK_KEY_Thai_maitri">
      <source-position filename="gdk/gdkkeysyms.h" line="1381"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maiyamok"
              value="3558"
              c:type="GDK_KEY_Thai_maiyamok">
      <source-position filename="gdk/gdkkeysyms.h" line="1377"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_moma" value="3521" c:type="GDK_KEY_Thai_moma">
      <source-position filename="gdk/gdkkeysyms.h" line="1343"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_ngongu" value="3495" c:type="GDK_KEY_Thai_ngongu">
      <source-position filename="gdk/gdkkeysyms.h" line="1317"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nikhahit"
              value="3565"
              c:type="GDK_KEY_Thai_nikhahit">
      <source-position filename="gdk/gdkkeysyms.h" line="1384"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nonen" value="3507" c:type="GDK_KEY_Thai_nonen">
      <source-position filename="gdk/gdkkeysyms.h" line="1329"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nonu" value="3513" c:type="GDK_KEY_Thai_nonu">
      <source-position filename="gdk/gdkkeysyms.h" line="1335"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_oang" value="3533" c:type="GDK_KEY_Thai_oang">
      <source-position filename="gdk/gdkkeysyms.h" line="1355"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_paiyannoi"
              value="3535"
              c:type="GDK_KEY_Thai_paiyannoi">
      <source-position filename="gdk/gdkkeysyms.h" line="1357"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phinthu"
              value="3546"
              c:type="GDK_KEY_Thai_phinthu">
      <source-position filename="gdk/gdkkeysyms.h" line="1368"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phophan"
              value="3518"
              c:type="GDK_KEY_Thai_phophan">
      <source-position filename="gdk/gdkkeysyms.h" line="1340"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phophung"
              value="3516"
              c:type="GDK_KEY_Thai_phophung">
      <source-position filename="gdk/gdkkeysyms.h" line="1338"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phosamphao"
              value="3520"
              c:type="GDK_KEY_Thai_phosamphao">
      <source-position filename="gdk/gdkkeysyms.h" line="1342"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_popla" value="3515" c:type="GDK_KEY_Thai_popla">
      <source-position filename="gdk/gdkkeysyms.h" line="1337"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_rorua" value="3523" c:type="GDK_KEY_Thai_rorua">
      <source-position filename="gdk/gdkkeysyms.h" line="1345"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_ru" value="3524" c:type="GDK_KEY_Thai_ru">
      <source-position filename="gdk/gdkkeysyms.h" line="1346"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraa" value="3536" c:type="GDK_KEY_Thai_saraa">
      <source-position filename="gdk/gdkkeysyms.h" line="1358"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaa" value="3538" c:type="GDK_KEY_Thai_saraaa">
      <source-position filename="gdk/gdkkeysyms.h" line="1360"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraae" value="3553" c:type="GDK_KEY_Thai_saraae">
      <source-position filename="gdk/gdkkeysyms.h" line="1372"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaimaimalai"
              value="3556"
              c:type="GDK_KEY_Thai_saraaimaimalai">
      <source-position filename="gdk/gdkkeysyms.h" line="1375"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaimaimuan"
              value="3555"
              c:type="GDK_KEY_Thai_saraaimaimuan">
      <source-position filename="gdk/gdkkeysyms.h" line="1374"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraam" value="3539" c:type="GDK_KEY_Thai_saraam">
      <source-position filename="gdk/gdkkeysyms.h" line="1361"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarae" value="3552" c:type="GDK_KEY_Thai_sarae">
      <source-position filename="gdk/gdkkeysyms.h" line="1371"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarai" value="3540" c:type="GDK_KEY_Thai_sarai">
      <source-position filename="gdk/gdkkeysyms.h" line="1362"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraii" value="3541" c:type="GDK_KEY_Thai_saraii">
      <source-position filename="gdk/gdkkeysyms.h" line="1363"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarao" value="3554" c:type="GDK_KEY_Thai_sarao">
      <source-position filename="gdk/gdkkeysyms.h" line="1373"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarau" value="3544" c:type="GDK_KEY_Thai_sarau">
      <source-position filename="gdk/gdkkeysyms.h" line="1366"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraue" value="3542" c:type="GDK_KEY_Thai_saraue">
      <source-position filename="gdk/gdkkeysyms.h" line="1364"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarauee"
              value="3543"
              c:type="GDK_KEY_Thai_sarauee">
      <source-position filename="gdk/gdkkeysyms.h" line="1365"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarauu" value="3545" c:type="GDK_KEY_Thai_sarauu">
      <source-position filename="gdk/gdkkeysyms.h" line="1367"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sorusi" value="3529" c:type="GDK_KEY_Thai_sorusi">
      <source-position filename="gdk/gdkkeysyms.h" line="1351"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sosala" value="3528" c:type="GDK_KEY_Thai_sosala">
      <source-position filename="gdk/gdkkeysyms.h" line="1350"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_soso" value="3499" c:type="GDK_KEY_Thai_soso">
      <source-position filename="gdk/gdkkeysyms.h" line="1321"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sosua" value="3530" c:type="GDK_KEY_Thai_sosua">
      <source-position filename="gdk/gdkkeysyms.h" line="1352"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thanthakhat"
              value="3564"
              c:type="GDK_KEY_Thai_thanthakhat">
      <source-position filename="gdk/gdkkeysyms.h" line="1383"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thonangmontho"
              value="3505"
              c:type="GDK_KEY_Thai_thonangmontho">
      <source-position filename="gdk/gdkkeysyms.h" line="1327"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thophuthao"
              value="3506"
              c:type="GDK_KEY_Thai_thophuthao">
      <source-position filename="gdk/gdkkeysyms.h" line="1328"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothahan"
              value="3511"
              c:type="GDK_KEY_Thai_thothahan">
      <source-position filename="gdk/gdkkeysyms.h" line="1333"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothan"
              value="3504"
              c:type="GDK_KEY_Thai_thothan">
      <source-position filename="gdk/gdkkeysyms.h" line="1326"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothong"
              value="3512"
              c:type="GDK_KEY_Thai_thothong">
      <source-position filename="gdk/gdkkeysyms.h" line="1334"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothung"
              value="3510"
              c:type="GDK_KEY_Thai_thothung">
      <source-position filename="gdk/gdkkeysyms.h" line="1332"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_topatak"
              value="3503"
              c:type="GDK_KEY_Thai_topatak">
      <source-position filename="gdk/gdkkeysyms.h" line="1325"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_totao" value="3509" c:type="GDK_KEY_Thai_totao">
      <source-position filename="gdk/gdkkeysyms.h" line="1331"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_wowaen" value="3527" c:type="GDK_KEY_Thai_wowaen">
      <source-position filename="gdk/gdkkeysyms.h" line="1349"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_yoyak" value="3522" c:type="GDK_KEY_Thai_yoyak">
      <source-position filename="gdk/gdkkeysyms.h" line="1344"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_yoying" value="3501" c:type="GDK_KEY_Thai_yoying">
      <source-position filename="gdk/gdkkeysyms.h" line="1323"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thorn" value="222" c:type="GDK_KEY_Thorn">
      <source-position filename="gdk/gdkkeysyms.h" line="542"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Time" value="269025183" c:type="GDK_KEY_Time">
      <source-position filename="gdk/gdkkeysyms.h" line="2193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ToDoList" value="269025055" c:type="GDK_KEY_ToDoList">
      <source-position filename="gdk/gdkkeysyms.h" line="2071"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tools" value="269025153" c:type="GDK_KEY_Tools">
      <source-position filename="gdk/gdkkeysyms.h" line="2164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TopMenu" value="269025186" c:type="GDK_KEY_TopMenu">
      <source-position filename="gdk/gdkkeysyms.h" line="2196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TouchpadToggle"
              value="269025193"
              c:type="GDK_KEY_TouchpadToggle">
      <source-position filename="gdk/gdkkeysyms.h" line="2203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Touroku" value="65323" c:type="GDK_KEY_Touroku">
      <source-position filename="gdk/gdkkeysyms.h" line="72"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Travel" value="269025154" c:type="GDK_KEY_Travel">
      <source-position filename="gdk/gdkkeysyms.h" line="2165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tslash" value="940" c:type="GDK_KEY_Tslash">
      <source-position filename="gdk/gdkkeysyms.h" line="663"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_U" value="85" c:type="GDK_KEY_U">
      <source-position filename="gdk/gdkkeysyms.h" line="434"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_UWB" value="269025174" c:type="GDK_KEY_UWB">
      <source-position filename="gdk/gdkkeysyms.h" line="2184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uacute" value="218" c:type="GDK_KEY_Uacute">
      <source-position filename="gdk/gdkkeysyms.h" line="537"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ubelowdot" value="16785124" c:type="GDK_KEY_Ubelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1715"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ubreve" value="733" c:type="GDK_KEY_Ubreve">
      <source-position filename="gdk/gdkkeysyms.h" line="648"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ucircumflex" value="219" c:type="GDK_KEY_Ucircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="538"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Udiaeresis" value="220" c:type="GDK_KEY_Udiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="539"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Udoubleacute"
              value="475"
              c:type="GDK_KEY_Udoubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="615"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ugrave" value="217" c:type="GDK_KEY_Ugrave">
      <source-position filename="gdk/gdkkeysyms.h" line="536"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhook" value="16785126" c:type="GDK_KEY_Uhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1717"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorn" value="16777647" c:type="GDK_KEY_Uhorn">
      <source-position filename="gdk/gdkkeysyms.h" line="1737"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornacute"
              value="16785128"
              c:type="GDK_KEY_Uhornacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1719"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornbelowdot"
              value="16785136"
              c:type="GDK_KEY_Uhornbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1727"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorngrave"
              value="16785130"
              c:type="GDK_KEY_Uhorngrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1721"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornhook" value="16785132" c:type="GDK_KEY_Uhornhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1723"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorntilde"
              value="16785134"
              c:type="GDK_KEY_Uhorntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1725"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_GHE_WITH_UPTURN"
              value="1725"
              c:type="GDK_KEY_Ukrainian_GHE_WITH_UPTURN">
      <source-position filename="gdk/gdkkeysyms.h" line="953"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_I" value="1718" c:type="GDK_KEY_Ukrainian_I">
      <source-position filename="gdk/gdkkeysyms.h" line="941"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_IE"
              value="1716"
              c:type="GDK_KEY_Ukrainian_IE">
      <source-position filename="gdk/gdkkeysyms.h" line="938"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_YI"
              value="1719"
              c:type="GDK_KEY_Ukrainian_YI">
      <source-position filename="gdk/gdkkeysyms.h" line="943"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_ghe_with_upturn"
              value="1709"
              c:type="GDK_KEY_Ukrainian_ghe_with_upturn">
      <source-position filename="gdk/gdkkeysyms.h" line="930"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_i" value="1702" c:type="GDK_KEY_Ukrainian_i">
      <source-position filename="gdk/gdkkeysyms.h" line="918"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_ie"
              value="1700"
              c:type="GDK_KEY_Ukrainian_ie">
      <source-position filename="gdk/gdkkeysyms.h" line="915"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_yi"
              value="1703"
              c:type="GDK_KEY_Ukrainian_yi">
      <source-position filename="gdk/gdkkeysyms.h" line="920"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_I" value="1718" c:type="GDK_KEY_Ukranian_I">
      <source-position filename="gdk/gdkkeysyms.h" line="942"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_JE" value="1716" c:type="GDK_KEY_Ukranian_JE">
      <source-position filename="gdk/gdkkeysyms.h" line="939"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_YI" value="1719" c:type="GDK_KEY_Ukranian_YI">
      <source-position filename="gdk/gdkkeysyms.h" line="944"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_i" value="1702" c:type="GDK_KEY_Ukranian_i">
      <source-position filename="gdk/gdkkeysyms.h" line="919"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_je" value="1700" c:type="GDK_KEY_Ukranian_je">
      <source-position filename="gdk/gdkkeysyms.h" line="916"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_yi" value="1703" c:type="GDK_KEY_Ukranian_yi">
      <source-position filename="gdk/gdkkeysyms.h" line="921"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Umacron" value="990" c:type="GDK_KEY_Umacron">
      <source-position filename="gdk/gdkkeysyms.h" line="681"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Undo" value="65381" c:type="GDK_KEY_Undo">
      <source-position filename="gdk/gdkkeysyms.h" line="96"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ungrab" value="269024800" c:type="GDK_KEY_Ungrab">
      <source-position filename="gdk/gdkkeysyms.h" line="2216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uogonek" value="985" c:type="GDK_KEY_Uogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="679"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Up" value="65362" c:type="GDK_KEY_Up">
      <source-position filename="gdk/gdkkeysyms.h" line="83"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uring" value="473" c:type="GDK_KEY_Uring">
      <source-position filename="gdk/gdkkeysyms.h" line="614"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_User1KB" value="269025157" c:type="GDK_KEY_User1KB">
      <source-position filename="gdk/gdkkeysyms.h" line="2167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_User2KB" value="269025158" c:type="GDK_KEY_User2KB">
      <source-position filename="gdk/gdkkeysyms.h" line="2168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_UserPB" value="269025156" c:type="GDK_KEY_UserPB">
      <source-position filename="gdk/gdkkeysyms.h" line="2166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Utilde" value="989" c:type="GDK_KEY_Utilde">
      <source-position filename="gdk/gdkkeysyms.h" line="680"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_V" value="86" c:type="GDK_KEY_V">
      <source-position filename="gdk/gdkkeysyms.h" line="435"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_VendorHome"
              value="269025076"
              c:type="GDK_KEY_VendorHome">
      <source-position filename="gdk/gdkkeysyms.h" line="2092"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Video" value="269025159" c:type="GDK_KEY_Video">
      <source-position filename="gdk/gdkkeysyms.h" line="2169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_View" value="269025185" c:type="GDK_KEY_View">
      <source-position filename="gdk/gdkkeysyms.h" line="2195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_VoidSymbol"
              value="16777215"
              c:type="GDK_KEY_VoidSymbol">
      <source-position filename="gdk/gdkkeysyms.h" line="45"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_W" value="87" c:type="GDK_KEY_W">
      <source-position filename="gdk/gdkkeysyms.h" line="436"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WLAN" value="269025173" c:type="GDK_KEY_WLAN">
      <source-position filename="gdk/gdkkeysyms.h" line="2183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WWW" value="269025070" c:type="GDK_KEY_WWW">
      <source-position filename="gdk/gdkkeysyms.h" line="2086"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wacute" value="16785026" c:type="GDK_KEY_Wacute">
      <source-position filename="gdk/gdkkeysyms.h" line="696"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WakeUp" value="269025067" c:type="GDK_KEY_WakeUp">
      <source-position filename="gdk/gdkkeysyms.h" line="2083"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wcircumflex"
              value="16777588"
              c:type="GDK_KEY_Wcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="712"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wdiaeresis"
              value="16785028"
              c:type="GDK_KEY_Wdiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="709"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WebCam" value="269025167" c:type="GDK_KEY_WebCam">
      <source-position filename="gdk/gdkkeysyms.h" line="2177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wgrave" value="16785024" c:type="GDK_KEY_Wgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="695"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WheelButton"
              value="269025160"
              c:type="GDK_KEY_WheelButton">
      <source-position filename="gdk/gdkkeysyms.h" line="2170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WindowClear"
              value="269025109"
              c:type="GDK_KEY_WindowClear">
      <source-position filename="gdk/gdkkeysyms.h" line="2124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WonSign" value="16785577" c:type="GDK_KEY_WonSign">
      <source-position filename="gdk/gdkkeysyms.h" line="1748"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Word" value="269025161" c:type="GDK_KEY_Word">
      <source-position filename="gdk/gdkkeysyms.h" line="2171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_X" value="88" c:type="GDK_KEY_X">
      <source-position filename="gdk/gdkkeysyms.h" line="437"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Xabovedot" value="16785034" c:type="GDK_KEY_Xabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="1631"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Xfer" value="269025162" c:type="GDK_KEY_Xfer">
      <source-position filename="gdk/gdkkeysyms.h" line="2172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Y" value="89" c:type="GDK_KEY_Y">
      <source-position filename="gdk/gdkkeysyms.h" line="438"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yacute" value="221" c:type="GDK_KEY_Yacute">
      <source-position filename="gdk/gdkkeysyms.h" line="540"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ybelowdot" value="16785140" c:type="GDK_KEY_Ybelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1729"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ycircumflex"
              value="16777590"
              c:type="GDK_KEY_Ycircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="714"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ydiaeresis" value="5054" c:type="GDK_KEY_Ydiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="720"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yellow" value="269025189" c:type="GDK_KEY_Yellow">
      <source-position filename="gdk/gdkkeysyms.h" line="2199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ygrave" value="16785138" c:type="GDK_KEY_Ygrave">
      <source-position filename="gdk/gdkkeysyms.h" line="698"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yhook" value="16785142" c:type="GDK_KEY_Yhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1731"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ytilde" value="16785144" c:type="GDK_KEY_Ytilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1733"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Z" value="90" c:type="GDK_KEY_Z">
      <source-position filename="gdk/gdkkeysyms.h" line="439"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zabovedot" value="431" c:type="GDK_KEY_Zabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="587"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zacute" value="428" c:type="GDK_KEY_Zacute">
      <source-position filename="gdk/gdkkeysyms.h" line="585"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zcaron" value="430" c:type="GDK_KEY_Zcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="586"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zen_Koho" value="65341" c:type="GDK_KEY_Zen_Koho">
      <source-position filename="gdk/gdkkeysyms.h" line="79"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zenkaku" value="65320" c:type="GDK_KEY_Zenkaku">
      <source-position filename="gdk/gdkkeysyms.h" line="69"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zenkaku_Hankaku"
              value="65322"
              c:type="GDK_KEY_Zenkaku_Hankaku">
      <source-position filename="gdk/gdkkeysyms.h" line="71"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ZoomIn" value="269025163" c:type="GDK_KEY_ZoomIn">
      <source-position filename="gdk/gdkkeysyms.h" line="2173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ZoomOut" value="269025164" c:type="GDK_KEY_ZoomOut">
      <source-position filename="gdk/gdkkeysyms.h" line="2174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zstroke" value="16777653" c:type="GDK_KEY_Zstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="1633"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_a" value="97" c:type="GDK_KEY_a">
      <source-position filename="gdk/gdkkeysyms.h" line="447"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aacute" value="225" c:type="GDK_KEY_aacute">
      <source-position filename="gdk/gdkkeysyms.h" line="545"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abelowdot" value="16785057" c:type="GDK_KEY_abelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1648"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abovedot" value="511" c:type="GDK_KEY_abovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="633"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abreve" value="483" c:type="GDK_KEY_abreve">
      <source-position filename="gdk/gdkkeysyms.h" line="618"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abreveacute"
              value="16785071"
              c:type="GDK_KEY_abreveacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1662"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevebelowdot"
              value="16785079"
              c:type="GDK_KEY_abrevebelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1670"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevegrave"
              value="16785073"
              c:type="GDK_KEY_abrevegrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1664"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevehook"
              value="16785075"
              c:type="GDK_KEY_abrevehook">
      <source-position filename="gdk/gdkkeysyms.h" line="1666"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevetilde"
              value="16785077"
              c:type="GDK_KEY_abrevetilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1668"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflex" value="226" c:type="GDK_KEY_acircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="546"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexacute"
              value="16785061"
              c:type="GDK_KEY_acircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1652"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexbelowdot"
              value="16785069"
              c:type="GDK_KEY_acircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1660"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexgrave"
              value="16785063"
              c:type="GDK_KEY_acircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1654"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexhook"
              value="16785065"
              c:type="GDK_KEY_acircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1656"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflextilde"
              value="16785067"
              c:type="GDK_KEY_acircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1658"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acute" value="180" c:type="GDK_KEY_acute">
      <source-position filename="gdk/gdkkeysyms.h" line="497"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_adiaeresis" value="228" c:type="GDK_KEY_adiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="548"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ae" value="230" c:type="GDK_KEY_ae">
      <source-position filename="gdk/gdkkeysyms.h" line="550"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_agrave" value="224" c:type="GDK_KEY_agrave">
      <source-position filename="gdk/gdkkeysyms.h" line="544"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ahook" value="16785059" c:type="GDK_KEY_ahook">
      <source-position filename="gdk/gdkkeysyms.h" line="1650"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_amacron" value="992" c:type="GDK_KEY_amacron">
      <source-position filename="gdk/gdkkeysyms.h" line="682"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ampersand" value="38" c:type="GDK_KEY_ampersand">
      <source-position filename="gdk/gdkkeysyms.h" line="386"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aogonek" value="433" c:type="GDK_KEY_aogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="588"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_apostrophe" value="39" c:type="GDK_KEY_apostrophe">
      <source-position filename="gdk/gdkkeysyms.h" line="387"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_approxeq" value="16785992" c:type="GDK_KEY_approxeq">
      <source-position filename="gdk/gdkkeysyms.h" line="1780"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_approximate" value="2248" c:type="GDK_KEY_approximate">
      <source-position filename="gdk/gdkkeysyms.h" line="1127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aring" value="229" c:type="GDK_KEY_aring">
      <source-position filename="gdk/gdkkeysyms.h" line="549"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asciicircum" value="94" c:type="GDK_KEY_asciicircum">
      <source-position filename="gdk/gdkkeysyms.h" line="443"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asciitilde" value="126" c:type="GDK_KEY_asciitilde">
      <source-position filename="gdk/gdkkeysyms.h" line="476"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asterisk" value="42" c:type="GDK_KEY_asterisk">
      <source-position filename="gdk/gdkkeysyms.h" line="391"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_at" value="64" c:type="GDK_KEY_at">
      <source-position filename="gdk/gdkkeysyms.h" line="413"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_atilde" value="227" c:type="GDK_KEY_atilde">
      <source-position filename="gdk/gdkkeysyms.h" line="547"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_b" value="98" c:type="GDK_KEY_b">
      <source-position filename="gdk/gdkkeysyms.h" line="448"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_babovedot" value="16784899" c:type="GDK_KEY_babovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="693"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_backslash" value="92" c:type="GDK_KEY_backslash">
      <source-position filename="gdk/gdkkeysyms.h" line="441"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ballotcross" value="2804" c:type="GDK_KEY_ballotcross">
      <source-position filename="gdk/gdkkeysyms.h" line="1240"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bar" value="124" c:type="GDK_KEY_bar">
      <source-position filename="gdk/gdkkeysyms.h" line="474"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_because" value="16785973" c:type="GDK_KEY_because">
      <source-position filename="gdk/gdkkeysyms.h" line="1779"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_blank" value="2527" c:type="GDK_KEY_blank">
      <source-position filename="gdk/gdkkeysyms.h" line="1145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botintegral" value="2213" c:type="GDK_KEY_botintegral">
      <source-position filename="gdk/gdkkeysyms.h" line="1100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftparens"
              value="2220"
              c:type="GDK_KEY_botleftparens">
      <source-position filename="gdk/gdkkeysyms.h" line="1107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftsqbracket"
              value="2216"
              c:type="GDK_KEY_botleftsqbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftsummation"
              value="2226"
              c:type="GDK_KEY_botleftsummation">
      <source-position filename="gdk/gdkkeysyms.h" line="1113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightparens"
              value="2222"
              c:type="GDK_KEY_botrightparens">
      <source-position filename="gdk/gdkkeysyms.h" line="1109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightsqbracket"
              value="2218"
              c:type="GDK_KEY_botrightsqbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightsummation"
              value="2230"
              c:type="GDK_KEY_botrightsummation">
      <source-position filename="gdk/gdkkeysyms.h" line="1117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bott" value="2550" c:type="GDK_KEY_bott">
      <source-position filename="gdk/gdkkeysyms.h" line="1166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botvertsummationconnector"
              value="2228"
              c:type="GDK_KEY_botvertsummationconnector">
      <source-position filename="gdk/gdkkeysyms.h" line="1115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braceleft" value="123" c:type="GDK_KEY_braceleft">
      <source-position filename="gdk/gdkkeysyms.h" line="473"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braceright" value="125" c:type="GDK_KEY_braceright">
      <source-position filename="gdk/gdkkeysyms.h" line="475"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bracketleft" value="91" c:type="GDK_KEY_bracketleft">
      <source-position filename="gdk/gdkkeysyms.h" line="440"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bracketright" value="93" c:type="GDK_KEY_bracketright">
      <source-position filename="gdk/gdkkeysyms.h" line="442"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_blank"
              value="16787456"
              c:type="GDK_KEY_braille_blank">
      <source-position filename="gdk/gdkkeysyms.h" line="1794"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_1"
              value="65521"
              c:type="GDK_KEY_braille_dot_1">
      <source-position filename="gdk/gdkkeysyms.h" line="1784"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_10"
              value="65530"
              c:type="GDK_KEY_braille_dot_10">
      <source-position filename="gdk/gdkkeysyms.h" line="1793"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_2"
              value="65522"
              c:type="GDK_KEY_braille_dot_2">
      <source-position filename="gdk/gdkkeysyms.h" line="1785"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_3"
              value="65523"
              c:type="GDK_KEY_braille_dot_3">
      <source-position filename="gdk/gdkkeysyms.h" line="1786"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_4"
              value="65524"
              c:type="GDK_KEY_braille_dot_4">
      <source-position filename="gdk/gdkkeysyms.h" line="1787"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_5"
              value="65525"
              c:type="GDK_KEY_braille_dot_5">
      <source-position filename="gdk/gdkkeysyms.h" line="1788"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_6"
              value="65526"
              c:type="GDK_KEY_braille_dot_6">
      <source-position filename="gdk/gdkkeysyms.h" line="1789"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_7"
              value="65527"
              c:type="GDK_KEY_braille_dot_7">
      <source-position filename="gdk/gdkkeysyms.h" line="1790"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_8"
              value="65528"
              c:type="GDK_KEY_braille_dot_8">
      <source-position filename="gdk/gdkkeysyms.h" line="1791"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_9"
              value="65529"
              c:type="GDK_KEY_braille_dot_9">
      <source-position filename="gdk/gdkkeysyms.h" line="1792"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1"
              value="16787457"
              c:type="GDK_KEY_braille_dots_1">
      <source-position filename="gdk/gdkkeysyms.h" line="1795"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12"
              value="16787459"
              c:type="GDK_KEY_braille_dots_12">
      <source-position filename="gdk/gdkkeysyms.h" line="1797"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123"
              value="16787463"
              c:type="GDK_KEY_braille_dots_123">
      <source-position filename="gdk/gdkkeysyms.h" line="1801"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234"
              value="16787471"
              c:type="GDK_KEY_braille_dots_1234">
      <source-position filename="gdk/gdkkeysyms.h" line="1809"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12345"
              value="16787487"
              c:type="GDK_KEY_braille_dots_12345">
      <source-position filename="gdk/gdkkeysyms.h" line="1825"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123456"
              value="16787519"
              c:type="GDK_KEY_braille_dots_123456">
      <source-position filename="gdk/gdkkeysyms.h" line="1857"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234567"
              value="16787583"
              c:type="GDK_KEY_braille_dots_1234567">
      <source-position filename="gdk/gdkkeysyms.h" line="1921"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12345678"
              value="16787711"
              c:type="GDK_KEY_braille_dots_12345678">
      <source-position filename="gdk/gdkkeysyms.h" line="2049"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234568"
              value="16787647"
              c:type="GDK_KEY_braille_dots_1234568">
      <source-position filename="gdk/gdkkeysyms.h" line="1985"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123457"
              value="16787551"
              c:type="GDK_KEY_braille_dots_123457">
      <source-position filename="gdk/gdkkeysyms.h" line="1889"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234578"
              value="16787679"
              c:type="GDK_KEY_braille_dots_1234578">
      <source-position filename="gdk/gdkkeysyms.h" line="2017"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123458"
              value="16787615"
              c:type="GDK_KEY_braille_dots_123458">
      <source-position filename="gdk/gdkkeysyms.h" line="1953"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12346"
              value="16787503"
              c:type="GDK_KEY_braille_dots_12346">
      <source-position filename="gdk/gdkkeysyms.h" line="1841"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123467"
              value="16787567"
              c:type="GDK_KEY_braille_dots_123467">
      <source-position filename="gdk/gdkkeysyms.h" line="1905"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234678"
              value="16787695"
              c:type="GDK_KEY_braille_dots_1234678">
      <source-position filename="gdk/gdkkeysyms.h" line="2033"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123468"
              value="16787631"
              c:type="GDK_KEY_braille_dots_123468">
      <source-position filename="gdk/gdkkeysyms.h" line="1969"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12347"
              value="16787535"
              c:type="GDK_KEY_braille_dots_12347">
      <source-position filename="gdk/gdkkeysyms.h" line="1873"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123478"
              value="16787663"
              c:type="GDK_KEY_braille_dots_123478">
      <source-position filename="gdk/gdkkeysyms.h" line="2001"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12348"
              value="16787599"
              c:type="GDK_KEY_braille_dots_12348">
      <source-position filename="gdk/gdkkeysyms.h" line="1937"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1235"
              value="16787479"
              c:type="GDK_KEY_braille_dots_1235">
      <source-position filename="gdk/gdkkeysyms.h" line="1817"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12356"
              value="16787511"
              c:type="GDK_KEY_braille_dots_12356">
      <source-position filename="gdk/gdkkeysyms.h" line="1849"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123567"
              value="16787575"
              c:type="GDK_KEY_braille_dots_123567">
      <source-position filename="gdk/gdkkeysyms.h" line="1913"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1235678"
              value="16787703"
              c:type="GDK_KEY_braille_dots_1235678">
      <source-position filename="gdk/gdkkeysyms.h" line="2041"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123568"
              value="16787639"
              c:type="GDK_KEY_braille_dots_123568">
      <source-position filename="gdk/gdkkeysyms.h" line="1977"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12357"
              value="16787543"
              c:type="GDK_KEY_braille_dots_12357">
      <source-position filename="gdk/gdkkeysyms.h" line="1881"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123578"
              value="16787671"
              c:type="GDK_KEY_braille_dots_123578">
      <source-position filename="gdk/gdkkeysyms.h" line="2009"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12358"
              value="16787607"
              c:type="GDK_KEY_braille_dots_12358">
      <source-position filename="gdk/gdkkeysyms.h" line="1945"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1236"
              value="16787495"
              c:type="GDK_KEY_braille_dots_1236">
      <source-position filename="gdk/gdkkeysyms.h" line="1833"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12367"
              value="16787559"
              c:type="GDK_KEY_braille_dots_12367">
      <source-position filename="gdk/gdkkeysyms.h" line="1897"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123678"
              value="16787687"
              c:type="GDK_KEY_braille_dots_123678">
      <source-position filename="gdk/gdkkeysyms.h" line="2025"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12368"
              value="16787623"
              c:type="GDK_KEY_braille_dots_12368">
      <source-position filename="gdk/gdkkeysyms.h" line="1961"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1237"
              value="16787527"
              c:type="GDK_KEY_braille_dots_1237">
      <source-position filename="gdk/gdkkeysyms.h" line="1865"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12378"
              value="16787655"
              c:type="GDK_KEY_braille_dots_12378">
      <source-position filename="gdk/gdkkeysyms.h" line="1993"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1238"
              value="16787591"
              c:type="GDK_KEY_braille_dots_1238">
      <source-position filename="gdk/gdkkeysyms.h" line="1929"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124"
              value="16787467"
              c:type="GDK_KEY_braille_dots_124">
      <source-position filename="gdk/gdkkeysyms.h" line="1805"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1245"
              value="16787483"
              c:type="GDK_KEY_braille_dots_1245">
      <source-position filename="gdk/gdkkeysyms.h" line="1821"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12456"
              value="16787515"
              c:type="GDK_KEY_braille_dots_12456">
      <source-position filename="gdk/gdkkeysyms.h" line="1853"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124567"
              value="16787579"
              c:type="GDK_KEY_braille_dots_124567">
      <source-position filename="gdk/gdkkeysyms.h" line="1917"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1245678"
              value="16787707"
              c:type="GDK_KEY_braille_dots_1245678">
      <source-position filename="gdk/gdkkeysyms.h" line="2045"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124568"
              value="16787643"
              c:type="GDK_KEY_braille_dots_124568">
      <source-position filename="gdk/gdkkeysyms.h" line="1981"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12457"
              value="16787547"
              c:type="GDK_KEY_braille_dots_12457">
      <source-position filename="gdk/gdkkeysyms.h" line="1885"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124578"
              value="16787675"
              c:type="GDK_KEY_braille_dots_124578">
      <source-position filename="gdk/gdkkeysyms.h" line="2013"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12458"
              value="16787611"
              c:type="GDK_KEY_braille_dots_12458">
      <source-position filename="gdk/gdkkeysyms.h" line="1949"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1246"
              value="16787499"
              c:type="GDK_KEY_braille_dots_1246">
      <source-position filename="gdk/gdkkeysyms.h" line="1837"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12467"
              value="16787563"
              c:type="GDK_KEY_braille_dots_12467">
      <source-position filename="gdk/gdkkeysyms.h" line="1901"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124678"
              value="16787691"
              c:type="GDK_KEY_braille_dots_124678">
      <source-position filename="gdk/gdkkeysyms.h" line="2029"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12468"
              value="16787627"
              c:type="GDK_KEY_braille_dots_12468">
      <source-position filename="gdk/gdkkeysyms.h" line="1965"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1247"
              value="16787531"
              c:type="GDK_KEY_braille_dots_1247">
      <source-position filename="gdk/gdkkeysyms.h" line="1869"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12478"
              value="16787659"
              c:type="GDK_KEY_braille_dots_12478">
      <source-position filename="gdk/gdkkeysyms.h" line="1997"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1248"
              value="16787595"
              c:type="GDK_KEY_braille_dots_1248">
      <source-position filename="gdk/gdkkeysyms.h" line="1933"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_125"
              value="16787475"
              c:type="GDK_KEY_braille_dots_125">
      <source-position filename="gdk/gdkkeysyms.h" line="1813"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1256"
              value="16787507"
              c:type="GDK_KEY_braille_dots_1256">
      <source-position filename="gdk/gdkkeysyms.h" line="1845"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12567"
              value="16787571"
              c:type="GDK_KEY_braille_dots_12567">
      <source-position filename="gdk/gdkkeysyms.h" line="1909"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_125678"
              value="16787699"
              c:type="GDK_KEY_braille_dots_125678">
      <source-position filename="gdk/gdkkeysyms.h" line="2037"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12568"
              value="16787635"
              c:type="GDK_KEY_braille_dots_12568">
      <source-position filename="gdk/gdkkeysyms.h" line="1973"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1257"
              value="16787539"
              c:type="GDK_KEY_braille_dots_1257">
      <source-position filename="gdk/gdkkeysyms.h" line="1877"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12578"
              value="16787667"
              c:type="GDK_KEY_braille_dots_12578">
      <source-position filename="gdk/gdkkeysyms.h" line="2005"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1258"
              value="16787603"
              c:type="GDK_KEY_braille_dots_1258">
      <source-position filename="gdk/gdkkeysyms.h" line="1941"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_126"
              value="16787491"
              c:type="GDK_KEY_braille_dots_126">
      <source-position filename="gdk/gdkkeysyms.h" line="1829"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1267"
              value="16787555"
              c:type="GDK_KEY_braille_dots_1267">
      <source-position filename="gdk/gdkkeysyms.h" line="1893"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12678"
              value="16787683"
              c:type="GDK_KEY_braille_dots_12678">
      <source-position filename="gdk/gdkkeysyms.h" line="2021"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1268"
              value="16787619"
              c:type="GDK_KEY_braille_dots_1268">
      <source-position filename="gdk/gdkkeysyms.h" line="1957"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_127"
              value="16787523"
              c:type="GDK_KEY_braille_dots_127">
      <source-position filename="gdk/gdkkeysyms.h" line="1861"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1278"
              value="16787651"
              c:type="GDK_KEY_braille_dots_1278">
      <source-position filename="gdk/gdkkeysyms.h" line="1989"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_128"
              value="16787587"
              c:type="GDK_KEY_braille_dots_128">
      <source-position filename="gdk/gdkkeysyms.h" line="1925"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13"
              value="16787461"
              c:type="GDK_KEY_braille_dots_13">
      <source-position filename="gdk/gdkkeysyms.h" line="1799"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134"
              value="16787469"
              c:type="GDK_KEY_braille_dots_134">
      <source-position filename="gdk/gdkkeysyms.h" line="1807"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1345"
              value="16787485"
              c:type="GDK_KEY_braille_dots_1345">
      <source-position filename="gdk/gdkkeysyms.h" line="1823"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13456"
              value="16787517"
              c:type="GDK_KEY_braille_dots_13456">
      <source-position filename="gdk/gdkkeysyms.h" line="1855"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134567"
              value="16787581"
              c:type="GDK_KEY_braille_dots_134567">
      <source-position filename="gdk/gdkkeysyms.h" line="1919"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1345678"
              value="16787709"
              c:type="GDK_KEY_braille_dots_1345678">
      <source-position filename="gdk/gdkkeysyms.h" line="2047"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134568"
              value="16787645"
              c:type="GDK_KEY_braille_dots_134568">
      <source-position filename="gdk/gdkkeysyms.h" line="1983"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13457"
              value="16787549"
              c:type="GDK_KEY_braille_dots_13457">
      <source-position filename="gdk/gdkkeysyms.h" line="1887"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134578"
              value="16787677"
              c:type="GDK_KEY_braille_dots_134578">
      <source-position filename="gdk/gdkkeysyms.h" line="2015"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13458"
              value="16787613"
              c:type="GDK_KEY_braille_dots_13458">
      <source-position filename="gdk/gdkkeysyms.h" line="1951"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1346"
              value="16787501"
              c:type="GDK_KEY_braille_dots_1346">
      <source-position filename="gdk/gdkkeysyms.h" line="1839"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13467"
              value="16787565"
              c:type="GDK_KEY_braille_dots_13467">
      <source-position filename="gdk/gdkkeysyms.h" line="1903"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134678"
              value="16787693"
              c:type="GDK_KEY_braille_dots_134678">
      <source-position filename="gdk/gdkkeysyms.h" line="2031"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13468"
              value="16787629"
              c:type="GDK_KEY_braille_dots_13468">
      <source-position filename="gdk/gdkkeysyms.h" line="1967"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1347"
              value="16787533"
              c:type="GDK_KEY_braille_dots_1347">
      <source-position filename="gdk/gdkkeysyms.h" line="1871"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13478"
              value="16787661"
              c:type="GDK_KEY_braille_dots_13478">
      <source-position filename="gdk/gdkkeysyms.h" line="1999"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1348"
              value="16787597"
              c:type="GDK_KEY_braille_dots_1348">
      <source-position filename="gdk/gdkkeysyms.h" line="1935"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_135"
              value="16787477"
              c:type="GDK_KEY_braille_dots_135">
      <source-position filename="gdk/gdkkeysyms.h" line="1815"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1356"
              value="16787509"
              c:type="GDK_KEY_braille_dots_1356">
      <source-position filename="gdk/gdkkeysyms.h" line="1847"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13567"
              value="16787573"
              c:type="GDK_KEY_braille_dots_13567">
      <source-position filename="gdk/gdkkeysyms.h" line="1911"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_135678"
              value="16787701"
              c:type="GDK_KEY_braille_dots_135678">
      <source-position filename="gdk/gdkkeysyms.h" line="2039"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13568"
              value="16787637"
              c:type="GDK_KEY_braille_dots_13568">
      <source-position filename="gdk/gdkkeysyms.h" line="1975"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1357"
              value="16787541"
              c:type="GDK_KEY_braille_dots_1357">
      <source-position filename="gdk/gdkkeysyms.h" line="1879"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13578"
              value="16787669"
              c:type="GDK_KEY_braille_dots_13578">
      <source-position filename="gdk/gdkkeysyms.h" line="2007"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1358"
              value="16787605"
              c:type="GDK_KEY_braille_dots_1358">
      <source-position filename="gdk/gdkkeysyms.h" line="1943"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_136"
              value="16787493"
              c:type="GDK_KEY_braille_dots_136">
      <source-position filename="gdk/gdkkeysyms.h" line="1831"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1367"
              value="16787557"
              c:type="GDK_KEY_braille_dots_1367">
      <source-position filename="gdk/gdkkeysyms.h" line="1895"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13678"
              value="16787685"
              c:type="GDK_KEY_braille_dots_13678">
      <source-position filename="gdk/gdkkeysyms.h" line="2023"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1368"
              value="16787621"
              c:type="GDK_KEY_braille_dots_1368">
      <source-position filename="gdk/gdkkeysyms.h" line="1959"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_137"
              value="16787525"
              c:type="GDK_KEY_braille_dots_137">
      <source-position filename="gdk/gdkkeysyms.h" line="1863"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1378"
              value="16787653"
              c:type="GDK_KEY_braille_dots_1378">
      <source-position filename="gdk/gdkkeysyms.h" line="1991"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_138"
              value="16787589"
              c:type="GDK_KEY_braille_dots_138">
      <source-position filename="gdk/gdkkeysyms.h" line="1927"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14"
              value="16787465"
              c:type="GDK_KEY_braille_dots_14">
      <source-position filename="gdk/gdkkeysyms.h" line="1803"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_145"
              value="16787481"
              c:type="GDK_KEY_braille_dots_145">
      <source-position filename="gdk/gdkkeysyms.h" line="1819"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1456"
              value="16787513"
              c:type="GDK_KEY_braille_dots_1456">
      <source-position filename="gdk/gdkkeysyms.h" line="1851"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14567"
              value="16787577"
              c:type="GDK_KEY_braille_dots_14567">
      <source-position filename="gdk/gdkkeysyms.h" line="1915"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_145678"
              value="16787705"
              c:type="GDK_KEY_braille_dots_145678">
      <source-position filename="gdk/gdkkeysyms.h" line="2043"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14568"
              value="16787641"
              c:type="GDK_KEY_braille_dots_14568">
      <source-position filename="gdk/gdkkeysyms.h" line="1979"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1457"
              value="16787545"
              c:type="GDK_KEY_braille_dots_1457">
      <source-position filename="gdk/gdkkeysyms.h" line="1883"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14578"
              value="16787673"
              c:type="GDK_KEY_braille_dots_14578">
      <source-position filename="gdk/gdkkeysyms.h" line="2011"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1458"
              value="16787609"
              c:type="GDK_KEY_braille_dots_1458">
      <source-position filename="gdk/gdkkeysyms.h" line="1947"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_146"
              value="16787497"
              c:type="GDK_KEY_braille_dots_146">
      <source-position filename="gdk/gdkkeysyms.h" line="1835"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1467"
              value="16787561"
              c:type="GDK_KEY_braille_dots_1467">
      <source-position filename="gdk/gdkkeysyms.h" line="1899"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14678"
              value="16787689"
              c:type="GDK_KEY_braille_dots_14678">
      <source-position filename="gdk/gdkkeysyms.h" line="2027"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1468"
              value="16787625"
              c:type="GDK_KEY_braille_dots_1468">
      <source-position filename="gdk/gdkkeysyms.h" line="1963"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_147"
              value="16787529"
              c:type="GDK_KEY_braille_dots_147">
      <source-position filename="gdk/gdkkeysyms.h" line="1867"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1478"
              value="16787657"
              c:type="GDK_KEY_braille_dots_1478">
      <source-position filename="gdk/gdkkeysyms.h" line="1995"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_148"
              value="16787593"
              c:type="GDK_KEY_braille_dots_148">
      <source-position filename="gdk/gdkkeysyms.h" line="1931"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_15"
              value="16787473"
              c:type="GDK_KEY_braille_dots_15">
      <source-position filename="gdk/gdkkeysyms.h" line="1811"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_156"
              value="16787505"
              c:type="GDK_KEY_braille_dots_156">
      <source-position filename="gdk/gdkkeysyms.h" line="1843"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1567"
              value="16787569"
              c:type="GDK_KEY_braille_dots_1567">
      <source-position filename="gdk/gdkkeysyms.h" line="1907"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_15678"
              value="16787697"
              c:type="GDK_KEY_braille_dots_15678">
      <source-position filename="gdk/gdkkeysyms.h" line="2035"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1568"
              value="16787633"
              c:type="GDK_KEY_braille_dots_1568">
      <source-position filename="gdk/gdkkeysyms.h" line="1971"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_157"
              value="16787537"
              c:type="GDK_KEY_braille_dots_157">
      <source-position filename="gdk/gdkkeysyms.h" line="1875"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1578"
              value="16787665"
              c:type="GDK_KEY_braille_dots_1578">
      <source-position filename="gdk/gdkkeysyms.h" line="2003"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_158"
              value="16787601"
              c:type="GDK_KEY_braille_dots_158">
      <source-position filename="gdk/gdkkeysyms.h" line="1939"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_16"
              value="16787489"
              c:type="GDK_KEY_braille_dots_16">
      <source-position filename="gdk/gdkkeysyms.h" line="1827"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_167"
              value="16787553"
              c:type="GDK_KEY_braille_dots_167">
      <source-position filename="gdk/gdkkeysyms.h" line="1891"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1678"
              value="16787681"
              c:type="GDK_KEY_braille_dots_1678">
      <source-position filename="gdk/gdkkeysyms.h" line="2019"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_168"
              value="16787617"
              c:type="GDK_KEY_braille_dots_168">
      <source-position filename="gdk/gdkkeysyms.h" line="1955"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_17"
              value="16787521"
              c:type="GDK_KEY_braille_dots_17">
      <source-position filename="gdk/gdkkeysyms.h" line="1859"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_178"
              value="16787649"
              c:type="GDK_KEY_braille_dots_178">
      <source-position filename="gdk/gdkkeysyms.h" line="1987"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_18"
              value="16787585"
              c:type="GDK_KEY_braille_dots_18">
      <source-position filename="gdk/gdkkeysyms.h" line="1923"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2"
              value="16787458"
              c:type="GDK_KEY_braille_dots_2">
      <source-position filename="gdk/gdkkeysyms.h" line="1796"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23"
              value="16787462"
              c:type="GDK_KEY_braille_dots_23">
      <source-position filename="gdk/gdkkeysyms.h" line="1800"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234"
              value="16787470"
              c:type="GDK_KEY_braille_dots_234">
      <source-position filename="gdk/gdkkeysyms.h" line="1808"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2345"
              value="16787486"
              c:type="GDK_KEY_braille_dots_2345">
      <source-position filename="gdk/gdkkeysyms.h" line="1824"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23456"
              value="16787518"
              c:type="GDK_KEY_braille_dots_23456">
      <source-position filename="gdk/gdkkeysyms.h" line="1856"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234567"
              value="16787582"
              c:type="GDK_KEY_braille_dots_234567">
      <source-position filename="gdk/gdkkeysyms.h" line="1920"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2345678"
              value="16787710"
              c:type="GDK_KEY_braille_dots_2345678">
      <source-position filename="gdk/gdkkeysyms.h" line="2048"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234568"
              value="16787646"
              c:type="GDK_KEY_braille_dots_234568">
      <source-position filename="gdk/gdkkeysyms.h" line="1984"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23457"
              value="16787550"
              c:type="GDK_KEY_braille_dots_23457">
      <source-position filename="gdk/gdkkeysyms.h" line="1888"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234578"
              value="16787678"
              c:type="GDK_KEY_braille_dots_234578">
      <source-position filename="gdk/gdkkeysyms.h" line="2016"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23458"
              value="16787614"
              c:type="GDK_KEY_braille_dots_23458">
      <source-position filename="gdk/gdkkeysyms.h" line="1952"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2346"
              value="16787502"
              c:type="GDK_KEY_braille_dots_2346">
      <source-position filename="gdk/gdkkeysyms.h" line="1840"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23467"
              value="16787566"
              c:type="GDK_KEY_braille_dots_23467">
      <source-position filename="gdk/gdkkeysyms.h" line="1904"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234678"
              value="16787694"
              c:type="GDK_KEY_braille_dots_234678">
      <source-position filename="gdk/gdkkeysyms.h" line="2032"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23468"
              value="16787630"
              c:type="GDK_KEY_braille_dots_23468">
      <source-position filename="gdk/gdkkeysyms.h" line="1968"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2347"
              value="16787534"
              c:type="GDK_KEY_braille_dots_2347">
      <source-position filename="gdk/gdkkeysyms.h" line="1872"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23478"
              value="16787662"
              c:type="GDK_KEY_braille_dots_23478">
      <source-position filename="gdk/gdkkeysyms.h" line="2000"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2348"
              value="16787598"
              c:type="GDK_KEY_braille_dots_2348">
      <source-position filename="gdk/gdkkeysyms.h" line="1936"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_235"
              value="16787478"
              c:type="GDK_KEY_braille_dots_235">
      <source-position filename="gdk/gdkkeysyms.h" line="1816"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2356"
              value="16787510"
              c:type="GDK_KEY_braille_dots_2356">
      <source-position filename="gdk/gdkkeysyms.h" line="1848"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23567"
              value="16787574"
              c:type="GDK_KEY_braille_dots_23567">
      <source-position filename="gdk/gdkkeysyms.h" line="1912"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_235678"
              value="16787702"
              c:type="GDK_KEY_braille_dots_235678">
      <source-position filename="gdk/gdkkeysyms.h" line="2040"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23568"
              value="16787638"
              c:type="GDK_KEY_braille_dots_23568">
      <source-position filename="gdk/gdkkeysyms.h" line="1976"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2357"
              value="16787542"
              c:type="GDK_KEY_braille_dots_2357">
      <source-position filename="gdk/gdkkeysyms.h" line="1880"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23578"
              value="16787670"
              c:type="GDK_KEY_braille_dots_23578">
      <source-position filename="gdk/gdkkeysyms.h" line="2008"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2358"
              value="16787606"
              c:type="GDK_KEY_braille_dots_2358">
      <source-position filename="gdk/gdkkeysyms.h" line="1944"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_236"
              value="16787494"
              c:type="GDK_KEY_braille_dots_236">
      <source-position filename="gdk/gdkkeysyms.h" line="1832"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2367"
              value="16787558"
              c:type="GDK_KEY_braille_dots_2367">
      <source-position filename="gdk/gdkkeysyms.h" line="1896"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23678"
              value="16787686"
              c:type="GDK_KEY_braille_dots_23678">
      <source-position filename="gdk/gdkkeysyms.h" line="2024"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2368"
              value="16787622"
              c:type="GDK_KEY_braille_dots_2368">
      <source-position filename="gdk/gdkkeysyms.h" line="1960"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_237"
              value="16787526"
              c:type="GDK_KEY_braille_dots_237">
      <source-position filename="gdk/gdkkeysyms.h" line="1864"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2378"
              value="16787654"
              c:type="GDK_KEY_braille_dots_2378">
      <source-position filename="gdk/gdkkeysyms.h" line="1992"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_238"
              value="16787590"
              c:type="GDK_KEY_braille_dots_238">
      <source-position filename="gdk/gdkkeysyms.h" line="1928"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24"
              value="16787466"
              c:type="GDK_KEY_braille_dots_24">
      <source-position filename="gdk/gdkkeysyms.h" line="1804"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_245"
              value="16787482"
              c:type="GDK_KEY_braille_dots_245">
      <source-position filename="gdk/gdkkeysyms.h" line="1820"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2456"
              value="16787514"
              c:type="GDK_KEY_braille_dots_2456">
      <source-position filename="gdk/gdkkeysyms.h" line="1852"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24567"
              value="16787578"
              c:type="GDK_KEY_braille_dots_24567">
      <source-position filename="gdk/gdkkeysyms.h" line="1916"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_245678"
              value="16787706"
              c:type="GDK_KEY_braille_dots_245678">
      <source-position filename="gdk/gdkkeysyms.h" line="2044"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24568"
              value="16787642"
              c:type="GDK_KEY_braille_dots_24568">
      <source-position filename="gdk/gdkkeysyms.h" line="1980"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2457"
              value="16787546"
              c:type="GDK_KEY_braille_dots_2457">
      <source-position filename="gdk/gdkkeysyms.h" line="1884"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24578"
              value="16787674"
              c:type="GDK_KEY_braille_dots_24578">
      <source-position filename="gdk/gdkkeysyms.h" line="2012"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2458"
              value="16787610"
              c:type="GDK_KEY_braille_dots_2458">
      <source-position filename="gdk/gdkkeysyms.h" line="1948"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_246"
              value="16787498"
              c:type="GDK_KEY_braille_dots_246">
      <source-position filename="gdk/gdkkeysyms.h" line="1836"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2467"
              value="16787562"
              c:type="GDK_KEY_braille_dots_2467">
      <source-position filename="gdk/gdkkeysyms.h" line="1900"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24678"
              value="16787690"
              c:type="GDK_KEY_braille_dots_24678">
      <source-position filename="gdk/gdkkeysyms.h" line="2028"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2468"
              value="16787626"
              c:type="GDK_KEY_braille_dots_2468">
      <source-position filename="gdk/gdkkeysyms.h" line="1964"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_247"
              value="16787530"
              c:type="GDK_KEY_braille_dots_247">
      <source-position filename="gdk/gdkkeysyms.h" line="1868"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2478"
              value="16787658"
              c:type="GDK_KEY_braille_dots_2478">
      <source-position filename="gdk/gdkkeysyms.h" line="1996"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_248"
              value="16787594"
              c:type="GDK_KEY_braille_dots_248">
      <source-position filename="gdk/gdkkeysyms.h" line="1932"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_25"
              value="16787474"
              c:type="GDK_KEY_braille_dots_25">
      <source-position filename="gdk/gdkkeysyms.h" line="1812"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_256"
              value="16787506"
              c:type="GDK_KEY_braille_dots_256">
      <source-position filename="gdk/gdkkeysyms.h" line="1844"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2567"
              value="16787570"
              c:type="GDK_KEY_braille_dots_2567">
      <source-position filename="gdk/gdkkeysyms.h" line="1908"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_25678"
              value="16787698"
              c:type="GDK_KEY_braille_dots_25678">
      <source-position filename="gdk/gdkkeysyms.h" line="2036"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2568"
              value="16787634"
              c:type="GDK_KEY_braille_dots_2568">
      <source-position filename="gdk/gdkkeysyms.h" line="1972"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_257"
              value="16787538"
              c:type="GDK_KEY_braille_dots_257">
      <source-position filename="gdk/gdkkeysyms.h" line="1876"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2578"
              value="16787666"
              c:type="GDK_KEY_braille_dots_2578">
      <source-position filename="gdk/gdkkeysyms.h" line="2004"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_258"
              value="16787602"
              c:type="GDK_KEY_braille_dots_258">
      <source-position filename="gdk/gdkkeysyms.h" line="1940"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_26"
              value="16787490"
              c:type="GDK_KEY_braille_dots_26">
      <source-position filename="gdk/gdkkeysyms.h" line="1828"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_267"
              value="16787554"
              c:type="GDK_KEY_braille_dots_267">
      <source-position filename="gdk/gdkkeysyms.h" line="1892"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2678"
              value="16787682"
              c:type="GDK_KEY_braille_dots_2678">
      <source-position filename="gdk/gdkkeysyms.h" line="2020"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_268"
              value="16787618"
              c:type="GDK_KEY_braille_dots_268">
      <source-position filename="gdk/gdkkeysyms.h" line="1956"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_27"
              value="16787522"
              c:type="GDK_KEY_braille_dots_27">
      <source-position filename="gdk/gdkkeysyms.h" line="1860"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_278"
              value="16787650"
              c:type="GDK_KEY_braille_dots_278">
      <source-position filename="gdk/gdkkeysyms.h" line="1988"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_28"
              value="16787586"
              c:type="GDK_KEY_braille_dots_28">
      <source-position filename="gdk/gdkkeysyms.h" line="1924"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3"
              value="16787460"
              c:type="GDK_KEY_braille_dots_3">
      <source-position filename="gdk/gdkkeysyms.h" line="1798"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34"
              value="16787468"
              c:type="GDK_KEY_braille_dots_34">
      <source-position filename="gdk/gdkkeysyms.h" line="1806"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_345"
              value="16787484"
              c:type="GDK_KEY_braille_dots_345">
      <source-position filename="gdk/gdkkeysyms.h" line="1822"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3456"
              value="16787516"
              c:type="GDK_KEY_braille_dots_3456">
      <source-position filename="gdk/gdkkeysyms.h" line="1854"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34567"
              value="16787580"
              c:type="GDK_KEY_braille_dots_34567">
      <source-position filename="gdk/gdkkeysyms.h" line="1918"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_345678"
              value="16787708"
              c:type="GDK_KEY_braille_dots_345678">
      <source-position filename="gdk/gdkkeysyms.h" line="2046"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34568"
              value="16787644"
              c:type="GDK_KEY_braille_dots_34568">
      <source-position filename="gdk/gdkkeysyms.h" line="1982"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3457"
              value="16787548"
              c:type="GDK_KEY_braille_dots_3457">
      <source-position filename="gdk/gdkkeysyms.h" line="1886"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34578"
              value="16787676"
              c:type="GDK_KEY_braille_dots_34578">
      <source-position filename="gdk/gdkkeysyms.h" line="2014"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3458"
              value="16787612"
              c:type="GDK_KEY_braille_dots_3458">
      <source-position filename="gdk/gdkkeysyms.h" line="1950"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_346"
              value="16787500"
              c:type="GDK_KEY_braille_dots_346">
      <source-position filename="gdk/gdkkeysyms.h" line="1838"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3467"
              value="16787564"
              c:type="GDK_KEY_braille_dots_3467">
      <source-position filename="gdk/gdkkeysyms.h" line="1902"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34678"
              value="16787692"
              c:type="GDK_KEY_braille_dots_34678">
      <source-position filename="gdk/gdkkeysyms.h" line="2030"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3468"
              value="16787628"
              c:type="GDK_KEY_braille_dots_3468">
      <source-position filename="gdk/gdkkeysyms.h" line="1966"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_347"
              value="16787532"
              c:type="GDK_KEY_braille_dots_347">
      <source-position filename="gdk/gdkkeysyms.h" line="1870"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3478"
              value="16787660"
              c:type="GDK_KEY_braille_dots_3478">
      <source-position filename="gdk/gdkkeysyms.h" line="1998"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_348"
              value="16787596"
              c:type="GDK_KEY_braille_dots_348">
      <source-position filename="gdk/gdkkeysyms.h" line="1934"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_35"
              value="16787476"
              c:type="GDK_KEY_braille_dots_35">
      <source-position filename="gdk/gdkkeysyms.h" line="1814"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_356"
              value="16787508"
              c:type="GDK_KEY_braille_dots_356">
      <source-position filename="gdk/gdkkeysyms.h" line="1846"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3567"
              value="16787572"
              c:type="GDK_KEY_braille_dots_3567">
      <source-position filename="gdk/gdkkeysyms.h" line="1910"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_35678"
              value="16787700"
              c:type="GDK_KEY_braille_dots_35678">
      <source-position filename="gdk/gdkkeysyms.h" line="2038"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3568"
              value="16787636"
              c:type="GDK_KEY_braille_dots_3568">
      <source-position filename="gdk/gdkkeysyms.h" line="1974"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_357"
              value="16787540"
              c:type="GDK_KEY_braille_dots_357">
      <source-position filename="gdk/gdkkeysyms.h" line="1878"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3578"
              value="16787668"
              c:type="GDK_KEY_braille_dots_3578">
      <source-position filename="gdk/gdkkeysyms.h" line="2006"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_358"
              value="16787604"
              c:type="GDK_KEY_braille_dots_358">
      <source-position filename="gdk/gdkkeysyms.h" line="1942"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_36"
              value="16787492"
              c:type="GDK_KEY_braille_dots_36">
      <source-position filename="gdk/gdkkeysyms.h" line="1830"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_367"
              value="16787556"
              c:type="GDK_KEY_braille_dots_367">
      <source-position filename="gdk/gdkkeysyms.h" line="1894"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3678"
              value="16787684"
              c:type="GDK_KEY_braille_dots_3678">
      <source-position filename="gdk/gdkkeysyms.h" line="2022"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_368"
              value="16787620"
              c:type="GDK_KEY_braille_dots_368">
      <source-position filename="gdk/gdkkeysyms.h" line="1958"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_37"
              value="16787524"
              c:type="GDK_KEY_braille_dots_37">
      <source-position filename="gdk/gdkkeysyms.h" line="1862"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_378"
              value="16787652"
              c:type="GDK_KEY_braille_dots_378">
      <source-position filename="gdk/gdkkeysyms.h" line="1990"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_38"
              value="16787588"
              c:type="GDK_KEY_braille_dots_38">
      <source-position filename="gdk/gdkkeysyms.h" line="1926"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4"
              value="16787464"
              c:type="GDK_KEY_braille_dots_4">
      <source-position filename="gdk/gdkkeysyms.h" line="1802"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_45"
              value="16787480"
              c:type="GDK_KEY_braille_dots_45">
      <source-position filename="gdk/gdkkeysyms.h" line="1818"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_456"
              value="16787512"
              c:type="GDK_KEY_braille_dots_456">
      <source-position filename="gdk/gdkkeysyms.h" line="1850"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4567"
              value="16787576"
              c:type="GDK_KEY_braille_dots_4567">
      <source-position filename="gdk/gdkkeysyms.h" line="1914"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_45678"
              value="16787704"
              c:type="GDK_KEY_braille_dots_45678">
      <source-position filename="gdk/gdkkeysyms.h" line="2042"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4568"
              value="16787640"
              c:type="GDK_KEY_braille_dots_4568">
      <source-position filename="gdk/gdkkeysyms.h" line="1978"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_457"
              value="16787544"
              c:type="GDK_KEY_braille_dots_457">
      <source-position filename="gdk/gdkkeysyms.h" line="1882"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4578"
              value="16787672"
              c:type="GDK_KEY_braille_dots_4578">
      <source-position filename="gdk/gdkkeysyms.h" line="2010"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_458"
              value="16787608"
              c:type="GDK_KEY_braille_dots_458">
      <source-position filename="gdk/gdkkeysyms.h" line="1946"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_46"
              value="16787496"
              c:type="GDK_KEY_braille_dots_46">
      <source-position filename="gdk/gdkkeysyms.h" line="1834"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_467"
              value="16787560"
              c:type="GDK_KEY_braille_dots_467">
      <source-position filename="gdk/gdkkeysyms.h" line="1898"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4678"
              value="16787688"
              c:type="GDK_KEY_braille_dots_4678">
      <source-position filename="gdk/gdkkeysyms.h" line="2026"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_468"
              value="16787624"
              c:type="GDK_KEY_braille_dots_468">
      <source-position filename="gdk/gdkkeysyms.h" line="1962"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_47"
              value="16787528"
              c:type="GDK_KEY_braille_dots_47">
      <source-position filename="gdk/gdkkeysyms.h" line="1866"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_478"
              value="16787656"
              c:type="GDK_KEY_braille_dots_478">
      <source-position filename="gdk/gdkkeysyms.h" line="1994"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_48"
              value="16787592"
              c:type="GDK_KEY_braille_dots_48">
      <source-position filename="gdk/gdkkeysyms.h" line="1930"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_5"
              value="16787472"
              c:type="GDK_KEY_braille_dots_5">
      <source-position filename="gdk/gdkkeysyms.h" line="1810"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_56"
              value="16787504"
              c:type="GDK_KEY_braille_dots_56">
      <source-position filename="gdk/gdkkeysyms.h" line="1842"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_567"
              value="16787568"
              c:type="GDK_KEY_braille_dots_567">
      <source-position filename="gdk/gdkkeysyms.h" line="1906"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_5678"
              value="16787696"
              c:type="GDK_KEY_braille_dots_5678">
      <source-position filename="gdk/gdkkeysyms.h" line="2034"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_568"
              value="16787632"
              c:type="GDK_KEY_braille_dots_568">
      <source-position filename="gdk/gdkkeysyms.h" line="1970"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_57"
              value="16787536"
              c:type="GDK_KEY_braille_dots_57">
      <source-position filename="gdk/gdkkeysyms.h" line="1874"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_578"
              value="16787664"
              c:type="GDK_KEY_braille_dots_578">
      <source-position filename="gdk/gdkkeysyms.h" line="2002"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_58"
              value="16787600"
              c:type="GDK_KEY_braille_dots_58">
      <source-position filename="gdk/gdkkeysyms.h" line="1938"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_6"
              value="16787488"
              c:type="GDK_KEY_braille_dots_6">
      <source-position filename="gdk/gdkkeysyms.h" line="1826"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_67"
              value="16787552"
              c:type="GDK_KEY_braille_dots_67">
      <source-position filename="gdk/gdkkeysyms.h" line="1890"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_678"
              value="16787680"
              c:type="GDK_KEY_braille_dots_678">
      <source-position filename="gdk/gdkkeysyms.h" line="2018"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_68"
              value="16787616"
              c:type="GDK_KEY_braille_dots_68">
      <source-position filename="gdk/gdkkeysyms.h" line="1954"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_7"
              value="16787520"
              c:type="GDK_KEY_braille_dots_7">
      <source-position filename="gdk/gdkkeysyms.h" line="1858"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_78"
              value="16787648"
              c:type="GDK_KEY_braille_dots_78">
      <source-position filename="gdk/gdkkeysyms.h" line="1986"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_8"
              value="16787584"
              c:type="GDK_KEY_braille_dots_8">
      <source-position filename="gdk/gdkkeysyms.h" line="1922"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_breve" value="418" c:type="GDK_KEY_breve">
      <source-position filename="gdk/gdkkeysyms.h" line="578"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_brokenbar" value="166" c:type="GDK_KEY_brokenbar">
      <source-position filename="gdk/gdkkeysyms.h" line="483"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_c" value="99" c:type="GDK_KEY_c">
      <source-position filename="gdk/gdkkeysyms.h" line="449"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cabovedot" value="741" c:type="GDK_KEY_cabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="650"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cacute" value="486" c:type="GDK_KEY_cacute">
      <source-position filename="gdk/gdkkeysyms.h" line="620"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_careof" value="2744" c:type="GDK_KEY_careof">
      <source-position filename="gdk/gdkkeysyms.h" line="1190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_caret" value="2812" c:type="GDK_KEY_caret">
      <source-position filename="gdk/gdkkeysyms.h" line="1248"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_caron" value="439" c:type="GDK_KEY_caron">
      <source-position filename="gdk/gdkkeysyms.h" line="593"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccaron" value="488" c:type="GDK_KEY_ccaron">
      <source-position filename="gdk/gdkkeysyms.h" line="621"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccedilla" value="231" c:type="GDK_KEY_ccedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="551"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccircumflex" value="742" c:type="GDK_KEY_ccircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="651"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cedilla" value="184" c:type="GDK_KEY_cedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="501"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cent" value="162" c:type="GDK_KEY_cent">
      <source-position filename="gdk/gdkkeysyms.h" line="479"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_checkerboard"
              value="2529"
              c:type="GDK_KEY_checkerboard">
      <source-position filename="gdk/gdkkeysyms.h" line="1147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_checkmark" value="2803" c:type="GDK_KEY_checkmark">
      <source-position filename="gdk/gdkkeysyms.h" line="1239"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_circle" value="3023" c:type="GDK_KEY_circle">
      <source-position filename="gdk/gdkkeysyms.h" line="1264"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_club" value="2796" c:type="GDK_KEY_club">
      <source-position filename="gdk/gdkkeysyms.h" line="1233"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_colon" value="58" c:type="GDK_KEY_colon">
      <source-position filename="gdk/gdkkeysyms.h" line="407"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_comma" value="44" c:type="GDK_KEY_comma">
      <source-position filename="gdk/gdkkeysyms.h" line="393"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_containsas"
              value="16785931"
              c:type="GDK_KEY_containsas">
      <source-position filename="gdk/gdkkeysyms.h" line="1773"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_copyright" value="169" c:type="GDK_KEY_copyright">
      <source-position filename="gdk/gdkkeysyms.h" line="486"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cr" value="2532" c:type="GDK_KEY_cr">
      <source-position filename="gdk/gdkkeysyms.h" line="1150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_crossinglines"
              value="2542"
              c:type="GDK_KEY_crossinglines">
      <source-position filename="gdk/gdkkeysyms.h" line="1158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cuberoot" value="16785947" c:type="GDK_KEY_cuberoot">
      <source-position filename="gdk/gdkkeysyms.h" line="1775"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_currency" value="164" c:type="GDK_KEY_currency">
      <source-position filename="gdk/gdkkeysyms.h" line="481"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cursor" value="2815" c:type="GDK_KEY_cursor">
      <source-position filename="gdk/gdkkeysyms.h" line="1251"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_d" value="100" c:type="GDK_KEY_d">
      <source-position filename="gdk/gdkkeysyms.h" line="450"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dabovedot" value="16784907" c:type="GDK_KEY_dabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="697"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dagger" value="2801" c:type="GDK_KEY_dagger">
      <source-position filename="gdk/gdkkeysyms.h" line="1237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dcaron" value="495" c:type="GDK_KEY_dcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="624"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_A" value="65153" c:type="GDK_KEY_dead_A">
      <source-position filename="gdk/gdkkeysyms.h" line="293"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_E" value="65155" c:type="GDK_KEY_dead_E">
      <source-position filename="gdk/gdkkeysyms.h" line="295"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_I" value="65157" c:type="GDK_KEY_dead_I">
      <source-position filename="gdk/gdkkeysyms.h" line="297"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_O" value="65159" c:type="GDK_KEY_dead_O">
      <source-position filename="gdk/gdkkeysyms.h" line="299"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_U" value="65161" c:type="GDK_KEY_dead_U">
      <source-position filename="gdk/gdkkeysyms.h" line="301"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_a" value="65152" c:type="GDK_KEY_dead_a">
      <source-position filename="gdk/gdkkeysyms.h" line="292"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovecomma"
              value="65124"
              c:type="GDK_KEY_dead_abovecomma">
      <source-position filename="gdk/gdkkeysyms.h" line="278"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovedot"
              value="65110"
              c:type="GDK_KEY_dead_abovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="264"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovereversedcomma"
              value="65125"
              c:type="GDK_KEY_dead_abovereversedcomma">
      <source-position filename="gdk/gdkkeysyms.h" line="280"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovering"
              value="65112"
              c:type="GDK_KEY_dead_abovering">
      <source-position filename="gdk/gdkkeysyms.h" line="266"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_acute" value="65105" c:type="GDK_KEY_dead_acute">
      <source-position filename="gdk/gdkkeysyms.h" line="258"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowbreve"
              value="65131"
              c:type="GDK_KEY_dead_belowbreve">
      <source-position filename="gdk/gdkkeysyms.h" line="287"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowcircumflex"
              value="65129"
              c:type="GDK_KEY_dead_belowcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="285"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowcomma"
              value="65134"
              c:type="GDK_KEY_dead_belowcomma">
      <source-position filename="gdk/gdkkeysyms.h" line="290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowdiaeresis"
              value="65132"
              c:type="GDK_KEY_dead_belowdiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="288"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowdot"
              value="65120"
              c:type="GDK_KEY_dead_belowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="274"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowmacron"
              value="65128"
              c:type="GDK_KEY_dead_belowmacron">
      <source-position filename="gdk/gdkkeysyms.h" line="284"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowring"
              value="65127"
              c:type="GDK_KEY_dead_belowring">
      <source-position filename="gdk/gdkkeysyms.h" line="283"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowtilde"
              value="65130"
              c:type="GDK_KEY_dead_belowtilde">
      <source-position filename="gdk/gdkkeysyms.h" line="286"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_breve" value="65109" c:type="GDK_KEY_dead_breve">
      <source-position filename="gdk/gdkkeysyms.h" line="263"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_capital_schwa"
              value="65163"
              c:type="GDK_KEY_dead_capital_schwa">
      <source-position filename="gdk/gdkkeysyms.h" line="303"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_caron" value="65114" c:type="GDK_KEY_dead_caron">
      <source-position filename="gdk/gdkkeysyms.h" line="268"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_cedilla"
              value="65115"
              c:type="GDK_KEY_dead_cedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="269"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_circumflex"
              value="65106"
              c:type="GDK_KEY_dead_circumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="259"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_currency"
              value="65135"
              c:type="GDK_KEY_dead_currency">
      <source-position filename="gdk/gdkkeysyms.h" line="291"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_dasia" value="65125" c:type="GDK_KEY_dead_dasia">
      <source-position filename="gdk/gdkkeysyms.h" line="281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_diaeresis"
              value="65111"
              c:type="GDK_KEY_dead_diaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="265"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_doubleacute"
              value="65113"
              c:type="GDK_KEY_dead_doubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="267"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_doublegrave"
              value="65126"
              c:type="GDK_KEY_dead_doublegrave">
      <source-position filename="gdk/gdkkeysyms.h" line="282"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_e" value="65154" c:type="GDK_KEY_dead_e">
      <source-position filename="gdk/gdkkeysyms.h" line="294"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_grave" value="65104" c:type="GDK_KEY_dead_grave">
      <source-position filename="gdk/gdkkeysyms.h" line="257"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_hook" value="65121" c:type="GDK_KEY_dead_hook">
      <source-position filename="gdk/gdkkeysyms.h" line="275"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_horn" value="65122" c:type="GDK_KEY_dead_horn">
      <source-position filename="gdk/gdkkeysyms.h" line="276"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_i" value="65156" c:type="GDK_KEY_dead_i">
      <source-position filename="gdk/gdkkeysyms.h" line="296"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_invertedbreve"
              value="65133"
              c:type="GDK_KEY_dead_invertedbreve">
      <source-position filename="gdk/gdkkeysyms.h" line="289"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_iota" value="65117" c:type="GDK_KEY_dead_iota">
      <source-position filename="gdk/gdkkeysyms.h" line="271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_macron"
              value="65108"
              c:type="GDK_KEY_dead_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_o" value="65158" c:type="GDK_KEY_dead_o">
      <source-position filename="gdk/gdkkeysyms.h" line="298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_ogonek"
              value="65116"
              c:type="GDK_KEY_dead_ogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="270"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_perispomeni"
              value="65107"
              c:type="GDK_KEY_dead_perispomeni">
      <source-position filename="gdk/gdkkeysyms.h" line="261"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_psili" value="65124" c:type="GDK_KEY_dead_psili">
      <source-position filename="gdk/gdkkeysyms.h" line="279"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_semivoiced_sound"
              value="65119"
              c:type="GDK_KEY_dead_semivoiced_sound">
      <source-position filename="gdk/gdkkeysyms.h" line="273"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_small_schwa"
              value="65162"
              c:type="GDK_KEY_dead_small_schwa">
      <source-position filename="gdk/gdkkeysyms.h" line="302"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_stroke"
              value="65123"
              c:type="GDK_KEY_dead_stroke">
      <source-position filename="gdk/gdkkeysyms.h" line="277"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_tilde" value="65107" c:type="GDK_KEY_dead_tilde">
      <source-position filename="gdk/gdkkeysyms.h" line="260"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_u" value="65160" c:type="GDK_KEY_dead_u">
      <source-position filename="gdk/gdkkeysyms.h" line="300"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_voiced_sound"
              value="65118"
              c:type="GDK_KEY_dead_voiced_sound">
      <source-position filename="gdk/gdkkeysyms.h" line="272"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_decimalpoint"
              value="2749"
              c:type="GDK_KEY_decimalpoint">
      <source-position filename="gdk/gdkkeysyms.h" line="1193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_degree" value="176" c:type="GDK_KEY_degree">
      <source-position filename="gdk/gdkkeysyms.h" line="493"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_diaeresis" value="168" c:type="GDK_KEY_diaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="485"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_diamond" value="2797" c:type="GDK_KEY_diamond">
      <source-position filename="gdk/gdkkeysyms.h" line="1234"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_digitspace" value="2725" c:type="GDK_KEY_digitspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dintegral" value="16785964" c:type="GDK_KEY_dintegral">
      <source-position filename="gdk/gdkkeysyms.h" line="1777"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_division" value="247" c:type="GDK_KEY_division">
      <source-position filename="gdk/gdkkeysyms.h" line="567"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dollar" value="36" c:type="GDK_KEY_dollar">
      <source-position filename="gdk/gdkkeysyms.h" line="384"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubbaselinedot"
              value="2735"
              c:type="GDK_KEY_doubbaselinedot">
      <source-position filename="gdk/gdkkeysyms.h" line="1181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubleacute" value="445" c:type="GDK_KEY_doubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="598"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubledagger"
              value="2802"
              c:type="GDK_KEY_doubledagger">
      <source-position filename="gdk/gdkkeysyms.h" line="1238"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doublelowquotemark"
              value="2814"
              c:type="GDK_KEY_doublelowquotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1250"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downarrow" value="2302" c:type="GDK_KEY_downarrow">
      <source-position filename="gdk/gdkkeysyms.h" line="1144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downcaret" value="2984" c:type="GDK_KEY_downcaret">
      <source-position filename="gdk/gdkkeysyms.h" line="1254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downshoe" value="3030" c:type="GDK_KEY_downshoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1266"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downstile" value="3012" c:type="GDK_KEY_downstile">
      <source-position filename="gdk/gdkkeysyms.h" line="1259"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downtack" value="3010" c:type="GDK_KEY_downtack">
      <source-position filename="gdk/gdkkeysyms.h" line="1257"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dstroke" value="496" c:type="GDK_KEY_dstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="625"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_e" value="101" c:type="GDK_KEY_e">
      <source-position filename="gdk/gdkkeysyms.h" line="451"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eabovedot" value="1004" c:type="GDK_KEY_eabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="684"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eacute" value="233" c:type="GDK_KEY_eacute">
      <source-position filename="gdk/gdkkeysyms.h" line="553"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ebelowdot" value="16785081" c:type="GDK_KEY_ebelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1672"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecaron" value="492" c:type="GDK_KEY_ecaron">
      <source-position filename="gdk/gdkkeysyms.h" line="623"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflex" value="234" c:type="GDK_KEY_ecircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="554"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexacute"
              value="16785087"
              c:type="GDK_KEY_ecircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1678"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexbelowdot"
              value="16785095"
              c:type="GDK_KEY_ecircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1686"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexgrave"
              value="16785089"
              c:type="GDK_KEY_ecircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1680"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexhook"
              value="16785091"
              c:type="GDK_KEY_ecircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1682"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflextilde"
              value="16785093"
              c:type="GDK_KEY_ecircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1684"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ediaeresis" value="235" c:type="GDK_KEY_ediaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="555"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_egrave" value="232" c:type="GDK_KEY_egrave">
      <source-position filename="gdk/gdkkeysyms.h" line="552"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ehook" value="16785083" c:type="GDK_KEY_ehook">
      <source-position filename="gdk/gdkkeysyms.h" line="1674"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eightsubscript"
              value="16785544"
              c:type="GDK_KEY_eightsubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1767"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eightsuperior"
              value="16785528"
              c:type="GDK_KEY_eightsuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1757"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_elementof" value="16785928" c:type="GDK_KEY_elementof">
      <source-position filename="gdk/gdkkeysyms.h" line="1771"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ellipsis" value="2734" c:type="GDK_KEY_ellipsis">
      <source-position filename="gdk/gdkkeysyms.h" line="1180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_em3space" value="2723" c:type="GDK_KEY_em3space">
      <source-position filename="gdk/gdkkeysyms.h" line="1171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_em4space" value="2724" c:type="GDK_KEY_em4space">
      <source-position filename="gdk/gdkkeysyms.h" line="1172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emacron" value="954" c:type="GDK_KEY_emacron">
      <source-position filename="gdk/gdkkeysyms.h" line="667"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emdash" value="2729" c:type="GDK_KEY_emdash">
      <source-position filename="gdk/gdkkeysyms.h" line="1177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emfilledcircle"
              value="2782"
              c:type="GDK_KEY_emfilledcircle">
      <source-position filename="gdk/gdkkeysyms.h" line="1219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emfilledrect"
              value="2783"
              c:type="GDK_KEY_emfilledrect">
      <source-position filename="gdk/gdkkeysyms.h" line="1220"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emopencircle"
              value="2766"
              c:type="GDK_KEY_emopencircle">
      <source-position filename="gdk/gdkkeysyms.h" line="1205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emopenrectangle"
              value="2767"
              c:type="GDK_KEY_emopenrectangle">
      <source-position filename="gdk/gdkkeysyms.h" line="1206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emptyset" value="16785925" c:type="GDK_KEY_emptyset">
      <source-position filename="gdk/gdkkeysyms.h" line="1770"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emspace" value="2721" c:type="GDK_KEY_emspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_endash" value="2730" c:type="GDK_KEY_endash">
      <source-position filename="gdk/gdkkeysyms.h" line="1178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enfilledcircbullet"
              value="2790"
              c:type="GDK_KEY_enfilledcircbullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1227"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enfilledsqbullet"
              value="2791"
              c:type="GDK_KEY_enfilledsqbullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1228"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eng" value="959" c:type="GDK_KEY_eng">
      <source-position filename="gdk/gdkkeysyms.h" line="671"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enopencircbullet"
              value="2784"
              c:type="GDK_KEY_enopencircbullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enopensquarebullet"
              value="2785"
              c:type="GDK_KEY_enopensquarebullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1222"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enspace" value="2722" c:type="GDK_KEY_enspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eogonek" value="490" c:type="GDK_KEY_eogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="622"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_equal" value="61" c:type="GDK_KEY_equal">
      <source-position filename="gdk/gdkkeysyms.h" line="410"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eth" value="240" c:type="GDK_KEY_eth">
      <source-position filename="gdk/gdkkeysyms.h" line="560"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_etilde" value="16785085" c:type="GDK_KEY_etilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1676"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_exclam" value="33" c:type="GDK_KEY_exclam">
      <source-position filename="gdk/gdkkeysyms.h" line="381"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_exclamdown" value="161" c:type="GDK_KEY_exclamdown">
      <source-position filename="gdk/gdkkeysyms.h" line="478"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_f" value="102" c:type="GDK_KEY_f">
      <source-position filename="gdk/gdkkeysyms.h" line="452"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fabovedot" value="16784927" c:type="GDK_KEY_fabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="700"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_femalesymbol"
              value="2808"
              c:type="GDK_KEY_femalesymbol">
      <source-position filename="gdk/gdkkeysyms.h" line="1244"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ff" value="2531" c:type="GDK_KEY_ff">
      <source-position filename="gdk/gdkkeysyms.h" line="1149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_figdash" value="2747" c:type="GDK_KEY_figdash">
      <source-position filename="gdk/gdkkeysyms.h" line="1191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledlefttribullet"
              value="2780"
              c:type="GDK_KEY_filledlefttribullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledrectbullet"
              value="2779"
              c:type="GDK_KEY_filledrectbullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledrighttribullet"
              value="2781"
              c:type="GDK_KEY_filledrighttribullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledtribulletdown"
              value="2793"
              c:type="GDK_KEY_filledtribulletdown">
      <source-position filename="gdk/gdkkeysyms.h" line="1230"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledtribulletup"
              value="2792"
              c:type="GDK_KEY_filledtribulletup">
      <source-position filename="gdk/gdkkeysyms.h" line="1229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fiveeighths" value="2757" c:type="GDK_KEY_fiveeighths">
      <source-position filename="gdk/gdkkeysyms.h" line="1198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesixths" value="2743" c:type="GDK_KEY_fivesixths">
      <source-position filename="gdk/gdkkeysyms.h" line="1189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesubscript"
              value="16785541"
              c:type="GDK_KEY_fivesubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1764"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesuperior"
              value="16785525"
              c:type="GDK_KEY_fivesuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1754"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fourfifths" value="2741" c:type="GDK_KEY_fourfifths">
      <source-position filename="gdk/gdkkeysyms.h" line="1187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_foursubscript"
              value="16785540"
              c:type="GDK_KEY_foursubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1763"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_foursuperior"
              value="16785524"
              c:type="GDK_KEY_foursuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1753"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fourthroot"
              value="16785948"
              c:type="GDK_KEY_fourthroot">
      <source-position filename="gdk/gdkkeysyms.h" line="1776"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_function" value="2294" c:type="GDK_KEY_function">
      <source-position filename="gdk/gdkkeysyms.h" line="1140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_g" value="103" c:type="GDK_KEY_g">
      <source-position filename="gdk/gdkkeysyms.h" line="453"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gabovedot" value="757" c:type="GDK_KEY_gabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="652"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gbreve" value="699" c:type="GDK_KEY_gbreve">
      <source-position filename="gdk/gdkkeysyms.h" line="642"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcaron" value="16777703" c:type="GDK_KEY_gcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="1640"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcedilla" value="955" c:type="GDK_KEY_gcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="668"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcircumflex" value="760" c:type="GDK_KEY_gcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="653"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_grave" value="96" c:type="GDK_KEY_grave">
      <source-position filename="gdk/gdkkeysyms.h" line="445"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_greater" value="62" c:type="GDK_KEY_greater">
      <source-position filename="gdk/gdkkeysyms.h" line="411"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_greaterthanequal"
              value="2238"
              c:type="GDK_KEY_greaterthanequal">
      <source-position filename="gdk/gdkkeysyms.h" line="1121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_guillemotleft"
              value="171"
              c:type="GDK_KEY_guillemotleft">
      <source-position filename="gdk/gdkkeysyms.h" line="488"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_guillemotright"
              value="187"
              c:type="GDK_KEY_guillemotright">
      <source-position filename="gdk/gdkkeysyms.h" line="504"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_h" value="104" c:type="GDK_KEY_h">
      <source-position filename="gdk/gdkkeysyms.h" line="454"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hairspace" value="2728" c:type="GDK_KEY_hairspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hcircumflex" value="694" c:type="GDK_KEY_hcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="640"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_heart" value="2798" c:type="GDK_KEY_heart">
      <source-position filename="gdk/gdkkeysyms.h" line="1235"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_aleph"
              value="3296"
              c:type="GDK_KEY_hebrew_aleph">
      <source-position filename="gdk/gdkkeysyms.h" line="1272"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_ayin" value="3314" c:type="GDK_KEY_hebrew_ayin">
      <source-position filename="gdk/gdkkeysyms.h" line="1297"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_bet" value="3297" c:type="GDK_KEY_hebrew_bet">
      <source-position filename="gdk/gdkkeysyms.h" line="1273"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_beth" value="3297" c:type="GDK_KEY_hebrew_beth">
      <source-position filename="gdk/gdkkeysyms.h" line="1274"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_chet" value="3303" c:type="GDK_KEY_hebrew_chet">
      <source-position filename="gdk/gdkkeysyms.h" line="1283"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_dalet"
              value="3299"
              c:type="GDK_KEY_hebrew_dalet">
      <source-position filename="gdk/gdkkeysyms.h" line="1277"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_daleth"
              value="3299"
              c:type="GDK_KEY_hebrew_daleth">
      <source-position filename="gdk/gdkkeysyms.h" line="1278"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_doublelowline"
              value="3295"
              c:type="GDK_KEY_hebrew_doublelowline">
      <source-position filename="gdk/gdkkeysyms.h" line="1271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalkaph"
              value="3306"
              c:type="GDK_KEY_hebrew_finalkaph">
      <source-position filename="gdk/gdkkeysyms.h" line="1288"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalmem"
              value="3309"
              c:type="GDK_KEY_hebrew_finalmem">
      <source-position filename="gdk/gdkkeysyms.h" line="1291"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalnun"
              value="3311"
              c:type="GDK_KEY_hebrew_finalnun">
      <source-position filename="gdk/gdkkeysyms.h" line="1293"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalpe"
              value="3315"
              c:type="GDK_KEY_hebrew_finalpe">
      <source-position filename="gdk/gdkkeysyms.h" line="1298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalzade"
              value="3317"
              c:type="GDK_KEY_hebrew_finalzade">
      <source-position filename="gdk/gdkkeysyms.h" line="1300"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalzadi"
              value="3317"
              c:type="GDK_KEY_hebrew_finalzadi">
      <source-position filename="gdk/gdkkeysyms.h" line="1301"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_gimel"
              value="3298"
              c:type="GDK_KEY_hebrew_gimel">
      <source-position filename="gdk/gdkkeysyms.h" line="1275"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_gimmel"
              value="3298"
              c:type="GDK_KEY_hebrew_gimmel">
      <source-position filename="gdk/gdkkeysyms.h" line="1276"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_he" value="3300" c:type="GDK_KEY_hebrew_he">
      <source-position filename="gdk/gdkkeysyms.h" line="1279"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_het" value="3303" c:type="GDK_KEY_hebrew_het">
      <source-position filename="gdk/gdkkeysyms.h" line="1284"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_kaph" value="3307" c:type="GDK_KEY_hebrew_kaph">
      <source-position filename="gdk/gdkkeysyms.h" line="1289"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_kuf" value="3319" c:type="GDK_KEY_hebrew_kuf">
      <source-position filename="gdk/gdkkeysyms.h" line="1305"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_lamed"
              value="3308"
              c:type="GDK_KEY_hebrew_lamed">
      <source-position filename="gdk/gdkkeysyms.h" line="1290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_mem" value="3310" c:type="GDK_KEY_hebrew_mem">
      <source-position filename="gdk/gdkkeysyms.h" line="1292"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_nun" value="3312" c:type="GDK_KEY_hebrew_nun">
      <source-position filename="gdk/gdkkeysyms.h" line="1294"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_pe" value="3316" c:type="GDK_KEY_hebrew_pe">
      <source-position filename="gdk/gdkkeysyms.h" line="1299"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_qoph" value="3319" c:type="GDK_KEY_hebrew_qoph">
      <source-position filename="gdk/gdkkeysyms.h" line="1304"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_resh" value="3320" c:type="GDK_KEY_hebrew_resh">
      <source-position filename="gdk/gdkkeysyms.h" line="1306"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_samech"
              value="3313"
              c:type="GDK_KEY_hebrew_samech">
      <source-position filename="gdk/gdkkeysyms.h" line="1295"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_samekh"
              value="3313"
              c:type="GDK_KEY_hebrew_samekh">
      <source-position filename="gdk/gdkkeysyms.h" line="1296"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_shin" value="3321" c:type="GDK_KEY_hebrew_shin">
      <source-position filename="gdk/gdkkeysyms.h" line="1307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_taf" value="3322" c:type="GDK_KEY_hebrew_taf">
      <source-position filename="gdk/gdkkeysyms.h" line="1309"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_taw" value="3322" c:type="GDK_KEY_hebrew_taw">
      <source-position filename="gdk/gdkkeysyms.h" line="1308"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_tet" value="3304" c:type="GDK_KEY_hebrew_tet">
      <source-position filename="gdk/gdkkeysyms.h" line="1285"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_teth" value="3304" c:type="GDK_KEY_hebrew_teth">
      <source-position filename="gdk/gdkkeysyms.h" line="1286"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_waw" value="3301" c:type="GDK_KEY_hebrew_waw">
      <source-position filename="gdk/gdkkeysyms.h" line="1280"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_yod" value="3305" c:type="GDK_KEY_hebrew_yod">
      <source-position filename="gdk/gdkkeysyms.h" line="1287"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zade" value="3318" c:type="GDK_KEY_hebrew_zade">
      <source-position filename="gdk/gdkkeysyms.h" line="1302"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zadi" value="3318" c:type="GDK_KEY_hebrew_zadi">
      <source-position filename="gdk/gdkkeysyms.h" line="1303"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zain" value="3302" c:type="GDK_KEY_hebrew_zain">
      <source-position filename="gdk/gdkkeysyms.h" line="1281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zayin"
              value="3302"
              c:type="GDK_KEY_hebrew_zayin">
      <source-position filename="gdk/gdkkeysyms.h" line="1282"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hexagram" value="2778" c:type="GDK_KEY_hexagram">
      <source-position filename="gdk/gdkkeysyms.h" line="1215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizconnector"
              value="2211"
              c:type="GDK_KEY_horizconnector">
      <source-position filename="gdk/gdkkeysyms.h" line="1098"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan1"
              value="2543"
              c:type="GDK_KEY_horizlinescan1">
      <source-position filename="gdk/gdkkeysyms.h" line="1159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan3"
              value="2544"
              c:type="GDK_KEY_horizlinescan3">
      <source-position filename="gdk/gdkkeysyms.h" line="1160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan5"
              value="2545"
              c:type="GDK_KEY_horizlinescan5">
      <source-position filename="gdk/gdkkeysyms.h" line="1161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan7"
              value="2546"
              c:type="GDK_KEY_horizlinescan7">
      <source-position filename="gdk/gdkkeysyms.h" line="1162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan9"
              value="2547"
              c:type="GDK_KEY_horizlinescan9">
      <source-position filename="gdk/gdkkeysyms.h" line="1163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hstroke" value="689" c:type="GDK_KEY_hstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="639"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ht" value="2530" c:type="GDK_KEY_ht">
      <source-position filename="gdk/gdkkeysyms.h" line="1148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hyphen" value="173" c:type="GDK_KEY_hyphen">
      <source-position filename="gdk/gdkkeysyms.h" line="490"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_i" value="105" c:type="GDK_KEY_i">
      <source-position filename="gdk/gdkkeysyms.h" line="455"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iTouch" value="269025120" c:type="GDK_KEY_iTouch">
      <source-position filename="gdk/gdkkeysyms.h" line="2135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iacute" value="237" c:type="GDK_KEY_iacute">
      <source-position filename="gdk/gdkkeysyms.h" line="557"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ibelowdot" value="16785099" c:type="GDK_KEY_ibelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1690"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ibreve" value="16777517" c:type="GDK_KEY_ibreve">
      <source-position filename="gdk/gdkkeysyms.h" line="1638"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_icircumflex" value="238" c:type="GDK_KEY_icircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="558"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_identical" value="2255" c:type="GDK_KEY_identical">
      <source-position filename="gdk/gdkkeysyms.h" line="1131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_idiaeresis" value="239" c:type="GDK_KEY_idiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="559"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_idotless" value="697" c:type="GDK_KEY_idotless">
      <source-position filename="gdk/gdkkeysyms.h" line="641"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ifonlyif" value="2253" c:type="GDK_KEY_ifonlyif">
      <source-position filename="gdk/gdkkeysyms.h" line="1129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_igrave" value="236" c:type="GDK_KEY_igrave">
      <source-position filename="gdk/gdkkeysyms.h" line="556"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ihook" value="16785097" c:type="GDK_KEY_ihook">
      <source-position filename="gdk/gdkkeysyms.h" line="1688"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_imacron" value="1007" c:type="GDK_KEY_imacron">
      <source-position filename="gdk/gdkkeysyms.h" line="685"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_implies" value="2254" c:type="GDK_KEY_implies">
      <source-position filename="gdk/gdkkeysyms.h" line="1130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_includedin" value="2266" c:type="GDK_KEY_includedin">
      <source-position filename="gdk/gdkkeysyms.h" line="1133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_includes" value="2267" c:type="GDK_KEY_includes">
      <source-position filename="gdk/gdkkeysyms.h" line="1134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_infinity" value="2242" c:type="GDK_KEY_infinity">
      <source-position filename="gdk/gdkkeysyms.h" line="1125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_integral" value="2239" c:type="GDK_KEY_integral">
      <source-position filename="gdk/gdkkeysyms.h" line="1122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_intersection"
              value="2268"
              c:type="GDK_KEY_intersection">
      <source-position filename="gdk/gdkkeysyms.h" line="1135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iogonek" value="999" c:type="GDK_KEY_iogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="683"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_itilde" value="949" c:type="GDK_KEY_itilde">
      <source-position filename="gdk/gdkkeysyms.h" line="665"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_j" value="106" c:type="GDK_KEY_j">
      <source-position filename="gdk/gdkkeysyms.h" line="456"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_jcircumflex" value="700" c:type="GDK_KEY_jcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="643"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_jot" value="3018" c:type="GDK_KEY_jot">
      <source-position filename="gdk/gdkkeysyms.h" line="1261"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_k" value="107" c:type="GDK_KEY_k">
      <source-position filename="gdk/gdkkeysyms.h" line="457"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_A" value="1201" c:type="GDK_KEY_kana_A">
      <source-position filename="gdk/gdkkeysyms.h" line="740"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_CHI" value="1217" c:type="GDK_KEY_kana_CHI">
      <source-position filename="gdk/gdkkeysyms.h" line="756"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_E" value="1204" c:type="GDK_KEY_kana_E">
      <source-position filename="gdk/gdkkeysyms.h" line="743"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_FU" value="1228" c:type="GDK_KEY_kana_FU">
      <source-position filename="gdk/gdkkeysyms.h" line="769"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HA" value="1226" c:type="GDK_KEY_kana_HA">
      <source-position filename="gdk/gdkkeysyms.h" line="767"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HE" value="1229" c:type="GDK_KEY_kana_HE">
      <source-position filename="gdk/gdkkeysyms.h" line="771"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HI" value="1227" c:type="GDK_KEY_kana_HI">
      <source-position filename="gdk/gdkkeysyms.h" line="768"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HO" value="1230" c:type="GDK_KEY_kana_HO">
      <source-position filename="gdk/gdkkeysyms.h" line="772"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HU" value="1228" c:type="GDK_KEY_kana_HU">
      <source-position filename="gdk/gdkkeysyms.h" line="770"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_I" value="1202" c:type="GDK_KEY_kana_I">
      <source-position filename="gdk/gdkkeysyms.h" line="741"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KA" value="1206" c:type="GDK_KEY_kana_KA">
      <source-position filename="gdk/gdkkeysyms.h" line="745"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KE" value="1209" c:type="GDK_KEY_kana_KE">
      <source-position filename="gdk/gdkkeysyms.h" line="748"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KI" value="1207" c:type="GDK_KEY_kana_KI">
      <source-position filename="gdk/gdkkeysyms.h" line="746"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KO" value="1210" c:type="GDK_KEY_kana_KO">
      <source-position filename="gdk/gdkkeysyms.h" line="749"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KU" value="1208" c:type="GDK_KEY_kana_KU">
      <source-position filename="gdk/gdkkeysyms.h" line="747"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MA" value="1231" c:type="GDK_KEY_kana_MA">
      <source-position filename="gdk/gdkkeysyms.h" line="773"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_ME" value="1234" c:type="GDK_KEY_kana_ME">
      <source-position filename="gdk/gdkkeysyms.h" line="776"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MI" value="1232" c:type="GDK_KEY_kana_MI">
      <source-position filename="gdk/gdkkeysyms.h" line="774"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MO" value="1235" c:type="GDK_KEY_kana_MO">
      <source-position filename="gdk/gdkkeysyms.h" line="777"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MU" value="1233" c:type="GDK_KEY_kana_MU">
      <source-position filename="gdk/gdkkeysyms.h" line="775"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_N" value="1245" c:type="GDK_KEY_kana_N">
      <source-position filename="gdk/gdkkeysyms.h" line="787"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NA" value="1221" c:type="GDK_KEY_kana_NA">
      <source-position filename="gdk/gdkkeysyms.h" line="762"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NE" value="1224" c:type="GDK_KEY_kana_NE">
      <source-position filename="gdk/gdkkeysyms.h" line="765"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NI" value="1222" c:type="GDK_KEY_kana_NI">
      <source-position filename="gdk/gdkkeysyms.h" line="763"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NO" value="1225" c:type="GDK_KEY_kana_NO">
      <source-position filename="gdk/gdkkeysyms.h" line="766"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NU" value="1223" c:type="GDK_KEY_kana_NU">
      <source-position filename="gdk/gdkkeysyms.h" line="764"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_O" value="1205" c:type="GDK_KEY_kana_O">
      <source-position filename="gdk/gdkkeysyms.h" line="744"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RA" value="1239" c:type="GDK_KEY_kana_RA">
      <source-position filename="gdk/gdkkeysyms.h" line="781"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RE" value="1242" c:type="GDK_KEY_kana_RE">
      <source-position filename="gdk/gdkkeysyms.h" line="784"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RI" value="1240" c:type="GDK_KEY_kana_RI">
      <source-position filename="gdk/gdkkeysyms.h" line="782"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RO" value="1243" c:type="GDK_KEY_kana_RO">
      <source-position filename="gdk/gdkkeysyms.h" line="785"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RU" value="1241" c:type="GDK_KEY_kana_RU">
      <source-position filename="gdk/gdkkeysyms.h" line="783"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SA" value="1211" c:type="GDK_KEY_kana_SA">
      <source-position filename="gdk/gdkkeysyms.h" line="750"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SE" value="1214" c:type="GDK_KEY_kana_SE">
      <source-position filename="gdk/gdkkeysyms.h" line="753"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SHI" value="1212" c:type="GDK_KEY_kana_SHI">
      <source-position filename="gdk/gdkkeysyms.h" line="751"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SO" value="1215" c:type="GDK_KEY_kana_SO">
      <source-position filename="gdk/gdkkeysyms.h" line="754"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SU" value="1213" c:type="GDK_KEY_kana_SU">
      <source-position filename="gdk/gdkkeysyms.h" line="752"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TA" value="1216" c:type="GDK_KEY_kana_TA">
      <source-position filename="gdk/gdkkeysyms.h" line="755"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TE" value="1219" c:type="GDK_KEY_kana_TE">
      <source-position filename="gdk/gdkkeysyms.h" line="760"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TI" value="1217" c:type="GDK_KEY_kana_TI">
      <source-position filename="gdk/gdkkeysyms.h" line="757"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TO" value="1220" c:type="GDK_KEY_kana_TO">
      <source-position filename="gdk/gdkkeysyms.h" line="761"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TSU" value="1218" c:type="GDK_KEY_kana_TSU">
      <source-position filename="gdk/gdkkeysyms.h" line="758"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TU" value="1218" c:type="GDK_KEY_kana_TU">
      <source-position filename="gdk/gdkkeysyms.h" line="759"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_U" value="1203" c:type="GDK_KEY_kana_U">
      <source-position filename="gdk/gdkkeysyms.h" line="742"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_WA" value="1244" c:type="GDK_KEY_kana_WA">
      <source-position filename="gdk/gdkkeysyms.h" line="786"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_WO" value="1190" c:type="GDK_KEY_kana_WO">
      <source-position filename="gdk/gdkkeysyms.h" line="728"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YA" value="1236" c:type="GDK_KEY_kana_YA">
      <source-position filename="gdk/gdkkeysyms.h" line="778"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YO" value="1238" c:type="GDK_KEY_kana_YO">
      <source-position filename="gdk/gdkkeysyms.h" line="780"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YU" value="1237" c:type="GDK_KEY_kana_YU">
      <source-position filename="gdk/gdkkeysyms.h" line="779"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_a" value="1191" c:type="GDK_KEY_kana_a">
      <source-position filename="gdk/gdkkeysyms.h" line="729"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_closingbracket"
              value="1187"
              c:type="GDK_KEY_kana_closingbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="724"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_comma" value="1188" c:type="GDK_KEY_kana_comma">
      <source-position filename="gdk/gdkkeysyms.h" line="725"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_conjunctive"
              value="1189"
              c:type="GDK_KEY_kana_conjunctive">
      <source-position filename="gdk/gdkkeysyms.h" line="726"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_e" value="1194" c:type="GDK_KEY_kana_e">
      <source-position filename="gdk/gdkkeysyms.h" line="732"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_fullstop"
              value="1185"
              c:type="GDK_KEY_kana_fullstop">
      <source-position filename="gdk/gdkkeysyms.h" line="722"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_i" value="1192" c:type="GDK_KEY_kana_i">
      <source-position filename="gdk/gdkkeysyms.h" line="730"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_middledot"
              value="1189"
              c:type="GDK_KEY_kana_middledot">
      <source-position filename="gdk/gdkkeysyms.h" line="727"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_o" value="1195" c:type="GDK_KEY_kana_o">
      <source-position filename="gdk/gdkkeysyms.h" line="733"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_openingbracket"
              value="1186"
              c:type="GDK_KEY_kana_openingbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="723"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_switch"
              value="65406"
              c:type="GDK_KEY_kana_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="790"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_tsu" value="1199" c:type="GDK_KEY_kana_tsu">
      <source-position filename="gdk/gdkkeysyms.h" line="737"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_tu" value="1199" c:type="GDK_KEY_kana_tu">
      <source-position filename="gdk/gdkkeysyms.h" line="738"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_u" value="1193" c:type="GDK_KEY_kana_u">
      <source-position filename="gdk/gdkkeysyms.h" line="731"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_ya" value="1196" c:type="GDK_KEY_kana_ya">
      <source-position filename="gdk/gdkkeysyms.h" line="734"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_yo" value="1198" c:type="GDK_KEY_kana_yo">
      <source-position filename="gdk/gdkkeysyms.h" line="736"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_yu" value="1197" c:type="GDK_KEY_kana_yu">
      <source-position filename="gdk/gdkkeysyms.h" line="735"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kappa" value="930" c:type="GDK_KEY_kappa">
      <source-position filename="gdk/gdkkeysyms.h" line="657"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kcedilla" value="1011" c:type="GDK_KEY_kcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="688"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kra" value="930" c:type="GDK_KEY_kra">
      <source-position filename="gdk/gdkkeysyms.h" line="656"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_l" value="108" c:type="GDK_KEY_l">
      <source-position filename="gdk/gdkkeysyms.h" line="458"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lacute" value="485" c:type="GDK_KEY_lacute">
      <source-position filename="gdk/gdkkeysyms.h" line="619"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_latincross" value="2777" c:type="GDK_KEY_latincross">
      <source-position filename="gdk/gdkkeysyms.h" line="1214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lbelowdot" value="16784951" c:type="GDK_KEY_lbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1646"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lcaron" value="437" c:type="GDK_KEY_lcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="591"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lcedilla" value="950" c:type="GDK_KEY_lcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="666"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftanglebracket"
              value="2748"
              c:type="GDK_KEY_leftanglebracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftarrow" value="2299" c:type="GDK_KEY_leftarrow">
      <source-position filename="gdk/gdkkeysyms.h" line="1141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftcaret" value="2979" c:type="GDK_KEY_leftcaret">
      <source-position filename="gdk/gdkkeysyms.h" line="1252"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftdoublequotemark"
              value="2770"
              c:type="GDK_KEY_leftdoublequotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftmiddlecurlybrace"
              value="2223"
              c:type="GDK_KEY_leftmiddlecurlybrace">
      <source-position filename="gdk/gdkkeysyms.h" line="1110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftopentriangle"
              value="2764"
              c:type="GDK_KEY_leftopentriangle">
      <source-position filename="gdk/gdkkeysyms.h" line="1203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftpointer" value="2794" c:type="GDK_KEY_leftpointer">
      <source-position filename="gdk/gdkkeysyms.h" line="1231"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftradical" value="2209" c:type="GDK_KEY_leftradical">
      <source-position filename="gdk/gdkkeysyms.h" line="1096"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftshoe" value="3034" c:type="GDK_KEY_leftshoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1268"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftsinglequotemark"
              value="2768"
              c:type="GDK_KEY_leftsinglequotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftt" value="2548" c:type="GDK_KEY_leftt">
      <source-position filename="gdk/gdkkeysyms.h" line="1164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lefttack" value="3036" c:type="GDK_KEY_lefttack">
      <source-position filename="gdk/gdkkeysyms.h" line="1269"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_less" value="60" c:type="GDK_KEY_less">
      <source-position filename="gdk/gdkkeysyms.h" line="409"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lessthanequal"
              value="2236"
              c:type="GDK_KEY_lessthanequal">
      <source-position filename="gdk/gdkkeysyms.h" line="1119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lf" value="2533" c:type="GDK_KEY_lf">
      <source-position filename="gdk/gdkkeysyms.h" line="1151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_logicaland" value="2270" c:type="GDK_KEY_logicaland">
      <source-position filename="gdk/gdkkeysyms.h" line="1137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_logicalor" value="2271" c:type="GDK_KEY_logicalor">
      <source-position filename="gdk/gdkkeysyms.h" line="1138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lowleftcorner"
              value="2541"
              c:type="GDK_KEY_lowleftcorner">
      <source-position filename="gdk/gdkkeysyms.h" line="1157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lowrightcorner"
              value="2538"
              c:type="GDK_KEY_lowrightcorner">
      <source-position filename="gdk/gdkkeysyms.h" line="1154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lstroke" value="435" c:type="GDK_KEY_lstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="590"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_m" value="109" c:type="GDK_KEY_m">
      <source-position filename="gdk/gdkkeysyms.h" line="459"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_mabovedot" value="16784961" c:type="GDK_KEY_mabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="702"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_macron" value="175" c:type="GDK_KEY_macron">
      <source-position filename="gdk/gdkkeysyms.h" line="492"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_malesymbol" value="2807" c:type="GDK_KEY_malesymbol">
      <source-position filename="gdk/gdkkeysyms.h" line="1243"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_maltesecross"
              value="2800"
              c:type="GDK_KEY_maltesecross">
      <source-position filename="gdk/gdkkeysyms.h" line="1236"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_marker" value="2751" c:type="GDK_KEY_marker">
      <source-position filename="gdk/gdkkeysyms.h" line="1195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_masculine" value="186" c:type="GDK_KEY_masculine">
      <source-position filename="gdk/gdkkeysyms.h" line="503"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_minus" value="45" c:type="GDK_KEY_minus">
      <source-position filename="gdk/gdkkeysyms.h" line="394"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_minutes" value="2774" c:type="GDK_KEY_minutes">
      <source-position filename="gdk/gdkkeysyms.h" line="1212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_mu" value="181" c:type="GDK_KEY_mu">
      <source-position filename="gdk/gdkkeysyms.h" line="498"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_multiply" value="215" c:type="GDK_KEY_multiply">
      <source-position filename="gdk/gdkkeysyms.h" line="533"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_musicalflat" value="2806" c:type="GDK_KEY_musicalflat">
      <source-position filename="gdk/gdkkeysyms.h" line="1242"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_musicalsharp"
              value="2805"
              c:type="GDK_KEY_musicalsharp">
      <source-position filename="gdk/gdkkeysyms.h" line="1241"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_n" value="110" c:type="GDK_KEY_n">
      <source-position filename="gdk/gdkkeysyms.h" line="460"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nabla" value="2245" c:type="GDK_KEY_nabla">
      <source-position filename="gdk/gdkkeysyms.h" line="1126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nacute" value="497" c:type="GDK_KEY_nacute">
      <source-position filename="gdk/gdkkeysyms.h" line="626"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ncaron" value="498" c:type="GDK_KEY_ncaron">
      <source-position filename="gdk/gdkkeysyms.h" line="627"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ncedilla" value="1009" c:type="GDK_KEY_ncedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="686"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ninesubscript"
              value="16785545"
              c:type="GDK_KEY_ninesubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1768"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ninesuperior"
              value="16785529"
              c:type="GDK_KEY_ninesuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1758"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nl" value="2536" c:type="GDK_KEY_nl">
      <source-position filename="gdk/gdkkeysyms.h" line="1152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nobreakspace"
              value="160"
              c:type="GDK_KEY_nobreakspace">
      <source-position filename="gdk/gdkkeysyms.h" line="477"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notapproxeq"
              value="16785991"
              c:type="GDK_KEY_notapproxeq">
      <source-position filename="gdk/gdkkeysyms.h" line="1781"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notelementof"
              value="16785929"
              c:type="GDK_KEY_notelementof">
      <source-position filename="gdk/gdkkeysyms.h" line="1772"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notequal" value="2237" c:type="GDK_KEY_notequal">
      <source-position filename="gdk/gdkkeysyms.h" line="1120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notidentical"
              value="16786018"
              c:type="GDK_KEY_notidentical">
      <source-position filename="gdk/gdkkeysyms.h" line="1782"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notsign" value="172" c:type="GDK_KEY_notsign">
      <source-position filename="gdk/gdkkeysyms.h" line="489"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ntilde" value="241" c:type="GDK_KEY_ntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="561"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_numbersign" value="35" c:type="GDK_KEY_numbersign">
      <source-position filename="gdk/gdkkeysyms.h" line="383"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_numerosign" value="1712" c:type="GDK_KEY_numerosign">
      <source-position filename="gdk/gdkkeysyms.h" line="934"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_o" value="111" c:type="GDK_KEY_o">
      <source-position filename="gdk/gdkkeysyms.h" line="461"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oacute" value="243" c:type="GDK_KEY_oacute">
      <source-position filename="gdk/gdkkeysyms.h" line="563"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_obarred" value="16777845" c:type="GDK_KEY_obarred">
      <source-position filename="gdk/gdkkeysyms.h" line="1642"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_obelowdot" value="16785101" c:type="GDK_KEY_obelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1692"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocaron" value="16777682" c:type="GDK_KEY_ocaron">
      <source-position filename="gdk/gdkkeysyms.h" line="1641"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflex" value="244" c:type="GDK_KEY_ocircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="564"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexacute"
              value="16785105"
              c:type="GDK_KEY_ocircumflexacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1696"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexbelowdot"
              value="16785113"
              c:type="GDK_KEY_ocircumflexbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1704"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexgrave"
              value="16785107"
              c:type="GDK_KEY_ocircumflexgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1698"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexhook"
              value="16785109"
              c:type="GDK_KEY_ocircumflexhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1700"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflextilde"
              value="16785111"
              c:type="GDK_KEY_ocircumflextilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1702"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_odiaeresis" value="246" c:type="GDK_KEY_odiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="566"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_odoubleacute"
              value="501"
              c:type="GDK_KEY_odoubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="628"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oe" value="5053" c:type="GDK_KEY_oe">
      <source-position filename="gdk/gdkkeysyms.h" line="719"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ogonek" value="434" c:type="GDK_KEY_ogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="589"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ograve" value="242" c:type="GDK_KEY_ograve">
      <source-position filename="gdk/gdkkeysyms.h" line="562"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohook" value="16785103" c:type="GDK_KEY_ohook">
      <source-position filename="gdk/gdkkeysyms.h" line="1694"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorn" value="16777633" c:type="GDK_KEY_ohorn">
      <source-position filename="gdk/gdkkeysyms.h" line="1736"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornacute"
              value="16785115"
              c:type="GDK_KEY_ohornacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1706"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornbelowdot"
              value="16785123"
              c:type="GDK_KEY_ohornbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1714"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorngrave"
              value="16785117"
              c:type="GDK_KEY_ohorngrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1708"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornhook" value="16785119" c:type="GDK_KEY_ohornhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1710"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorntilde"
              value="16785121"
              c:type="GDK_KEY_ohorntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1712"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_omacron" value="1010" c:type="GDK_KEY_omacron">
      <source-position filename="gdk/gdkkeysyms.h" line="687"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oneeighth" value="2755" c:type="GDK_KEY_oneeighth">
      <source-position filename="gdk/gdkkeysyms.h" line="1196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onefifth" value="2738" c:type="GDK_KEY_onefifth">
      <source-position filename="gdk/gdkkeysyms.h" line="1184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onehalf" value="189" c:type="GDK_KEY_onehalf">
      <source-position filename="gdk/gdkkeysyms.h" line="506"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onequarter" value="188" c:type="GDK_KEY_onequarter">
      <source-position filename="gdk/gdkkeysyms.h" line="505"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesixth" value="2742" c:type="GDK_KEY_onesixth">
      <source-position filename="gdk/gdkkeysyms.h" line="1188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesubscript"
              value="16785537"
              c:type="GDK_KEY_onesubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1760"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesuperior" value="185" c:type="GDK_KEY_onesuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="502"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onethird" value="2736" c:type="GDK_KEY_onethird">
      <source-position filename="gdk/gdkkeysyms.h" line="1182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ooblique" value="248" c:type="GDK_KEY_ooblique">
      <source-position filename="gdk/gdkkeysyms.h" line="569"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_openrectbullet"
              value="2786"
              c:type="GDK_KEY_openrectbullet">
      <source-position filename="gdk/gdkkeysyms.h" line="1223"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_openstar" value="2789" c:type="GDK_KEY_openstar">
      <source-position filename="gdk/gdkkeysyms.h" line="1226"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_opentribulletdown"
              value="2788"
              c:type="GDK_KEY_opentribulletdown">
      <source-position filename="gdk/gdkkeysyms.h" line="1225"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_opentribulletup"
              value="2787"
              c:type="GDK_KEY_opentribulletup">
      <source-position filename="gdk/gdkkeysyms.h" line="1224"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ordfeminine" value="170" c:type="GDK_KEY_ordfeminine">
      <source-position filename="gdk/gdkkeysyms.h" line="487"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oslash" value="248" c:type="GDK_KEY_oslash">
      <source-position filename="gdk/gdkkeysyms.h" line="568"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_otilde" value="245" c:type="GDK_KEY_otilde">
      <source-position filename="gdk/gdkkeysyms.h" line="565"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_overbar" value="3008" c:type="GDK_KEY_overbar">
      <source-position filename="gdk/gdkkeysyms.h" line="1256"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_overline" value="1150" c:type="GDK_KEY_overline">
      <source-position filename="gdk/gdkkeysyms.h" line="721"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_p" value="112" c:type="GDK_KEY_p">
      <source-position filename="gdk/gdkkeysyms.h" line="462"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_pabovedot" value="16784983" c:type="GDK_KEY_pabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="705"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_paragraph" value="182" c:type="GDK_KEY_paragraph">
      <source-position filename="gdk/gdkkeysyms.h" line="499"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_parenleft" value="40" c:type="GDK_KEY_parenleft">
      <source-position filename="gdk/gdkkeysyms.h" line="389"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_parenright" value="41" c:type="GDK_KEY_parenright">
      <source-position filename="gdk/gdkkeysyms.h" line="390"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_partdifferential"
              value="16785922"
              c:type="GDK_KEY_partdifferential">
      <source-position filename="gdk/gdkkeysyms.h" line="1769"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_partialderivative"
              value="2287"
              c:type="GDK_KEY_partialderivative">
      <source-position filename="gdk/gdkkeysyms.h" line="1139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_percent" value="37" c:type="GDK_KEY_percent">
      <source-position filename="gdk/gdkkeysyms.h" line="385"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_period" value="46" c:type="GDK_KEY_period">
      <source-position filename="gdk/gdkkeysyms.h" line="395"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_periodcentered"
              value="183"
              c:type="GDK_KEY_periodcentered">
      <source-position filename="gdk/gdkkeysyms.h" line="500"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_phonographcopyright"
              value="2811"
              c:type="GDK_KEY_phonographcopyright">
      <source-position filename="gdk/gdkkeysyms.h" line="1247"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_plus" value="43" c:type="GDK_KEY_plus">
      <source-position filename="gdk/gdkkeysyms.h" line="392"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_plusminus" value="177" c:type="GDK_KEY_plusminus">
      <source-position filename="gdk/gdkkeysyms.h" line="494"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_prescription"
              value="2772"
              c:type="GDK_KEY_prescription">
      <source-position filename="gdk/gdkkeysyms.h" line="1211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_prolongedsound"
              value="1200"
              c:type="GDK_KEY_prolongedsound">
      <source-position filename="gdk/gdkkeysyms.h" line="739"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_punctspace" value="2726" c:type="GDK_KEY_punctspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_q" value="113" c:type="GDK_KEY_q">
      <source-position filename="gdk/gdkkeysyms.h" line="463"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quad" value="3020" c:type="GDK_KEY_quad">
      <source-position filename="gdk/gdkkeysyms.h" line="1262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_question" value="63" c:type="GDK_KEY_question">
      <source-position filename="gdk/gdkkeysyms.h" line="412"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_questiondown"
              value="191"
              c:type="GDK_KEY_questiondown">
      <source-position filename="gdk/gdkkeysyms.h" line="508"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quotedbl" value="34" c:type="GDK_KEY_quotedbl">
      <source-position filename="gdk/gdkkeysyms.h" line="382"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quoteleft" value="96" c:type="GDK_KEY_quoteleft">
      <source-position filename="gdk/gdkkeysyms.h" line="446"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quoteright" value="39" c:type="GDK_KEY_quoteright">
      <source-position filename="gdk/gdkkeysyms.h" line="388"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_r" value="114" c:type="GDK_KEY_r">
      <source-position filename="gdk/gdkkeysyms.h" line="464"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_racute" value="480" c:type="GDK_KEY_racute">
      <source-position filename="gdk/gdkkeysyms.h" line="617"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_radical" value="2262" c:type="GDK_KEY_radical">
      <source-position filename="gdk/gdkkeysyms.h" line="1132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rcaron" value="504" c:type="GDK_KEY_rcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="630"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rcedilla" value="947" c:type="GDK_KEY_rcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="664"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_registered" value="174" c:type="GDK_KEY_registered">
      <source-position filename="gdk/gdkkeysyms.h" line="491"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightanglebracket"
              value="2750"
              c:type="GDK_KEY_rightanglebracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightarrow" value="2301" c:type="GDK_KEY_rightarrow">
      <source-position filename="gdk/gdkkeysyms.h" line="1143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightcaret" value="2982" c:type="GDK_KEY_rightcaret">
      <source-position filename="gdk/gdkkeysyms.h" line="1253"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightdoublequotemark"
              value="2771"
              c:type="GDK_KEY_rightdoublequotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightmiddlecurlybrace"
              value="2224"
              c:type="GDK_KEY_rightmiddlecurlybrace">
      <source-position filename="gdk/gdkkeysyms.h" line="1111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightmiddlesummation"
              value="2231"
              c:type="GDK_KEY_rightmiddlesummation">
      <source-position filename="gdk/gdkkeysyms.h" line="1118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightopentriangle"
              value="2765"
              c:type="GDK_KEY_rightopentriangle">
      <source-position filename="gdk/gdkkeysyms.h" line="1204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightpointer"
              value="2795"
              c:type="GDK_KEY_rightpointer">
      <source-position filename="gdk/gdkkeysyms.h" line="1232"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightshoe" value="3032" c:type="GDK_KEY_rightshoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1267"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightsinglequotemark"
              value="2769"
              c:type="GDK_KEY_rightsinglequotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightt" value="2549" c:type="GDK_KEY_rightt">
      <source-position filename="gdk/gdkkeysyms.h" line="1165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_righttack" value="3068" c:type="GDK_KEY_righttack">
      <source-position filename="gdk/gdkkeysyms.h" line="1270"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_s" value="115" c:type="GDK_KEY_s">
      <source-position filename="gdk/gdkkeysyms.h" line="465"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sabovedot" value="16784993" c:type="GDK_KEY_sabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="711"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sacute" value="438" c:type="GDK_KEY_sacute">
      <source-position filename="gdk/gdkkeysyms.h" line="592"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scaron" value="441" c:type="GDK_KEY_scaron">
      <source-position filename="gdk/gdkkeysyms.h" line="594"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scedilla" value="442" c:type="GDK_KEY_scedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="595"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_schwa" value="16777817" c:type="GDK_KEY_schwa">
      <source-position filename="gdk/gdkkeysyms.h" line="1644"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scircumflex" value="766" c:type="GDK_KEY_scircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="655"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_script_switch"
              value="65406"
              c:type="GDK_KEY_script_switch">
      <source-position filename="gdk/gdkkeysyms.h" line="104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_seconds" value="2775" c:type="GDK_KEY_seconds">
      <source-position filename="gdk/gdkkeysyms.h" line="1213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_section" value="167" c:type="GDK_KEY_section">
      <source-position filename="gdk/gdkkeysyms.h" line="484"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_semicolon" value="59" c:type="GDK_KEY_semicolon">
      <source-position filename="gdk/gdkkeysyms.h" line="408"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_semivoicedsound"
              value="1247"
              c:type="GDK_KEY_semivoicedsound">
      <source-position filename="gdk/gdkkeysyms.h" line="789"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_seveneighths"
              value="2758"
              c:type="GDK_KEY_seveneighths">
      <source-position filename="gdk/gdkkeysyms.h" line="1199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sevensubscript"
              value="16785543"
              c:type="GDK_KEY_sevensubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1766"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sevensuperior"
              value="16785527"
              c:type="GDK_KEY_sevensuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1756"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_signaturemark"
              value="2762"
              c:type="GDK_KEY_signaturemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_signifblank" value="2732" c:type="GDK_KEY_signifblank">
      <source-position filename="gdk/gdkkeysyms.h" line="1179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_similarequal"
              value="2249"
              c:type="GDK_KEY_similarequal">
      <source-position filename="gdk/gdkkeysyms.h" line="1128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_singlelowquotemark"
              value="2813"
              c:type="GDK_KEY_singlelowquotemark">
      <source-position filename="gdk/gdkkeysyms.h" line="1249"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sixsubscript"
              value="16785542"
              c:type="GDK_KEY_sixsubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1765"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sixsuperior"
              value="16785526"
              c:type="GDK_KEY_sixsuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1755"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_slash" value="47" c:type="GDK_KEY_slash">
      <source-position filename="gdk/gdkkeysyms.h" line="396"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_soliddiamond"
              value="2528"
              c:type="GDK_KEY_soliddiamond">
      <source-position filename="gdk/gdkkeysyms.h" line="1146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_space" value="32" c:type="GDK_KEY_space">
      <source-position filename="gdk/gdkkeysyms.h" line="380"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_squareroot"
              value="16785946"
              c:type="GDK_KEY_squareroot">
      <source-position filename="gdk/gdkkeysyms.h" line="1774"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ssharp" value="223" c:type="GDK_KEY_ssharp">
      <source-position filename="gdk/gdkkeysyms.h" line="543"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sterling" value="163" c:type="GDK_KEY_sterling">
      <source-position filename="gdk/gdkkeysyms.h" line="480"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_stricteq" value="16786019" c:type="GDK_KEY_stricteq">
      <source-position filename="gdk/gdkkeysyms.h" line="1783"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_t" value="116" c:type="GDK_KEY_t">
      <source-position filename="gdk/gdkkeysyms.h" line="466"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tabovedot" value="16785003" c:type="GDK_KEY_tabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="716"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tcaron" value="443" c:type="GDK_KEY_tcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="596"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tcedilla" value="510" c:type="GDK_KEY_tcedilla">
      <source-position filename="gdk/gdkkeysyms.h" line="632"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_telephone" value="2809" c:type="GDK_KEY_telephone">
      <source-position filename="gdk/gdkkeysyms.h" line="1245"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_telephonerecorder"
              value="2810"
              c:type="GDK_KEY_telephonerecorder">
      <source-position filename="gdk/gdkkeysyms.h" line="1246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_therefore" value="2240" c:type="GDK_KEY_therefore">
      <source-position filename="gdk/gdkkeysyms.h" line="1123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_thinspace" value="2727" c:type="GDK_KEY_thinspace">
      <source-position filename="gdk/gdkkeysyms.h" line="1175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_thorn" value="254" c:type="GDK_KEY_thorn">
      <source-position filename="gdk/gdkkeysyms.h" line="575"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threeeighths"
              value="2756"
              c:type="GDK_KEY_threeeighths">
      <source-position filename="gdk/gdkkeysyms.h" line="1197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threefifths" value="2740" c:type="GDK_KEY_threefifths">
      <source-position filename="gdk/gdkkeysyms.h" line="1186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threequarters"
              value="190"
              c:type="GDK_KEY_threequarters">
      <source-position filename="gdk/gdkkeysyms.h" line="507"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threesubscript"
              value="16785539"
              c:type="GDK_KEY_threesubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1762"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threesuperior"
              value="179"
              c:type="GDK_KEY_threesuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="496"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tintegral" value="16785965" c:type="GDK_KEY_tintegral">
      <source-position filename="gdk/gdkkeysyms.h" line="1778"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topintegral" value="2212" c:type="GDK_KEY_topintegral">
      <source-position filename="gdk/gdkkeysyms.h" line="1099"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftparens"
              value="2219"
              c:type="GDK_KEY_topleftparens">
      <source-position filename="gdk/gdkkeysyms.h" line="1106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftradical"
              value="2210"
              c:type="GDK_KEY_topleftradical">
      <source-position filename="gdk/gdkkeysyms.h" line="1097"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftsqbracket"
              value="2215"
              c:type="GDK_KEY_topleftsqbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftsummation"
              value="2225"
              c:type="GDK_KEY_topleftsummation">
      <source-position filename="gdk/gdkkeysyms.h" line="1112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightparens"
              value="2221"
              c:type="GDK_KEY_toprightparens">
      <source-position filename="gdk/gdkkeysyms.h" line="1108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightsqbracket"
              value="2217"
              c:type="GDK_KEY_toprightsqbracket">
      <source-position filename="gdk/gdkkeysyms.h" line="1104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightsummation"
              value="2229"
              c:type="GDK_KEY_toprightsummation">
      <source-position filename="gdk/gdkkeysyms.h" line="1116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topt" value="2551" c:type="GDK_KEY_topt">
      <source-position filename="gdk/gdkkeysyms.h" line="1167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topvertsummationconnector"
              value="2227"
              c:type="GDK_KEY_topvertsummationconnector">
      <source-position filename="gdk/gdkkeysyms.h" line="1114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_trademark" value="2761" c:type="GDK_KEY_trademark">
      <source-position filename="gdk/gdkkeysyms.h" line="1200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_trademarkincircle"
              value="2763"
              c:type="GDK_KEY_trademarkincircle">
      <source-position filename="gdk/gdkkeysyms.h" line="1202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tslash" value="956" c:type="GDK_KEY_tslash">
      <source-position filename="gdk/gdkkeysyms.h" line="669"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twofifths" value="2739" c:type="GDK_KEY_twofifths">
      <source-position filename="gdk/gdkkeysyms.h" line="1185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twosubscript"
              value="16785538"
              c:type="GDK_KEY_twosubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1761"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twosuperior" value="178" c:type="GDK_KEY_twosuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="495"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twothirds" value="2737" c:type="GDK_KEY_twothirds">
      <source-position filename="gdk/gdkkeysyms.h" line="1183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_u" value="117" c:type="GDK_KEY_u">
      <source-position filename="gdk/gdkkeysyms.h" line="467"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uacute" value="250" c:type="GDK_KEY_uacute">
      <source-position filename="gdk/gdkkeysyms.h" line="571"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ubelowdot" value="16785125" c:type="GDK_KEY_ubelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1716"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ubreve" value="765" c:type="GDK_KEY_ubreve">
      <source-position filename="gdk/gdkkeysyms.h" line="654"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ucircumflex" value="251" c:type="GDK_KEY_ucircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="572"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_udiaeresis" value="252" c:type="GDK_KEY_udiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="573"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_udoubleacute"
              value="507"
              c:type="GDK_KEY_udoubleacute">
      <source-position filename="gdk/gdkkeysyms.h" line="629"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ugrave" value="249" c:type="GDK_KEY_ugrave">
      <source-position filename="gdk/gdkkeysyms.h" line="570"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhook" value="16785127" c:type="GDK_KEY_uhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1718"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorn" value="16777648" c:type="GDK_KEY_uhorn">
      <source-position filename="gdk/gdkkeysyms.h" line="1738"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornacute"
              value="16785129"
              c:type="GDK_KEY_uhornacute">
      <source-position filename="gdk/gdkkeysyms.h" line="1720"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornbelowdot"
              value="16785137"
              c:type="GDK_KEY_uhornbelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1728"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorngrave"
              value="16785131"
              c:type="GDK_KEY_uhorngrave">
      <source-position filename="gdk/gdkkeysyms.h" line="1722"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornhook" value="16785133" c:type="GDK_KEY_uhornhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1724"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorntilde"
              value="16785135"
              c:type="GDK_KEY_uhorntilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1726"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_umacron" value="1022" c:type="GDK_KEY_umacron">
      <source-position filename="gdk/gdkkeysyms.h" line="691"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_underbar" value="3014" c:type="GDK_KEY_underbar">
      <source-position filename="gdk/gdkkeysyms.h" line="1260"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_underscore" value="95" c:type="GDK_KEY_underscore">
      <source-position filename="gdk/gdkkeysyms.h" line="444"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_union" value="2269" c:type="GDK_KEY_union">
      <source-position filename="gdk/gdkkeysyms.h" line="1136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uogonek" value="1017" c:type="GDK_KEY_uogonek">
      <source-position filename="gdk/gdkkeysyms.h" line="689"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uparrow" value="2300" c:type="GDK_KEY_uparrow">
      <source-position filename="gdk/gdkkeysyms.h" line="1142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upcaret" value="2985" c:type="GDK_KEY_upcaret">
      <source-position filename="gdk/gdkkeysyms.h" line="1255"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upleftcorner"
              value="2540"
              c:type="GDK_KEY_upleftcorner">
      <source-position filename="gdk/gdkkeysyms.h" line="1156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uprightcorner"
              value="2539"
              c:type="GDK_KEY_uprightcorner">
      <source-position filename="gdk/gdkkeysyms.h" line="1155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upshoe" value="3011" c:type="GDK_KEY_upshoe">
      <source-position filename="gdk/gdkkeysyms.h" line="1258"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upstile" value="3027" c:type="GDK_KEY_upstile">
      <source-position filename="gdk/gdkkeysyms.h" line="1265"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uptack" value="3022" c:type="GDK_KEY_uptack">
      <source-position filename="gdk/gdkkeysyms.h" line="1263"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uring" value="505" c:type="GDK_KEY_uring">
      <source-position filename="gdk/gdkkeysyms.h" line="631"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_utilde" value="1021" c:type="GDK_KEY_utilde">
      <source-position filename="gdk/gdkkeysyms.h" line="690"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_v" value="118" c:type="GDK_KEY_v">
      <source-position filename="gdk/gdkkeysyms.h" line="468"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_variation" value="2241" c:type="GDK_KEY_variation">
      <source-position filename="gdk/gdkkeysyms.h" line="1124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vertbar" value="2552" c:type="GDK_KEY_vertbar">
      <source-position filename="gdk/gdkkeysyms.h" line="1168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vertconnector"
              value="2214"
              c:type="GDK_KEY_vertconnector">
      <source-position filename="gdk/gdkkeysyms.h" line="1101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_voicedsound" value="1246" c:type="GDK_KEY_voicedsound">
      <source-position filename="gdk/gdkkeysyms.h" line="788"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vt" value="2537" c:type="GDK_KEY_vt">
      <source-position filename="gdk/gdkkeysyms.h" line="1153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_w" value="119" c:type="GDK_KEY_w">
      <source-position filename="gdk/gdkkeysyms.h" line="469"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wacute" value="16785027" c:type="GDK_KEY_wacute">
      <source-position filename="gdk/gdkkeysyms.h" line="706"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wcircumflex"
              value="16777589"
              c:type="GDK_KEY_wcircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="715"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wdiaeresis"
              value="16785029"
              c:type="GDK_KEY_wdiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="710"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wgrave" value="16785025" c:type="GDK_KEY_wgrave">
      <source-position filename="gdk/gdkkeysyms.h" line="704"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_x" value="120" c:type="GDK_KEY_x">
      <source-position filename="gdk/gdkkeysyms.h" line="470"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_xabovedot" value="16785035" c:type="GDK_KEY_xabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="1637"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_y" value="121" c:type="GDK_KEY_y">
      <source-position filename="gdk/gdkkeysyms.h" line="471"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yacute" value="253" c:type="GDK_KEY_yacute">
      <source-position filename="gdk/gdkkeysyms.h" line="574"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ybelowdot" value="16785141" c:type="GDK_KEY_ybelowdot">
      <source-position filename="gdk/gdkkeysyms.h" line="1730"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ycircumflex"
              value="16777591"
              c:type="GDK_KEY_ycircumflex">
      <source-position filename="gdk/gdkkeysyms.h" line="717"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ydiaeresis" value="255" c:type="GDK_KEY_ydiaeresis">
      <source-position filename="gdk/gdkkeysyms.h" line="576"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yen" value="165" c:type="GDK_KEY_yen">
      <source-position filename="gdk/gdkkeysyms.h" line="482"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ygrave" value="16785139" c:type="GDK_KEY_ygrave">
      <source-position filename="gdk/gdkkeysyms.h" line="708"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yhook" value="16785143" c:type="GDK_KEY_yhook">
      <source-position filename="gdk/gdkkeysyms.h" line="1732"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ytilde" value="16785145" c:type="GDK_KEY_ytilde">
      <source-position filename="gdk/gdkkeysyms.h" line="1734"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_z" value="122" c:type="GDK_KEY_z">
      <source-position filename="gdk/gdkkeysyms.h" line="472"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zabovedot" value="447" c:type="GDK_KEY_zabovedot">
      <source-position filename="gdk/gdkkeysyms.h" line="600"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zacute" value="444" c:type="GDK_KEY_zacute">
      <source-position filename="gdk/gdkkeysyms.h" line="597"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zcaron" value="446" c:type="GDK_KEY_zcaron">
      <source-position filename="gdk/gdkkeysyms.h" line="599"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zerosubscript"
              value="16785536"
              c:type="GDK_KEY_zerosubscript">
      <source-position filename="gdk/gdkkeysyms.h" line="1759"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zerosuperior"
              value="16785520"
              c:type="GDK_KEY_zerosuperior">
      <source-position filename="gdk/gdkkeysyms.h" line="1752"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zstroke" value="16777654" c:type="GDK_KEY_zstroke">
      <source-position filename="gdk/gdkkeysyms.h" line="1639"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="KeyboardGrabInfo" c:type="GdkKeyboardGrabInfo">
      <source-position filename="gdk/gdkdisplay.h" line="54"/>
      <field name="window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="native_window" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="serial" writable="1">
        <type name="gulong" c:type="gulong"/>
      </field>
      <field name="owner_events" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <function name="libgtk_only"
                c:identifier="gdk_keyboard_grab_info_libgtk_only">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="1207">Determines information about the current keyboard grab.
This is not public API and must not be used by applications.</doc>
        <source-position filename="gdk/gdk.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1217">%TRUE if this application currently has the
 keyboard grabbed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="1209">the display for which to get the grab information</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="grab_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="1210">location to store current grab window</doc>
            <type name="Window" c:type="GdkWindow**"/>
          </parameter>
          <parameter name="owner_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkdisplay.c"
                 line="1211">location to store boolean indicating whether
  the @owner_events flag to gdk_keyboard_grab() was %TRUE.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="Keymap"
           c:symbol-prefix="keymap"
           c:type="GdkKeymap"
           parent="GObject.Object"
           glib:type-name="GdkKeymap"
           glib:get-type="gdk_keymap_get_type"
           glib:type-struct="KeymapClass">
      <source-position filename="gdk/gdkkeys.h" line="79"/>
      <function name="get_default"
                c:identifier="gdk_keymap_get_default"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkkeys.c"
             line="303">Returns the #GdkKeymap attached to the default display.</doc>
        <source-position filename="gdk/gdkkeys.h" line="84"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkkeys.c"
               line="305">the #GdkKeymap attached to the default display.</doc>
          <type name="Keymap" c:type="GdkKeymap*"/>
        </return-value>
      </function>
      <function name="get_for_display"
                c:identifier="gdk_keymap_get_for_display"
                version="2.2"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="288">Returns the #GdkKeymap attached to @display.</doc>
        <source-position filename="gdk/gdkkeys.h" line="86"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="291">the #GdkKeymap attached to @display.</doc>
          <type name="Keymap" c:type="GdkKeymap*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="290">the #GdkDisplay.</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="direction_changed">
        <source-position filename="gdk/gdkkeys.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="keys_changed">
        <source-position filename="gdk/gdkkeys.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="state_changed">
        <source-position filename="gdk/gdkkeys.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_virtual_modifiers"
              c:identifier="gdk_keymap_add_virtual_modifiers"
              version="2.20">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="1711">Adds virtual modifiers (i.e. Super, Hyper and Meta) which correspond
to the real modifiers (i.e Mod2, Mod3, ...) in @modifiers.
are set in @state to their non-virtual counterparts (i.e. Mod2,
Mod3,...) and set the corresponding bits in @state.

GDK already does this before delivering key events, but for
compatibility reasons, it only sets the first virtual modifier
it finds, whereas this function sets all matching virtual modifiers.

This function is useful when matching key events against
accelerators.</doc>
        <source-position filename="gdk/gdkkeys.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1713">a #GdkKeymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1714">pointer to the modifier mask to change</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_caps_lock_state"
              c:identifier="gdk_keymap_get_caps_lock_state"
              version="2.16">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="818">Returns whether the Caps Lock modifer is locked.</doc>
        <source-position filename="gdk/gdkkeys.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="824">%TRUE if Caps Lock is on</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="820">a #GdkKeymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_direction" c:identifier="gdk_keymap_get_direction">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="733">Returns the direction of effective layout of the keymap.

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="742">%PANGO_DIRECTION_LTR or %PANGO_DIRECTION_RTL
  if it can determine the direction. %PANGO_DIRECTION_NEUTRAL
  otherwise.</doc>
          <type name="Pango.Direction" c:type="PangoDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="735">a #GdkKeymap or %NULL to use the default keymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entries_for_keycode"
              c:identifier="gdk_keymap_get_entries_for_keycode">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="994">Returns the keyvals bound to @hardware_keycode.
The Nth #GdkKeymapKey in @keys is bound to the Nth
keyval in @keyvals. Free the returned arrays with g_free().
When a keycode is pressed by the user, the keyval from
this list of entries is selected by considering the effective
keyboard group and level. See gdk_keymap_translate_keyboard_state().

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="1012">%TRUE if there were any entries</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="996">a #GdkKeymap or %NULL to use the default keymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="hardware_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="997">a keycode</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keys"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="998">return location for array of #GdkKeymapKey, or %NULL</doc>
            <type name="KeymapKey" c:type="GdkKeymapKey**"/>
          </parameter>
          <parameter name="keyvals"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="999">return location for array of keyvals, or %NULL</doc>
            <type name="guint" c:type="guint**"/>
          </parameter>
          <parameter name="n_entries" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1000">length of @keys and @keyvals</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entries_for_keyval"
              c:identifier="gdk_keymap_get_entries_for_keyval">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="841">Obtains a list of keycode/group/level combinations that will
generate @keyval. Groups and levels are two kinds of keyboard mode;
in general, the level determines whether the top or bottom symbol
on a key is used, and the group determines whether the left or
right symbol is used. On US keyboards, the shift key changes the
keyboard level, and there are no groups. A group switch key might
convert a keyboard between Hebrew to English modes, for example.
#GdkEventKey contains a %group field that indicates the active
keyboard group. The level is computed from the modifier mask.
The returned array should be freed
with g_free().

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="863">%TRUE if keys were found and returned</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="843">a #GdkKeymap, or %NULL to use the default keymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="keyval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="844">a keyval, such as %GDK_a, %GDK_Up, %GDK_Return, etc.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keys"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="845">return location for an array of #GdkKeymapKey</doc>
            <type name="KeymapKey" c:type="GdkKeymapKey**"/>
          </parameter>
          <parameter name="n_keys"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="846">return location for number of elements in returned array</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="have_bidi_layouts"
              c:identifier="gdk_keymap_have_bidi_layouts"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="773">Determines if keyboard layouts for both right-to-left and left-to-right
languages are in use.

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="783">%TRUE if there are layouts in both directions, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="775">a #GdkKeymap or %NULL to use the default keymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lookup_key" c:identifier="gdk_keymap_lookup_key">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="1157">Looks up the keyval mapped to a keycode/group/level triplet.
If no keyval is bound to @key, returns 0. For normal user input,
you want to use gdk_keymap_translate_keyboard_state() instead of
this function, since the effective group/level may not be
the same as the current keyboard state.

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="1171">a keyval, or 0 if none was mapped to the given @key</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1159">a #GdkKeymap or %NULL to use the default keymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1160">a #GdkKeymapKey with keycode, group, and level initialized</doc>
            <type name="KeymapKey" c:type="const GdkKeymapKey*"/>
          </parameter>
        </parameters>
      </method>
      <method name="map_virtual_modifiers"
              c:identifier="gdk_keymap_map_virtual_modifiers"
              version="2.20">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="1796">Maps the virtual modifiers (i.e. Super, Hyper and Meta) which
are set in @state to their non-virtual counterparts (i.e. Mod2,
Mod3,...) and set the corresponding bits in @state.

This function is useful when matching key events against
accelerators.</doc>
        <source-position filename="gdk/gdkkeys.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="1808">%TRUE if no virtual modifiers were mapped to the
    same non-virtual modifier. Note that %FALSE is also returned
    if a virtual modifier is mapped to a non-virtual modifier that
    was already set in @state.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1798">a #GdkKeymap</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1799">pointer to the modifier state to map</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="translate_keyboard_state"
              c:identifier="gdk_keymap_translate_keyboard_state">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkkeys-x11.c"
             line="1434">Translates the contents of a #GdkEventKey into a keyval, effective
group, and level. Modifiers that affected the translation and
are thus unavailable for application use are returned in
@consumed_modifiers.  See &lt;xref linkend="key-group-explanation"/&gt; for an explanation of
groups and levels.  The @effective_group is the group that was
actually used for the translation; some keys such as Enter are not
affected by the active keyboard group. The @level is derived from
@state. For convenience, #GdkEventKey already contains the translated
keyval, so this function isn't as useful as you might think.

&lt;note&gt;&lt;para&gt;
@consumed_modifiers gives modifiers that should be masked out
from @state when comparing this key press to a hot key. For
instance, on a US keyboard, the &lt;literal&gt;plus&lt;/literal&gt;
symbol is shifted, so when comparing a key press to a
&lt;literal&gt;&amp;lt;Control&amp;gt;plus&lt;/literal&gt; accelerator &amp;lt;Shift&amp;gt; should
be masked out.
&lt;/para&gt;
&lt;informalexample&gt;&lt;programlisting&gt;
&amp;sol;* We want to ignore irrelevant modifiers like ScrollLock *&amp;sol;
&amp;num;define ALL_ACCELS_MASK (GDK_CONTROL_MASK | GDK_SHIFT_MASK | GDK_MOD1_MASK)
gdk_keymap_translate_keyboard_state (keymap, event-&gt;hardware_keycode,
                                     event-&gt;state, event-&gt;group,
                                     &amp;amp;keyval, NULL, NULL, &amp;amp;consumed);
if (keyval == GDK_PLUS &amp;&amp;
    (event-&gt;state &amp;amp; ~consumed &amp;amp; ALL_ACCELS_MASK) == GDK_CONTROL_MASK)
  &amp;sol;* Control was pressed *&amp;sol;
&lt;/programlisting&gt;&lt;/informalexample&gt;
&lt;para&gt;
An older interpretation @consumed_modifiers was that it contained
all modifiers that might affect the translation of the key;
this allowed accelerators to be stored with irrelevant consumed
modifiers, by doing:&lt;/para&gt;
&lt;informalexample&gt;&lt;programlisting&gt;
&amp;sol;* XXX Don't do this XXX *&amp;sol;
if (keyval == accel_keyval &amp;&amp;
    (event-&gt;state &amp;amp; ~consumed &amp;amp; ALL_ACCELS_MASK) == (accel_mods &amp;amp; ~consumed))
  &amp;sol;* Accelerator was pressed *&amp;sol;
&lt;/programlisting&gt;&lt;/informalexample&gt;
&lt;para&gt;
However, this did not work if multi-modifier combinations were
used in the keymap, since, for instance, &lt;literal&gt;&amp;lt;Control&amp;gt;&lt;/literal&gt;
would be masked out even if only &lt;literal&gt;&amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;&lt;/literal&gt;
was used in the keymap. To support this usage as well as well as
possible, all &lt;emphasis&gt;single modifier&lt;/emphasis&gt; combinations
that could affect the key for any combination of modifiers will
be returned in @consumed_modifiers; multi-modifier combinations
are returned only when actually found in @state. When you store
accelerators, you should always store them with consumed modifiers
removed. Store &lt;literal&gt;&amp;lt;Control&amp;gt;plus&lt;/literal&gt;,
not &lt;literal&gt;&amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;plus&lt;/literal&gt;,
&lt;/para&gt;&lt;/note&gt;

Note that passing %NULL for @keymap is deprecated and will stop
to work in GTK+ 3.0. Use gdk_keymap_get_for_display() instead.</doc>
        <source-position filename="gdk/gdkkeys.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkkeys-x11.c"
               line="1502">%TRUE if there was a keyval bound to the keycode/state/group</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1436">a #GdkKeymap, or %NULL to use the default</doc>
            <type name="Keymap" c:type="GdkKeymap*"/>
          </instance-parameter>
          <parameter name="hardware_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1437">a keycode</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1438">a modifier state</doc>
            <type name="ModifierType" c:type="GdkModifierType"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1439">active keyboard group</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="keyval"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1440">return location for keyval, or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="effective_group"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1441">return location for effective group, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="level"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1442">return location for level, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="consumed_modifiers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkkeys-x11.c"
                 line="1443">return location for modifiers that were used to
    determine the group or level, or %NULL</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="display">
        <type name="Display" c:type="GdkDisplay*"/>
      </field>
      <glib:signal name="direction-changed" when="last" version="2.0">
        <doc xml:space="preserve"
             filename="gdk/gdkkeys.c"
             line="49">The ::direction-changed signal gets emitted when the direction of
the keymap changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="keys-changed" when="last" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkkeys.c"
             line="67">The ::keys-changed signal is emitted when the mapping represented by
@keymap changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="state-changed" when="last" version="2.16">
        <doc xml:space="preserve"
             filename="gdk/gdkkeys.c"
             line="86">The ::state-changed signal is emitted when the state of the
keyboard changes, e.g when Caps Lock is turned on or off.
See gdk_keymap_get_caps_lock_state().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="KeymapClass"
            c:type="GdkKeymapClass"
            glib:is-gtype-struct-for="Keymap">
      <source-position filename="gdk/gdkkeys.h" line="79"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="direction_changed">
        <callback name="direction_changed">
          <source-position filename="gdk/gdkkeys.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="GdkKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="keys_changed">
        <callback name="keys_changed">
          <source-position filename="gdk/gdkkeys.h" line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="GdkKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="state_changed">
        <callback name="state_changed">
          <source-position filename="gdk/gdkkeys.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="GdkKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="KeymapKey" c:type="GdkKeymapKey">
      <source-position filename="gdk/gdkkeys.h" line="46"/>
      <field name="keycode" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="group" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="level" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <enumeration name="LineStyle" c:type="GdkLineStyle">
      <source-position filename="gdk/gdkgc.h" line="130"/>
      <member name="solid" value="0" c:identifier="GDK_LINE_SOLID">
      </member>
      <member name="on_off_dash" value="1" c:identifier="GDK_LINE_ON_OFF_DASH">
      </member>
      <member name="double_dash" value="2" c:identifier="GDK_LINE_DOUBLE_DASH">
      </member>
    </enumeration>
    <constant name="MAX_TIMECOORD_AXES"
              value="128"
              c:type="GDK_MAX_TIMECOORD_AXES">
      <source-position filename="gdk/gdkinput.h" line="118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <bitfield name="ModifierType" c:type="GdkModifierType">
      <source-position filename="gdk/gdktypes.h" line="153"/>
      <member name="shift_mask" value="1" c:identifier="GDK_SHIFT_MASK">
      </member>
      <member name="lock_mask" value="2" c:identifier="GDK_LOCK_MASK">
      </member>
      <member name="control_mask" value="4" c:identifier="GDK_CONTROL_MASK">
      </member>
      <member name="mod1_mask" value="8" c:identifier="GDK_MOD1_MASK">
      </member>
      <member name="mod2_mask" value="16" c:identifier="GDK_MOD2_MASK">
      </member>
      <member name="mod3_mask" value="32" c:identifier="GDK_MOD3_MASK">
      </member>
      <member name="mod4_mask" value="64" c:identifier="GDK_MOD4_MASK">
      </member>
      <member name="mod5_mask" value="128" c:identifier="GDK_MOD5_MASK">
      </member>
      <member name="button1_mask" value="256" c:identifier="GDK_BUTTON1_MASK">
      </member>
      <member name="button2_mask" value="512" c:identifier="GDK_BUTTON2_MASK">
      </member>
      <member name="button3_mask" value="1024" c:identifier="GDK_BUTTON3_MASK">
      </member>
      <member name="button4_mask" value="2048" c:identifier="GDK_BUTTON4_MASK">
      </member>
      <member name="button5_mask" value="4096" c:identifier="GDK_BUTTON5_MASK">
      </member>
      <member name="super_mask" value="67108864" c:identifier="GDK_SUPER_MASK">
      </member>
      <member name="hyper_mask"
              value="134217728"
              c:identifier="GDK_HYPER_MASK">
      </member>
      <member name="meta_mask" value="268435456" c:identifier="GDK_META_MASK">
      </member>
      <member name="release_mask"
              value="1073741824"
              c:identifier="GDK_RELEASE_MASK">
      </member>
      <member name="modifier_mask"
              value="1543512063"
              c:identifier="GDK_MODIFIER_MASK">
      </member>
    </bitfield>
    <constant name="NO_BG" value="2" c:type="GDK_NO_BG">
      <source-position filename="gdk/gdkprivate.h" line="35"/>
      <type name="Pixmap" c:type="GdkPixmap"/>
    </constant>
    <enumeration name="NotifyType" c:type="GdkNotifyType">
      <source-position filename="gdk/gdkevents.h" line="218"/>
      <member name="ancestor" value="0" c:identifier="GDK_NOTIFY_ANCESTOR">
      </member>
      <member name="virtual" value="1" c:identifier="GDK_NOTIFY_VIRTUAL">
      </member>
      <member name="inferior" value="2" c:identifier="GDK_NOTIFY_INFERIOR">
      </member>
      <member name="nonlinear" value="3" c:identifier="GDK_NOTIFY_NONLINEAR">
      </member>
      <member name="nonlinear_virtual"
              value="4"
              c:identifier="GDK_NOTIFY_NONLINEAR_VIRTUAL">
      </member>
      <member name="unknown" value="5" c:identifier="GDK_NOTIFY_UNKNOWN">
      </member>
    </enumeration>
    <enumeration name="OverlapType" c:type="GdkOverlapType">
      <source-position filename="gdk/gdkregion.h" line="60"/>
      <member name="in" value="0" c:identifier="GDK_OVERLAP_RECTANGLE_IN">
      </member>
      <member name="out" value="1" c:identifier="GDK_OVERLAP_RECTANGLE_OUT">
      </member>
      <member name="part" value="2" c:identifier="GDK_OVERLAP_RECTANGLE_PART">
      </member>
    </enumeration>
    <enumeration name="OwnerChange" c:type="GdkOwnerChange">
      <source-position filename="gdk/gdkevents.h" line="264"/>
      <member name="new_owner"
              value="0"
              c:identifier="GDK_OWNER_CHANGE_NEW_OWNER">
      </member>
      <member name="destroy" value="1" c:identifier="GDK_OWNER_CHANGE_DESTROY">
      </member>
      <member name="close" value="2" c:identifier="GDK_OWNER_CHANGE_CLOSE">
      </member>
    </enumeration>
    <function-macro name="PANGO_RENDERER"
                    c:identifier="GDK_PANGO_RENDERER"
                    introspectable="0">
      <source-position filename="gdk/gdkpango.h" line="38"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PANGO_RENDERER_CLASS"
                    c:identifier="GDK_PANGO_RENDERER_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpango.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PANGO_RENDERER_GET_CLASS"
                    c:identifier="GDK_PANGO_RENDERER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpango.h" line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PANGO_UNITS_OVERFLOWS"
                    c:identifier="GDK_PANGO_UNITS_OVERFLOWS"
                    introspectable="0">
      <source-position filename="gdk/gdkprivate.h" line="52"/>
      <parameters>
        <parameter name="x">
        </parameter>
        <parameter name="y">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PARENT_RELATIVE" value="1" c:type="GDK_PARENT_RELATIVE">
      <source-position filename="gdk/gdktypes.h" line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PARENT_RELATIVE_BG"
              value="1"
              c:type="GDK_PARENT_RELATIVE_BG">
      <source-position filename="gdk/gdkprivate.h" line="34"/>
      <type name="Pixmap" c:type="GdkPixmap"/>
    </constant>
    <function-macro name="PIXMAP" c:identifier="GDK_PIXMAP" introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="43"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PIXMAP_CLASS"
                    c:identifier="GDK_PIXMAP_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PIXMAP_GET_CLASS"
                    c:identifier="GDK_PIXMAP_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PIXMAP_OBJECT"
                    c:identifier="GDK_PIXMAP_OBJECT"
                    introspectable="0">
      <source-position filename="gdk/gdkpixmap.h" line="48"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="POINTER_TO_ATOM"
                    c:identifier="GDK_POINTER_TO_ATOM"
                    introspectable="0">
      <source-position filename="gdk/gdktypes.h" line="83"/>
      <parameters>
        <parameter name="ptr">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PRIORITY_REDRAW" value="20" c:type="GDK_PRIORITY_REDRAW">
      <source-position filename="gdk/gdkevents.h" line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="PangoAttrEmbossColor" c:type="GdkPangoAttrEmbossColor">
      <source-position filename="gdk/gdkpango.h" line="158"/>
      <field name="attr" writable="1">
        <type name="Pango.Attribute" c:type="PangoAttribute"/>
      </field>
      <field name="color" writable="1">
        <type name="Pango.Color" c:type="PangoColor"/>
      </field>
      <function name="new"
                c:identifier="gdk_pango_attr_emboss_color_new"
                version="2.12">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1221">Creates a new attribute specifying the color to emboss text with.</doc>
        <source-position filename="gdk/gdkpango.h" line="162"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1227">new #PangoAttribute</doc>
          <type name="Pango.Attribute" c:type="PangoAttribute*"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="1223">a GdkColor representing the color to emboss with</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="PangoAttrEmbossed" c:type="GdkPangoAttrEmbossed">
      <source-position filename="gdk/gdkpango.h" line="152"/>
      <field name="attr" writable="1">
        <type name="Pango.Attribute" c:type="PangoAttribute"/>
      </field>
      <field name="embossed" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <function name="new" c:identifier="gdk_pango_attr_embossed_new">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1158">Creates a new attribute flagging a region as embossed or not.</doc>
        <source-position filename="gdk/gdkpango.h" line="161"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1164">new #PangoAttribute</doc>
          <type name="Pango.Attribute" c:type="PangoAttribute*"/>
        </return-value>
        <parameters>
          <parameter name="embossed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="1160">if the region should be embossed</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="PangoAttrStipple" c:type="GdkPangoAttrStipple">
      <source-position filename="gdk/gdkpango.h" line="146"/>
      <field name="attr" writable="1">
        <type name="Pango.Attribute" c:type="PangoAttribute"/>
      </field>
      <field name="stipple" writable="1">
        <type name="Bitmap" c:type="GdkBitmap*"/>
      </field>
      <function name="new" c:identifier="gdk_pango_attr_stipple_new">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1095">Creates a new attribute containing a stipple bitmap to be used when
rendering the text.</doc>
        <source-position filename="gdk/gdkpango.h" line="160"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1102">new #PangoAttribute</doc>
          <type name="Pango.Attribute" c:type="PangoAttribute*"/>
        </return-value>
        <parameters>
          <parameter name="stipple" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="1097">a bitmap to be set as stipple</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="PangoRenderer"
           c:symbol-prefix="pango_renderer"
           c:type="GdkPangoRenderer"
           version="2.6"
           parent="Pango.Renderer"
           glib:type-name="GdkPangoRenderer"
           glib:get-type="gdk_pango_renderer_get_type"
           glib:type-struct="PangoRendererClass">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.h"
           line="44">#GdkPangoRenderer is a subclass of #PangoRenderer used for rendering
Pango objects into GDK drawables. The default renderer for a particular
screen is obtained with gdk_pango_renderer_get_default(); Pango
functions like pango_renderer_draw_layout() and
pango_renderer_draw_layout_line() are then used to draw objects with
the renderer.

In most simple cases, applications can just use gdk_draw_layout(), and
don't need to directly use #GdkPangoRenderer at all. Using the
#GdkPangoRenderer directly is most useful when working with a
transformation such as a rotation, because the Pango drawing functions
take user space coordinates (coordinates before the transformation)
instead of device coordinates.

In certain cases it can be useful to subclass #GdkPangoRenderer. Examples
of reasons to do this are to add handling of custom attributes by
overriding 'prepare_run' or to do custom drawing of embedded objects
by overriding 'draw_shape'.</doc>
      <source-position filename="gdk/gdkpango.h" line="87"/>
      <constructor name="new"
                   c:identifier="gdk_pango_renderer_new"
                   version="2.6">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="548">Creates a new #PangoRenderer for @screen. Normally you can use the
results of gdk_pango_renderer_get_default() rather than creating a new
renderer.</doc>
        <source-position filename="gdk/gdkpango.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="556">a newly created #PangoRenderer. Free with g_object_unref().</doc>
          <type name="Pango.Renderer" c:type="PangoRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="550">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_default"
                c:identifier="gdk_pango_renderer_get_default"
                version="2.6"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="582">Gets the default #PangoRenderer for a screen. This default renderer
is shared by all users of the display, so properties such as the color
or transformation matrix set for the renderer may be overwritten
by functions such as gdk_draw_layout().

Before using the renderer, you need to call gdk_pango_renderer_set_drawable()
and gdk_pango_renderer_set_gc() to set the drawable and graphics context
to use for drawing.</doc>
        <source-position filename="gdk/gdkpango.h" line="92"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="595">the default #PangoRenderer for @screen. The
 renderer is owned by GTK+ and will be kept around until the
 screen is closed.</doc>
          <type name="Pango.Renderer" c:type="PangoRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="584">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
        </parameters>
      </function>
      <method name="set_drawable"
              c:identifier="gdk_pango_renderer_set_drawable"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="623">Sets the drawable the renderer draws to.</doc>
        <source-position filename="gdk/gdkpango.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gdk_renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="625">a #GdkPangoRenderer</doc>
            <type name="PangoRenderer" c:type="GdkPangoRenderer*"/>
          </instance-parameter>
          <parameter name="drawable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="626">the new target drawable, or %NULL</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gc"
              c:identifier="gdk_pango_renderer_set_gc"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="653">Sets the GC the renderer draws with. Note that the GC must not be
modified until it is unset by calling the function again with
%NULL for the @gc parameter, since GDK may make internal copies
of the GC which won't be updated to follow changes to the
original GC.</doc>
        <source-position filename="gdk/gdkpango.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gdk_renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="655">a #GdkPangoRenderer</doc>
            <type name="PangoRenderer" c:type="GdkPangoRenderer*"/>
          </instance-parameter>
          <parameter name="gc"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="656">the new GC to use for drawing, or %NULL</doc>
            <type name="GC" c:type="GdkGC*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_override_color"
              c:identifier="gdk_pango_renderer_set_override_color"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="729">Sets the color for a particular render part (foreground,
background, underline, etc.), overriding any attributes on the layouts
renderered with this renderer.</doc>
        <source-position filename="gdk/gdkpango.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gdk_renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="731">a #GdkPangoRenderer</doc>
            <type name="PangoRenderer" c:type="GdkPangoRenderer*"/>
          </instance-parameter>
          <parameter name="part" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="732">the part to render to set the color of</doc>
            <type name="Pango.RenderPart" c:type="PangoRenderPart"/>
          </parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="733">the color to use, or %NULL to unset a previously
        set override color.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stipple"
              c:identifier="gdk_pango_renderer_set_stipple"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="690">Sets the stipple for one render part (foreground, background, underline,
etc.) Note that this is overwritten when iterating through the individual
styled runs of a #PangoLayout or #PangoLayoutLine. This function is thus
only useful when you call low level functions like pango_renderer_draw_glyphs()
directly, or in the 'prepare_run' virtual function of a subclass of
#GdkPangoRenderer.</doc>
        <source-position filename="gdk/gdkpango.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gdk_renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="692">a #GdkPangoRenderer</doc>
            <type name="PangoRenderer" c:type="GdkPangoRenderer*"/>
          </instance-parameter>
          <parameter name="part" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="693">the part to render with the stipple</doc>
            <type name="Pango.RenderPart" c:type="PangoRenderPart"/>
          </parameter>
          <parameter name="stipple" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpango.c"
                 line="694">the new stipple value.</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
        </parameters>
      </method>
      <property name="screen"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Screen"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Pango.Renderer" c:type="PangoRenderer"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PangoRendererPrivate" c:type="GdkPangoRendererPrivate*"/>
      </field>
    </class>
    <record name="PangoRendererClass"
            c:type="GdkPangoRendererClass"
            glib:is-gtype-struct-for="PangoRenderer"
            version="2.6">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.h"
           line="76">#GdkPangoRenderer is the class structure for #GdkPangoRenderer.</doc>
      <source-position filename="gdk/gdkpango.h" line="87"/>
      <field name="parent_class" readable="0" private="1">
        <type name="Pango.RendererClass" c:type="PangoRendererClass"/>
      </field>
    </record>
    <record name="PangoRendererPrivate"
            c:type="GdkPangoRendererPrivate"
            disguised="1">
      <source-position filename="gdk/gdkpango.h" line="35"/>
    </record>
    <class name="Pixmap"
           c:symbol-prefix="pixmap"
           c:type="GdkPixmap"
           parent="Drawable"
           glib:type-name="GdkPixmap"
           glib:get-type="gdk_pixmap_get_type">
      <constructor name="foreign_new" c:identifier="gdk_pixmap_foreign_new">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkpixmap-x11.c"
             line="402">Wraps a native window for the default display in a #GdkPixmap.
This may fail if the pixmap has been destroyed.

For example in the X backend, a native pixmap handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkpixmap-x11.c"
               line="412">the newly-created #GdkPixmap wrapper for the
   native pixmap or %NULL if the pixmap has been destroyed.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="anid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="404">a native pixmap handle.</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="foreign_new_for_display"
                   c:identifier="gdk_pixmap_foreign_new_for_display"
                   version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkpixmap-x11.c"
             line="294">Wraps a native pixmap in a #GdkPixmap.
This may fail if the pixmap has been destroyed.

For example in the X backend, a native pixmap handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkpixmap-x11.c"
               line="305">the newly-created #GdkPixmap wrapper for the
   native pixmap or %NULL if the pixmap has been destroyed.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="296">The #GdkDisplay where @anid is located.</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="anid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="297">a native pixmap handle.</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="foreign_new_for_screen"
                   c:identifier="gdk_pixmap_foreign_new_for_screen"
                   version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkpixmap-x11.c"
             line="340">Wraps a native pixmap in a #GdkPixmap.
This may fail if the pixmap has been destroyed.

For example in the X backend, a native pixmap handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.

This function is an alternative to gdk_pixmap_foreign_new_for_display()
for cases where the dimensions of the pixmap are known. For the X
backend, this avoids a roundtrip to the server.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="121"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkpixmap-x11.c"
               line="358">the newly-created #GdkPixmap wrapper for the
   native pixmap or %NULL if the pixmap has been destroyed.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="342">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </parameter>
          <parameter name="anid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="343">a native pixmap handle</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="344">the width of the pixmap identified by @anid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="345">the height of the pixmap identified by @anid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="346">the depth of the pixmap identified by @anid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="gdk_pixmap_new">
        <source-position filename="gdk/gdkpixmap.h" line="69"/>
        <return-value transfer-ownership="full">
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="colormap_create_from_xpm"
                c:identifier="gdk_pixmap_colormap_create_from_xpm"
                deprecated="1"
                deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkpixmap.c"
             line="675">Create a pixmap from a XPM file using a particular colormap.</doc>
        <doc-deprecated xml:space="preserve">Use a #GdkPixbuf instead. You can use
gdk_pixbuf_new_from_file() to create it.
If you must use a pixmap, use gdk_pixmap_new() to
create it and Cairo to draw the pixbuf onto it.</doc-deprecated>
        <source-position filename="gdk/gdkpixmap.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixmap.c"
               line="691">the #GdkPixmap.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="677">a #GdkDrawable, used to determine default values
for the new pixmap. Can be %NULL if @colormap is given.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="679">the #GdkColormap that the new pixmap will be use.
If omitted, the colormap for @window will be used.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="681">a pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be %NULL,
in which case transparency will be ignored.</doc>
            <type name="Bitmap" c:type="GdkBitmap**"/>
          </parameter>
          <parameter name="transparent_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="684">the color to be used for the pixels
that are transparent in the input file. Can be %NULL,
in which case a default color will be used.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="687">the filename of a file containing XPM data.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="colormap_create_from_xpm_d"
                c:identifier="gdk_pixmap_colormap_create_from_xpm_d"
                deprecated="1"
                deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkpixmap.c"
             line="757">Create a pixmap from data in XPM format using a particular
colormap.</doc>
        <doc-deprecated xml:space="preserve">Use a #GdkPixbuf instead. You can use
gdk_pixbuf_new_from_xpm_data() to create it.
If you must use a pixmap, use gdk_pixmap_new() to
create it and Cairo to draw the pixbuf onto it.</doc-deprecated>
        <source-position filename="gdk/gdkpixmap.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixmap.c"
               line="774">the #GdkPixmap.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="759">a #GdkDrawable, used to determine default values
    for the new pixmap. Can be %NULL if @colormap is given.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="761">the #GdkColormap that the new pixmap will be use.
    If omitted, the colormap for @window will be used.</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="763">a pointer to a place to store a bitmap representing
    the transparency mask of the XPM file. Can be %NULL,
    in which case transparency will be ignored.</doc>
            <type name="Bitmap" c:type="GdkBitmap**"/>
          </parameter>
          <parameter name="transparent_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="766">the color to be used for the pixels
    that are transparent in the input file. Can be %NULL,
    in which case a default color will be used.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="769">Pointer to a string containing the XPM data.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_data"
                c:identifier="gdk_pixmap_create_from_data"
                introspectable="0">
        <source-position filename="gdk/gdkpixmap.h" line="78"/>
        <return-value>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="fg" transfer-ownership="none">
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="bg" transfer-ownership="none">
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_xpm"
                c:identifier="gdk_pixmap_create_from_xpm"
                deprecated="1"
                deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkpixmap.c"
             line="726">Create a pixmap from a XPM file.</doc>
        <doc-deprecated xml:space="preserve">Use a #GdkPixbuf instead. You can use
gdk_pixbuf_new_from_file() to create it.
If you must use a pixmap, use gdk_pixmap_new() to
create it and Cairo to draw the pixbuf onto it.</doc-deprecated>
        <source-position filename="gdk/gdkpixmap.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixmap.c"
               line="740">the #GdkPixmap</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="728">a #GdkDrawable, used to determine default values
for the new pixmap.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="730">a pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be %NULL,
in which case transparency will be ignored.</doc>
            <type name="Bitmap" c:type="GdkBitmap**"/>
          </parameter>
          <parameter name="transparent_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="733">the color to be used for the pixels
that are transparent in the input file. Can be %NULL,
in which case a default color will be used.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="736">the filename of a file containing XPM data.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_xpm_d"
                c:identifier="gdk_pixmap_create_from_xpm_d"
                deprecated="1"
                deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkpixmap.c"
             line="809">Create a pixmap from data in XPM format.</doc>
        <doc-deprecated xml:space="preserve">Use a #GdkPixbuf instead. You can use
gdk_pixbuf_new_from_xpm_data() to create it.
If you must use a pixmap, use gdk_pixmap_new() to
create it and Cairo to draw the pixbuf onto it.</doc-deprecated>
        <source-position filename="gdk/gdkpixmap.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixmap.c"
               line="823">the #GdkPixmap.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="811">a #GdkDrawable, used to determine default values
    for the new pixmap.</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="813">Pointer to a place to store a bitmap representing
    the transparency mask of the XPM file. Can be %NULL,
    in which case transparency will be ignored.</doc>
            <type name="Bitmap" c:type="GdkBitmap**"/>
          </parameter>
          <parameter name="transparent_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="816">This color will be used for the pixels
    that are transparent in the input file. Can be %NULL
    in which case a default color will be used.</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="819">Pointer to a string containing the XPM data.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </function>
      <function name="lookup"
                c:identifier="gdk_pixmap_lookup"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkpixmap-x11.c"
             line="421">Looks up the #GdkPixmap that wraps the given native pixmap handle.

For example in the X backend, a native pixmap handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="114"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkpixmap-x11.c"
               line="430">the #GdkPixmap wrapper for the native pixmap,
   or %NULL if there is none.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="anid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="423">a native pixmap handle.</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </function>
      <function name="lookup_for_display"
                c:identifier="gdk_pixmap_lookup_for_display"
                version="2.2"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkpixmap-x11.c"
             line="439">Looks up the #GdkPixmap that wraps the given native pixmap handle.

For example in the X backend, a native pixmap handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="119"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkpixmap-x11.c"
               line="449">the #GdkPixmap wrapper for the native pixmap,
   or %NULL if there is none.</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="441">the #GdkDisplay associated with @anid</doc>
            <type name="Display" c:type="GdkDisplay*"/>
          </parameter>
          <parameter name="anid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkpixmap-x11.c"
                 line="442">a native pixmap handle.</doc>
            <type name="NativeWindow" c:type="GdkNativeWindow"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_size"
              c:identifier="gdk_pixmap_get_size"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkpixmap.c"
             line="846">This function is purely to make it possible to query the size of pixmaps
even when compiling without deprecated symbols and you must use pixmaps.
It is identical to gdk_drawable_get_size(), but for pixmaps.</doc>
        <source-position filename="gdk/gdkpixmap.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixmap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="848">a #GdkPixmap</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="849">location to store @pixmap's width, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkpixmap.c"
                 line="850">location to store @pixmap's height, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="PixmapObject" c:type="GdkPixmapObject">
      <source-position filename="gdk/gdkpixmap.h" line="57"/>
      <field name="parent_instance" writable="1">
        <type name="Drawable" c:type="GdkDrawable"/>
      </field>
      <field name="impl" writable="1">
        <type name="Drawable" c:type="GdkDrawable*"/>
      </field>
      <field name="depth" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="PixmapObjectClass" c:type="GdkPixmapObjectClass">
      <source-position filename="gdk/gdkpixmap.h" line="63"/>
      <field name="parent_class" writable="1">
        <type name="DrawableClass" c:type="GdkDrawableClass"/>
      </field>
    </record>
    <record name="Point" c:type="GdkPoint">
      <source-position filename="gdk/gdktypes.h" line="198"/>
      <field name="x" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="PointerHooks" c:type="GdkPointerHooks">
      <source-position filename="gdk/gdkwindow.h" line="250"/>
      <field name="get_pointer" introspectable="0">
        <callback name="get_pointer" introspectable="0">
          <source-position filename="gdk/gdkwindow.h" line="243"/>
          <return-value>
            <type name="Window" c:type="GdkWindow*"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="Window" c:type="GdkWindow*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="ModifierType" c:type="GdkModifierType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="window_at_pointer" introspectable="0">
        <callback name="window_at_pointer" introspectable="0">
          <source-position filename="gdk/gdkwindow.h" line="247"/>
          <return-value>
            <type name="Window" c:type="GdkWindow*"/>
          </return-value>
          <parameters>
            <parameter name="screen" transfer-ownership="none">
              <type name="Screen" c:type="GdkScreen*"/>
            </parameter>
            <parameter name="win_x" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="win_y" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="PointerWindowInfo" c:type="GdkPointerWindowInfo">
      <source-position filename="gdk/gdkdisplay.h" line="71"/>
      <field name="toplevel_under_pointer" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="window_under_pointer" writable="1">
        <type name="Window" c:type="GdkWindow*"/>
      </field>
      <field name="toplevel_x" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="toplevel_y" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="state" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="button" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="motion_hint_serial" writable="1">
        <type name="gulong" c:type="gulong"/>
      </field>
    </record>
    <enumeration name="PropMode" c:type="GdkPropMode">
      <source-position filename="gdk/gdkproperty.h" line="43"/>
      <member name="replace" value="0" c:identifier="GDK_PROP_MODE_REPLACE">
      </member>
      <member name="prepend" value="1" c:identifier="GDK_PROP_MODE_PREPEND">
      </member>
      <member name="append" value="2" c:identifier="GDK_PROP_MODE_APPEND">
      </member>
    </enumeration>
    <enumeration name="PropertyState" c:type="GdkPropertyState">
      <source-position filename="gdk/gdkevents.h" line="239"/>
      <member name="new_value" value="0" c:identifier="GDK_PROPERTY_NEW_VALUE">
      </member>
      <member name="delete" value="1" c:identifier="GDK_PROPERTY_DELETE">
      </member>
    </enumeration>
    <record name="Rectangle"
            c:type="GdkRectangle"
            glib:type-name="GdkRectangle"
            glib:get-type="gdk_rectangle_get_type"
            c:symbol-prefix="rectangle">
      <source-position filename="gdk/gdktypes.h" line="206"/>
      <field name="x" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <method name="intersect" c:identifier="gdk_rectangle_intersect">
        <doc xml:space="preserve"
             filename="gdk/gdkrectangle.c"
             line="61">Calculates the intersection of two rectangles. It is allowed for
@dest to be the same as either @src1 or @src2. If the rectangles
do not intersect, @dest's width and height is set to 0 and its x
and y values are undefined. If you are only interested in whether
the rectangles intersect, but not in the intersecting area itself,
pass %NULL for @dest.</doc>
        <source-position filename="gdk/gdk.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrectangle.c"
               line="75">%TRUE if the rectangles intersect.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="src1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="63">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </instance-parameter>
          <parameter name="src2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="64">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
          <parameter name="dest"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="65">return location for the
intersection of @src1 and @src2, or %NULL</doc>
            <type name="Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="union" c:identifier="gdk_rectangle_union">
        <doc xml:space="preserve"
             filename="gdk/gdkrectangle.c"
             line="31">Calculates the union of two rectangles.
The union of rectangles @src1 and @src2 is the smallest rectangle which
includes both @src1 and @src2 within it.
It is allowed for @dest to be the same as either @src1 or @src2.</doc>
        <source-position filename="gdk/gdk.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="src1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="33">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </instance-parameter>
          <parameter name="src2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="34">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
          <parameter name="dest"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrectangle.c"
                 line="35">return location for the union of @src1 and @src2</doc>
            <type name="Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="Region" c:type="GdkRegion" disguised="1">
      <source-position filename="gdk/gdktypes.h" line="108"/>
      <method name="copy" c:identifier="gdk_region_copy" introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="182">Copies @region, creating an identical new region.</doc>
        <source-position filename="gdk/gdkregion.h" line="73"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="188">a new region identical to @region</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="184">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="gdk_region_destroy">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="353">Destroys a #GdkRegion.</doc>
        <source-position filename="gdk/gdkregion.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="355">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="empty" c:identifier="gdk_region_empty">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1532">Finds out if the #GdkRegion is empty.</doc>
        <source-position filename="gdk/gdkregion.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="1538">%TRUE if @region is empty.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1534">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="gdk_region_equal">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1551">Finds out if the two regions are the same.</doc>
        <source-position filename="gdk/gdkregion.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="1558">%TRUE if @region1 and @region2 are equal.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="region1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1553">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="region2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1554">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clipbox" c:identifier="gdk_region_get_clipbox">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="204">Obtains the smallest rectangle which includes the entire #GdkRegion.</doc>
        <source-position filename="gdk/gdkregion.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="206">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="207">return location for the clipbox</doc>
            <type name="Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rectangles" c:identifier="gdk_region_get_rectangles">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="226">Obtains the area covered by the region as a list of rectangles.
The array returned in @rectangles must be freed with g_free().</doc>
        <source-position filename="gdk/gdkregion.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="228">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="rectangles" transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="229">return location for an array of rectangles</doc>
            <array length="1" zero-terminated="0" c:type="GdkRectangle**">
              <type name="Rectangle" c:type="GdkRectangle*"/>
            </array>
          </parameter>
          <parameter name="n_rectangles" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="230">length of returned array</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="intersect" c:identifier="gdk_region_intersect">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="588">Sets the area of @source1 to the intersection of the areas of @source1
and @source2. The resulting area is the set of pixels contained in
both @source1 and @source2.</doc>
        <source-position filename="gdk/gdkregion.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="590">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="source2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="591">another #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="offset" c:identifier="gdk_region_offset">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="370">Moves a region the specified distance.</doc>
        <source-position filename="gdk/gdkregion.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="372">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="373">the distance to move the region horizontally</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="374">the distance to move the region vertically</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="point_in" c:identifier="gdk_region_point_in">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1615">Finds out if a point is in a region.</doc>
        <source-position filename="gdk/gdkregion.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="1623">%TRUE if the point is in @region.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1617">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1618">the x coordinate of a point</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1619">the y coordinate of a point</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="rect_equal"
              c:identifier="gdk_region_rect_equal"
              version="2.18"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1586">Finds out if a regions is the same as a rectangle.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_region_new_rect() and gdk_region_equal() to
            achieve the same effect.</doc-deprecated>
        <source-position filename="gdk/gdkregion.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="1593">%TRUE if @region and @rectangle are equal.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1588">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1589">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rect_in" c:identifier="gdk_region_rect_in">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1646">Tests whether a rectangle is within a region.</doc>
        <source-position filename="gdk/gdkregion.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="1653">%GDK_OVERLAP_RECTANGLE_IN, %GDK_OVERLAP_RECTANGLE_OUT, or
  %GDK_OVERLAP_RECTANGLE_PART, depending on whether the rectangle is inside,
  outside, or partly inside the #GdkRegion, respectively.</doc>
          <type name="OverlapType" c:type="GdkOverlapType"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1648">a #GdkRegion.</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </instance-parameter>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1649">a #GdkRectangle.</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="shrink"
              c:identifier="gdk_region_shrink"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="464">Resizes a region by the specified amount.
Positive values shrink the region. Negative values expand it.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement for this function.</doc-deprecated>
        <source-position filename="gdk/gdkregion.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="466">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="467">the number of pixels to shrink the region horizontally</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="468">the number of pixels to shrink the region vertically</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="spans_intersect_foreach"
              c:identifier="gdk_region_spans_intersect_foreach"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1802">Calls a function on each span in the intersection of @region and @spans.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement.</doc-deprecated>
        <source-position filename="gdk/gdkregion.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1804">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="spans" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1805">an array of #GdkSpans</doc>
            <type name="Span" c:type="const GdkSpan*"/>
          </parameter>
          <parameter name="n_spans" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1806">the length of @spans</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="sorted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1807">%TRUE if @spans is sorted wrt. the y coordinate</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="function" transfer-ownership="none" closure="4">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1808">function to call on each span in the intersection</doc>
            <type name="SpanFunc" c:type="GdkSpanFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1809">data to pass to @function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="subtract" c:identifier="gdk_region_subtract">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1472">Subtracts the area of @source2 from the area @source1. The resulting
area is the set of pixels contained in @source1 but not in @source2.</doc>
        <source-position filename="gdk/gdkregion.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1474">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="source2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1475">another #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="union" c:identifier="gdk_region_union">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1210">Sets the area of @source1 to the union of the areas of @source1 and
@source2. The resulting area is the set of pixels contained in
either @source1 or @source2.</doc>
        <source-position filename="gdk/gdkregion.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1212">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="source2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1213">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="union_with_rect" c:identifier="gdk_region_union_with_rect">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="260">Sets the area of @region to the union of the areas of @region and
@rect. The resulting area is the set of pixels contained in
either @region or @rect.</doc>
        <source-position filename="gdk/gdkregion.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="262">a #GdkRegion.</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="263">a #GdkRectangle.</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="xor" c:identifier="gdk_region_xor">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="1504">Sets the area of @source1 to the exclusive-OR of the areas of @source1
and @source2. The resulting area is the set of pixels contained in one
or the other of the two sources but not in both.</doc>
        <source-position filename="gdk/gdkregion.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1506">a #GdkRegion</doc>
            <type name="Region" c:type="GdkRegion*"/>
          </instance-parameter>
          <parameter name="source2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="1507">another #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <function name="new" c:identifier="gdk_region_new" introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="101">Creates a new empty #GdkRegion.</doc>
        <source-position filename="gdk/gdkregion.h" line="67"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="106">a new empty #GdkRegion</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
      </function>
      <function name="polygon"
                c:identifier="gdk_region_polygon"
                introspectable="0"
                deprecated="1"
                deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkpolyreg-generic.c"
             line="450">Creates a new #GdkRegion using the polygon defined by a
number of points.</doc>
        <doc-deprecated xml:space="preserve">There is no replacement. For working with paths, please
            use Cairo.</doc-deprecated>
        <source-position filename="gdk/gdkregion.h" line="69"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkpolyreg-generic.c"
               line="460">a new #GdkRegion based on the given polygon</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <parameter name="points" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpolyreg-generic.c"
                 line="452">an array of #GdkPoint structs</doc>
            <type name="Point" c:type="const GdkPoint*"/>
          </parameter>
          <parameter name="n_points" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpolyreg-generic.c"
                 line="453">the number of elements in the @points array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="fill_rule" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkpolyreg-generic.c"
                 line="454">specifies which pixels are included in the region when the
    polygon overlaps itself.</doc>
            <type name="FillRule" c:type="GdkFillRule"/>
          </parameter>
        </parameters>
      </function>
      <function name="rectangle"
                c:identifier="gdk_region_rectangle"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkregion-generic.c"
             line="151">Creates a new region containing the area @rectangle.</doc>
        <source-position filename="gdk/gdkregion.h" line="74"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkregion-generic.c"
               line="157">a new region</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkregion-generic.c"
                 line="153">a #GdkRectangle</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="RgbCmap" c:type="GdkRgbCmap">
      <source-position filename="gdk/gdkrgb.h" line="55"/>
      <field name="colors" writable="1">
        <array zero-terminated="0" fixed-size="256">
          <type name="guint32" c:type="guint32"/>
        </array>
      </field>
      <field name="n_colors" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="info_list" readable="0" private="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <method name="free" c:identifier="gdk_rgb_cmap_free">
        <source-position filename="gdk/gdkrgb.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmap" transfer-ownership="none">
            <type name="RgbCmap" c:type="GdkRgbCmap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="new" c:identifier="gdk_rgb_cmap_new" introspectable="0">
        <source-position filename="gdk/gdkrgb.h" line="128"/>
        <return-value>
          <type name="RgbCmap" c:type="GdkRgbCmap*"/>
        </return-value>
        <parameters>
          <parameter name="colors" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="n_colors" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="RgbDither" c:type="GdkRgbDither">
      <source-position filename="gdk/gdkrgb.h" line="45"/>
      <member name="none" value="0" c:identifier="GDK_RGB_DITHER_NONE">
      </member>
      <member name="normal" value="1" c:identifier="GDK_RGB_DITHER_NORMAL">
      </member>
      <member name="max" value="2" c:identifier="GDK_RGB_DITHER_MAX">
      </member>
    </enumeration>
    <function-macro name="SCREEN" c:identifier="GDK_SCREEN" introspectable="0">
      <source-position filename="gdk/gdkscreen.h" line="40"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCREEN_CLASS"
                    c:identifier="GDK_SCREEN_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkscreen.h" line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCREEN_GET_CLASS"
                    c:identifier="GDK_SCREEN_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkscreen.h" line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Screen"
           c:symbol-prefix="screen"
           c:type="GdkScreen"
           parent="GObject.Object"
           glib:type-name="GdkScreen"
           glib:get-type="gdk_screen_get_type"
           glib:type-struct="ScreenClass">
      <source-position filename="gdk/gdkscreen.h" line="67"/>
      <function name="get_default"
                c:identifier="gdk_screen_get_default"
                version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplaymanager.c"
             line="206">Gets the default screen for the default display. (See
gdk_display_get_default ()).</doc>
        <source-position filename="gdk/gdkscreen.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplaymanager.c"
               line="212">a #GdkScreen, or %NULL if there is no default display.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
      </function>
      <function name="height" c:identifier="gdk_screen_height">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="354">Returns the height of the default screen in pixels.</doc>
        <source-position filename="gdk/gdk.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="359">the height of the default screen in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="height_mm" c:identifier="gdk_screen_height_mm">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="382">Returns the height of the default screen in millimeters.
Note that on many X servers this value will not be correct.</doc>
        <source-position filename="gdk/gdk.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="388">the height of the default screen in millimeters,
though it is not always correct.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="width" c:identifier="gdk_screen_width">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="341">Returns the width of the default screen in pixels.</doc>
        <source-position filename="gdk/gdk.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="346">the width of the default screen in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="width_mm" c:identifier="gdk_screen_width_mm">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="367">Returns the width of the default screen in millimeters.
Note that on many X servers this value will not be correct.</doc>
        <source-position filename="gdk/gdk.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="373">the width of the default screen in millimeters,
though it is not always correct.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <virtual-method name="composited_changed">
        <source-position filename="gdk/gdkscreen.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="monitors_changed">
        <source-position filename="gdk/gdkscreen.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="size_changed">
        <source-position filename="gdk/gdkscreen.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="broadcast_client_message"
              c:identifier="gdk_screen_broadcast_client_message">
        <source-position filename="gdk/gdkscreen.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active_window"
              c:identifier="gdk_screen_get_active_window"
              version="2.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="1367">Returns the screen's currently active window.

On X11, this is done by inspecting the _NET_ACTIVE_WINDOW property
on the root window, as described in the &lt;ulink
url="http://www.freedesktop.org/Standards/wm-spec"&gt;Extended Window
Manager Hints&lt;/ulink&gt;. If there is no currently currently active
window, or the window manager does not support the
_NET_ACTIVE_WINDOW hint, this function returns %NULL.

On other platforms, this function may return %NULL, depending on whether
it is implementable on that platform.

The returned window should be unrefed using g_object_unref() when
no longer needed.</doc>
        <source-position filename="gdk/gdkscreen.h" line="127"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="1386">the currently active window, or %NULL.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="1369">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_colormap"
              c:identifier="gdk_screen_get_default_colormap"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="231">Gets the default colormap for @screen.</doc>
        <source-position filename="gdk/gdkscreen.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="237">the default #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="233">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gdk_screen_get_display"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="103">Gets the display to which the @screen belongs.</doc>
        <source-position filename="gdk/gdkscreen.h" line="82"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="109">the display to which @screen belongs</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="105">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_options"
              c:identifier="gdk_screen_get_font_options"
              glib:get-property="font-options"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="431">Gets any options previously set with gdk_screen_set_font_options().</doc>
        <source-position filename="gdk/gdkscreen.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="437">the current font options, or %NULL if no default
 font options have been set.</doc>
          <type name="cairo.FontOptions" c:type="const cairo_font_options_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="433">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdk_screen_get_height"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="138">Gets the height of @screen in pixels</doc>
        <source-position filename="gdk/gdkscreen.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="144">the height of @screen in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="140">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height_mm"
              c:identifier="gdk_screen_get_height_mm"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="175">Returns the height of @screen in millimeters.
Note that on some X servers this value will not be correct.</doc>
        <source-position filename="gdk/gdkscreen.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="182">the heigth of @screen in millimeters.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="177">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_monitor_at_point"
              c:identifier="gdk_screen_get_monitor_at_point"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="253">Returns the monitor number in which the point (@x,@y) is located.</doc>
        <source-position filename="gdk/gdkscreen.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="261">the monitor number in which the point (@x,@y) lies, or
  a monitor close to (@x,@y) if the point is not in any monitor.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="255">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="256">the x coordinate in the virtual screen.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="257">the y coordinate in the virtual screen.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_monitor_at_window"
              c:identifier="gdk_screen_get_monitor_at_window"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="293">Returns the number of the monitor in which the largest area of the
bounding rectangle of @window resides.</doc>
        <source-position filename="gdk/gdkscreen.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="297">the monitor number in which most of @window is located,
          or if @window does not intersect any monitors, a monitor,
          close to @window.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="295">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="296">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_monitor_geometry"
              c:identifier="gdk_screen_get_monitor_geometry"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="483">Retrieves the #GdkRectangle representing the size and position of
the individual monitor within the entire screen area.

Note that the size of the entire screen area can be retrieved via
gdk_screen_get_width() and gdk_screen_get_height().</doc>
        <source-position filename="gdk/gdkscreen.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="485">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="monitor_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="486">the monitor number, between 0 and gdk_screen_get_n_monitors (screen)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="487">a #GdkRectangle to be filled with the monitor geometry</doc>
            <type name="Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_monitor_height_mm"
              c:identifier="gdk_screen_get_monitor_height_mm"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="406">Gets the height in millimeters of the specified monitor.</doc>
        <source-position filename="gdk/gdkscreen.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="413">the height of the monitor, or -1 if not available</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="408">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="monitor_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="409">number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_monitor_plug_name"
              c:identifier="gdk_screen_get_monitor_plug_name"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="430">Returns the output name of the specified monitor.
Usually something like VGA, DVI, or TV, not the actual
product name of the display device.</doc>
        <source-position filename="gdk/gdkscreen.h" line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="439">a newly-allocated string containing the name of the monitor,
  or %NULL if the name cannot be determined</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="432">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="monitor_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="433">number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_monitor_width_mm"
              c:identifier="gdk_screen_get_monitor_width_mm"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="382">Gets the width in millimeters of the specified monitor, if available.</doc>
        <source-position filename="gdk/gdkscreen.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="389">the width of the monitor, or -1 if not available</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="384">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="monitor_num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="385">number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_monitors"
              c:identifier="gdk_screen_get_n_monitors"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="339">Returns the number of monitors which @screen consists of.</doc>
        <source-position filename="gdk/gdkscreen.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="345">number of monitors which @screen consists of</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="341">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_number"
              c:identifier="gdk_screen_get_number"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="194">Gets the index of @screen among the screens in the display
to which it belongs. (See gdk_screen_get_display())</doc>
        <source-position filename="gdk/gdkscreen.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="201">the index</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="196">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_primary_monitor"
              c:identifier="gdk_screen_get_primary_monitor"
              version="2.20">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="357">Gets the primary monitor for @screen.  The primary monitor
is considered the monitor where the 'main desktop' lives.
While normal application windows typically allow the window
manager to place the windows, specialized desktop applications
such as panels should place themselves on the primary monitor.

If no primary monitor is configured by the user, the return value
will be 0, defaulting to the first monitor.</doc>
        <source-position filename="gdk/gdkscreen.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="370">An integer index for the primary monitor, or 0 if none is configured.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="359">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resolution"
              c:identifier="gdk_screen_get_resolution"
              glib:get-property="resolution"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="480">Gets the resolution for font handling on the screen; see
gdk_screen_set_resolution() for full details.</doc>
        <source-position filename="gdk/gdkscreen.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkscreen.c"
               line="487">the current resolution, or -1 if no resolution
has been set.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="482">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rgb_colormap"
              c:identifier="gdk_screen_get_rgb_colormap"
              version="2.2"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkrgb.c"
             line="3693">Gets the preferred colormap for rendering image data on @screen.
Not a very useful function; historically, GDK could only render RGB
image data to one colormap and visual, but in the current version
it can render to any colormap and visual. So there's no need to
call this function.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_screen_get_system_colormap()</doc-deprecated>
        <source-position filename="gdk/gdkscreen.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3703">the preferred colormap</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrgb.c"
                 line="3695">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rgb_visual"
              c:identifier="gdk_screen_get_rgb_visual"
              version="2.2"
              deprecated="1"
              deprecated-version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkrgb.c"
             line="3725">Gets a "preferred visual" chosen by GdkRGB for rendering image data
on @screen. In previous versions of
GDK, this was the only visual GdkRGB could use for rendering. In
current versions, it's simply the visual GdkRGB would have chosen as
the optimal one in those previous versions. GdkRGB can now render to
drawables with any visual.</doc>
        <doc-deprecated xml:space="preserve">Use gdk_screen_get_system_visual()</doc-deprecated>
        <source-position filename="gdk/gdkscreen.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3736">The #GdkVisual chosen by GdkRGB.</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkrgb.c"
                 line="3727">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rgba_colormap"
              c:identifier="gdk_screen_get_rgba_colormap"
              version="2.8">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="512">Gets a colormap to use for creating windows or pixmaps with an
alpha channel. The windowing system on which GTK+ is running
may not support this capability, in which case %NULL will
be returned. Even if a non-%NULL value is returned, its
possible that the window's alpha channel won't be honored
when displaying the window on the screen: in particular, for
X an appropriate windowing manager and compositing manager
must be running to provide appropriate display.

This functionality is not implemented in the Windows backend.

For setting an overall opacity for a top-level window, see
gdk_window_set_opacity().</doc>
        <source-position filename="gdk/gdkscreen.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="530">a colormap to use for windows with
    an alpha channel or %NULL if the capability is not available.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="514">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rgba_visual"
              c:identifier="gdk_screen_get_rgba_visual"
              version="2.8">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="554">Gets a visual to use for creating windows or pixmaps with an
alpha channel. See the docs for gdk_screen_get_rgba_colormap()
for caveats.</doc>
        <source-position filename="gdk/gdkscreen.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="562">a visual to use for windows with an
    alpha channel or %NULL if the capability is not available.</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="556">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_root_window"
              c:identifier="gdk_screen_get_root_window"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="213">Gets the root window of @screen.</doc>
        <source-position filename="gdk/gdkscreen.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="219">the root window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="215">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_setting" c:identifier="gdk_screen_get_setting">
        <source-position filename="gdk/gdkscreen.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_system_colormap"
              c:identifier="gdk_screen_get_system_colormap"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="348">Gets the system's default colormap for @screen</doc>
        <source-position filename="gdk/gdkscreen.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="354">the default colormap for @screen.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkcolor-x11.c"
                 line="350">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_system_visual"
              c:identifier="gdk_screen_get_system_visual"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="344">Get the system's default visual for @screen.
This is the visual for the root window of the display.
The return value should not be freed.</doc>
        <source-position filename="gdk/gdkscreen.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="352">the system visual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="346">a #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toplevel_windows"
              c:identifier="gdk_screen_get_toplevel_windows"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2649">Obtains a list of all toplevel windows known to GDK on the screen @screen.
A toplevel window is a child of the root window (see
gdk_get_default_root_window()).

The returned list should be freed with g_list_free(), but
its elements need not be freed.</doc>
        <source-position filename="gdk/gdkscreen.h" line="90"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2660">
    list of toplevel windows, free with g_list_free()</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Window"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2651">The #GdkScreen where the toplevels are located.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdk_screen_get_width"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="120">Gets the width of @screen in pixels</doc>
        <source-position filename="gdk/gdkscreen.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="126">the width of @screen in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="122">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width_mm"
              c:identifier="gdk_screen_get_width_mm"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="156">Gets the width of @screen in millimeters.
Note that on some X servers this value will not be correct.</doc>
        <source-position filename="gdk/gdkscreen.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="163">the width of @screen in millimeters.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="158">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_window_stack"
              c:identifier="gdk_screen_get_window_stack"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="1435">Returns a #GList of #GdkWindow&lt;!-- --&gt;s representing the current
window stack.

On X11, this is done by inspecting the _NET_CLIENT_LIST_STACKING
property on the root window, as described in the &lt;ulink
url="http://www.freedesktop.org/Standards/wm-spec"&gt;Extended Window
Manager Hints&lt;/ulink&gt;. If the window manager does not support the
_NET_CLIENT_LIST_STACKING hint, this function returns %NULL.

On other platforms, this function may return %NULL, depending on whether
it is implementable on that platform.

The returned list is newly allocated and owns references to the
windows it contains, so it should be freed using g_list_free() and
its windows unrefed using g_object_unref() when no longer needed.</doc>
        <source-position filename="gdk/gdkscreen.h" line="128"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="1455">
    a list of #GdkWindow&lt;!-- --&gt;s for the current window stack,
              or %NULL.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Window"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="1437">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_composited"
              c:identifier="gdk_screen_is_composited"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="1160">Returns whether windows with an RGBA visual can reasonably
be expected to have their alpha channel drawn correctly on
the screen.

On X11 this function returns whether a compositing manager is
compositing @screen.</doc>
        <source-position filename="gdk/gdkscreen.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="1171">Whether windows with RGBA visuals can reasonably be
expected to have their alpha channels drawn correctly on the screen.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="1162">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_visuals"
              c:identifier="gdk_screen_list_visuals"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="513">Lists the available visuals for the specified @screen.
A visual describes a hardware image data format.
For example, a visual might support 24-bit color, or 8-bit color,
and might expect pixels to be in a certain format.

Call g_list_free() on the return value when you're finished with it.</doc>
        <source-position filename="gdk/gdkscreen.h" line="89"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="524">
    a list of visuals; the list must be freed, but not its contents</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Visual"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="515">the relevant #GdkScreen.</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_display_name"
              c:identifier="gdk_screen_make_display_name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="1343">Determines the name to pass to gdk_display_open() to get
a #GdkDisplay with this screen as the default screen.</doc>
        <source-position filename="gdk/gdkscreen.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkscreen-x11.c"
               line="1350">a newly allocated string, free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="1345">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_colormap"
              c:identifier="gdk_screen_set_default_colormap"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkscreen-x11.c"
             line="249">Sets the default @colormap for @screen.</doc>
        <source-position filename="gdk/gdkscreen.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="251">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkscreen-x11.c"
                 line="252">a #GdkColormap</doc>
            <type name="Colormap" c:type="GdkColormap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font_options"
              c:identifier="gdk_screen_set_font_options"
              glib:set-property="font-options"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="397">Sets the default font options for the screen. These
options will be set on any #PangoContext's newly created
with gdk_pango_context_get_for_screen(). Changing the
default set of font options does not affect contexts that
have already been created.</doc>
        <source-position filename="gdk/gdkscreen.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="399">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="400">a #cairo_font_options_t, or %NULL to unset any
  previously set default font options.</doc>
            <type name="cairo.FontOptions"
                  c:type="const cairo_font_options_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolution"
              c:identifier="gdk_screen_set_resolution"
              glib:set-property="resolution"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="450">Sets the resolution for font handling on the screen. This is a
scale factor between points specified in a #PangoFontDescription
and cairo units. The default value is 96, meaning that a 10 point
font will be 13 units high. (10 * 96. / 72. = 13.3).</doc>
        <source-position filename="gdk/gdkscreen.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screen" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="452">a #GdkScreen</doc>
            <type name="Screen" c:type="GdkScreen*"/>
          </instance-parameter>
          <parameter name="dpi" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkscreen.c"
                 line="453">the resolution in "dots per inch". (Physical inches aren't actually
  involved; the terminology is conventional.)</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="font-options"
                writable="1"
                transfer-ownership="none"
                setter="set_font_options"
                getter="get_font_options">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="resolution"
                writable="1"
                transfer-ownership="none"
                setter="set_resolution"
                getter="get_resolution">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="closed" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="normal_gcs">
        <array zero-terminated="0" fixed-size="32">
          <type name="GC" c:type="GdkGC*"/>
        </array>
      </field>
      <field name="exposure_gcs">
        <array zero-terminated="0" fixed-size="32">
          <type name="GC" c:type="GdkGC*"/>
        </array>
      </field>
      <field name="subwindow_gcs">
        <array zero-terminated="0" fixed-size="32">
          <type name="GC" c:type="GdkGC*"/>
        </array>
      </field>
      <field name="font_options">
        <type name="cairo.FontOptions" c:type="cairo_font_options_t*"/>
      </field>
      <field name="resolution">
        <type name="gdouble" c:type="double"/>
      </field>
      <glib:signal name="composited-changed" when="last" version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="110">The ::composited-changed signal is emitted when the composited
status of the screen changes</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="monitors-changed" when="last" version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="129">The ::monitors-changed signal is emitted when the number, size
or position of the monitors attached to the screen change.

Only for X11 and OS X for now. A future implementation for Win32
may be a possibility.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="size-changed" when="last" version="2.2">
        <doc xml:space="preserve"
             filename="gdk/gdkscreen.c"
             line="91">The ::size-changed signal is emitted when the pixel width or
height of a screen changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ScreenClass"
            c:type="GdkScreenClass"
            glib:is-gtype-struct-for="Screen">
      <source-position filename="gdk/gdkscreen.h" line="67"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="size_changed">
        <callback name="size_changed">
          <source-position filename="gdk/gdkscreen.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="screen" transfer-ownership="none">
              <type name="Screen" c:type="GdkScreen*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="composited_changed">
        <callback name="composited_changed">
          <source-position filename="gdk/gdkscreen.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="screen" transfer-ownership="none">
              <type name="Screen" c:type="GdkScreen*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="monitors_changed">
        <callback name="monitors_changed">
          <source-position filename="gdk/gdkscreen.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="screen" transfer-ownership="none">
              <type name="Screen" c:type="GdkScreen*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="ScrollDirection" c:type="GdkScrollDirection">
      <source-position filename="gdk/gdkevents.h" line="200"/>
      <member name="up" value="0" c:identifier="GDK_SCROLL_UP">
      </member>
      <member name="down" value="1" c:identifier="GDK_SCROLL_DOWN">
      </member>
      <member name="left" value="2" c:identifier="GDK_SCROLL_LEFT">
      </member>
      <member name="right" value="3" c:identifier="GDK_SCROLL_RIGHT">
      </member>
    </enumeration>
    <record name="Segment" c:type="GdkSegment">
      <source-position filename="gdk/gdktypes.h" line="214"/>
      <field name="x1" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y1" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="x2" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y2" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <enumeration name="SettingAction" c:type="GdkSettingAction">
      <source-position filename="gdk/gdkevents.h" line="257"/>
      <member name="new" value="0" c:identifier="GDK_SETTING_ACTION_NEW">
      </member>
      <member name="changed"
              value="1"
              c:identifier="GDK_SETTING_ACTION_CHANGED">
      </member>
      <member name="deleted"
              value="2"
              c:identifier="GDK_SETTING_ACTION_DELETED">
      </member>
    </enumeration>
    <record name="Span" c:type="GdkSpan">
      <source-position filename="gdk/gdktypes.h" line="221"/>
      <field name="x" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <callback name="SpanFunc" c:type="GdkSpanFunc">
      <source-position filename="gdk/gdkregion.h" line="63"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="span" transfer-ownership="none">
          <type name="Span" c:type="GdkSpan*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="Status" c:type="GdkStatus">
      <source-position filename="gdk/gdktypes.h" line="169"/>
      <member name="ok" value="0" c:identifier="GDK_OK">
      </member>
      <member name="error" value="-1" c:identifier="GDK_ERROR">
      </member>
      <member name="error_param" value="-2" c:identifier="GDK_ERROR_PARAM">
      </member>
      <member name="error_file" value="-3" c:identifier="GDK_ERROR_FILE">
      </member>
      <member name="error_mem" value="-4" c:identifier="GDK_ERROR_MEM">
      </member>
    </enumeration>
    <enumeration name="SubwindowMode" c:type="GdkSubwindowMode">
      <source-position filename="gdk/gdkgc.h" line="136"/>
      <member name="clip_by_children"
              value="0"
              c:identifier="GDK_CLIP_BY_CHILDREN">
      </member>
      <member name="include_inferiors"
              value="1"
              c:identifier="GDK_INCLUDE_INFERIORS">
      </member>
    </enumeration>
    <record name="TimeCoord" c:type="GdkTimeCoord">
      <source-position filename="gdk/gdkinput.h" line="124"/>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="axes" writable="1">
        <array zero-terminated="0" fixed-size="128">
          <type name="gdouble" c:type="gdouble"/>
        </array>
      </field>
    </record>
    <record name="Trapezoid" c:type="GdkTrapezoid">
      <source-position filename="gdk/gdkdrawable.h" line="237"/>
      <field name="y1" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="x11" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="x21" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="y2" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="x12" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="x22" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
    </record>
    <function-macro name="VISUAL" c:identifier="GDK_VISUAL" introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="39"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VISUAL_CLASS"
                    c:identifier="GDK_VISUAL_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VISUAL_GET_CLASS"
                    c:identifier="GDK_VISUAL_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="VisibilityState" c:type="GdkVisibilityState">
      <source-position filename="gdk/gdkevents.h" line="192"/>
      <member name="unobscured"
              value="0"
              c:identifier="GDK_VISIBILITY_UNOBSCURED">
      </member>
      <member name="partial" value="1" c:identifier="GDK_VISIBILITY_PARTIAL">
      </member>
      <member name="fully_obscured"
              value="2"
              c:identifier="GDK_VISIBILITY_FULLY_OBSCURED">
      </member>
    </enumeration>
    <class name="Visual"
           c:symbol-prefix="visual"
           c:type="GdkVisual"
           parent="GObject.Object"
           glib:type-name="GdkVisual"
           glib:get-type="gdk_visual_get_type"
           glib:type-struct="VisualClass">
      <source-position filename="gdk/gdkvisual.h" line="45"/>
      <function name="get_best" c:identifier="gdk_visual_get_best">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="364">Get the visual with the most available colors for the default
GDK screen. The return value should not be freed.</doc>
        <source-position filename="gdk/gdkvisual.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="370">best visual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
      </function>
      <function name="get_best_depth" c:identifier="gdk_visual_get_best_depth">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="312">Get the best available depth for the default GDK screen.  "Best"
means "largest," i.e. 32 preferred over 24 preferred over 8 bits
per pixel.</doc>
        <source-position filename="gdk/gdkvisual.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="319">best available depth</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="get_best_type" c:identifier="gdk_visual_get_best_type">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="329">Return the best available visual type for the default GDK screen.</doc>
        <source-position filename="gdk/gdkvisual.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="334">best visual type</doc>
          <type name="VisualType" c:type="GdkVisualType"/>
        </return-value>
      </function>
      <function name="get_best_with_both"
                c:identifier="gdk_visual_get_best_with_both">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="438">Combines gdk_visual_get_best_with_depth() and gdk_visual_get_best_with_type().</doc>
        <source-position filename="gdk/gdkvisual.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="445">best visual with both @depth and
    @visual_type, or %NULL if none</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="440">a bit depth</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visual_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="441">a visual type</doc>
            <type name="VisualType" c:type="GdkVisualType"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_best_with_depth"
                c:identifier="gdk_visual_get_best_with_depth">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="380">Get the best visual with depth @depth for the default GDK screen.
Color visuals and visuals with mutable colormaps are preferred
over grayscale or fixed-colormap visuals. The return value should not
be freed. %NULL may be returned if no visual supports @depth.</doc>
        <source-position filename="gdk/gdkvisual.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="389">best visual for the given depth</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="382">a bit depth</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_best_with_type"
                c:identifier="gdk_visual_get_best_with_type">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="409">Get the best visual of the given @visual_type for the default GDK screen.
Visuals with higher color depths are considered better. The return value
should not be freed. %NULL may be returned if no visual has type
@visual_type.</doc>
        <source-position filename="gdk/gdkvisual.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="418">best visual of the given type</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <parameter name="visual_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="411">a visual type</doc>
            <type name="VisualType" c:type="GdkVisualType"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_system" c:identifier="gdk_visual_get_system">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="49">Get the system's default visual for the default GDK screen.
This is the visual for the root window of the display.
The return value should not be freed.</doc>
        <source-position filename="gdk/gdkvisual.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="56">system visual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
      </function>
      <method name="get_bits_per_rgb"
              c:identifier="gdk_visual_get_bits_per_rgb"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="136">Returns the number of significant bits per red, green and blue value.</doc>
        <source-position filename="gdk/gdkvisual.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="142">The number of significant bits per color value for @visual.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="138">a #GdkVisual</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_blue_pixel_details"
              c:identifier="gdk_visual_get_blue_pixel_details"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="220">Obtains values that are needed to calculate blue pixel values in TrueColor
and DirectColor.  The "mask" is the significant bits within the pixel.
The "shift" is the number of bits left we must shift a primary for it
to be in position (according to the "mask").  Finally, "precision" refers
to how much precision the pixel value contains for a particular primary.</doc>
        <source-position filename="gdk/gdkvisual.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="222">a #GdkVisual</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="223">A pointer to a #guint32 to be filled in, or %NULL.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="shift"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="224">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="precision"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="225">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="gdk_visual_get_byte_order"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="100">Returns the byte order of this visual.</doc>
        <source-position filename="gdk/gdkvisual.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="106">A #GdkByteOrder stating the byte order of @visual.</doc>
          <type name="ByteOrder" c:type="GdkByteOrder"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="102">A #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_colormap_size"
              c:identifier="gdk_visual_get_colormap_size"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="118">Returns the size of a colormap for this visual.</doc>
        <source-position filename="gdk/gdkvisual.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="124">The size of a colormap that is suitable for @visual.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="120">A #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_depth"
              c:identifier="gdk_visual_get_depth"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="82">Returns the bit depth of this visual.</doc>
        <source-position filename="gdk/gdkvisual.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="88">The bit depth of this visual.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="84">A #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_green_pixel_details"
              c:identifier="gdk_visual_get_green_pixel_details"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="187">Obtains values that are needed to calculate green pixel values in TrueColor
and DirectColor.  The "mask" is the significant bits within the pixel.
The "shift" is the number of bits left we must shift a primary for it
to be in position (according to the "mask").  Finally, "precision" refers
to how much precision the pixel value contains for a particular primary.</doc>
        <source-position filename="gdk/gdkvisual.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="189">a #GdkVisual</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="190">A pointer to a #guint32 to be filled in, or %NULL.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="shift"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="191">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="precision"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="192">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_red_pixel_details"
              c:identifier="gdk_visual_get_red_pixel_details"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="154">Obtains values that are needed to calculate red pixel values in TrueColor
and DirectColor.  The "mask" is the significant bits within the pixel.
The "shift" is the number of bits left we must shift a primary for it
to be in position (according to the "mask").  Finally, "precision" refers
to how much precision the pixel value contains for a particular primary.</doc>
        <source-position filename="gdk/gdkvisual.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="156">A #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="157">A pointer to a #guint32 to be filled in, or %NULL.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="shift"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="158">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="precision"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="159">A pointer to a #gint to be filled in, or %NULL.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_visual_get_screen"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkvisual-x11.c"
             line="660">Gets the screen to which this visual belongs</doc>
        <source-position filename="gdk/gdkvisual.h" line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="666">the screen to which this visual belongs.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkvisual-x11.c"
                 line="662">a #GdkVisual</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visual_type"
              c:identifier="gdk_visual_get_visual_type"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="64">Returns the type of visual this is (PseudoColor, TrueColor, etc).</doc>
        <source-position filename="gdk/gdkvisual.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkvisual.c"
               line="70">A #GdkVisualType stating the type of @visual.</doc>
          <type name="VisualType" c:type="GdkVisualType"/>
        </return-value>
        <parameters>
          <instance-parameter name="visual" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkvisual.c"
                 line="66">A #GdkVisual.</doc>
            <type name="Visual" c:type="GdkVisual*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="type">
        <type name="VisualType" c:type="GdkVisualType"/>
      </field>
      <field name="depth">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="byte_order">
        <type name="ByteOrder" c:type="GdkByteOrder"/>
      </field>
      <field name="colormap_size">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="bits_per_rgb">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="red_mask">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="red_shift">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="red_prec">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="green_mask">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="green_shift">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="green_prec">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="blue_mask">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="blue_shift">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="blue_prec">
        <type name="gint" c:type="gint"/>
      </field>
    </class>
    <record name="VisualClass"
            c:type="GdkVisualClass"
            disguised="1"
            glib:is-gtype-struct-for="Visual">
      <source-position filename="gdk/gdkvisual.h" line="45"/>
    </record>
    <enumeration name="VisualType" c:type="GdkVisualType">
      <source-position filename="gdk/gdkvisual.h" line="63"/>
      <member name="static_gray"
              value="0"
              c:identifier="GDK_VISUAL_STATIC_GRAY">
      </member>
      <member name="grayscale" value="1" c:identifier="GDK_VISUAL_GRAYSCALE">
      </member>
      <member name="static_color"
              value="2"
              c:identifier="GDK_VISUAL_STATIC_COLOR">
      </member>
      <member name="pseudo_color"
              value="3"
              c:identifier="GDK_VISUAL_PSEUDO_COLOR">
      </member>
      <member name="true_color" value="4" c:identifier="GDK_VISUAL_TRUE_COLOR">
      </member>
      <member name="direct_color"
              value="5"
              c:identifier="GDK_VISUAL_DIRECT_COLOR">
      </member>
    </enumeration>
    <function-macro name="WINDOW" c:identifier="GDK_WINDOW" introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="256"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="WINDOW_CLASS"
                    c:identifier="GDK_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="257"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="WINDOW_DESTROYED"
                    c:identifier="GDK_WINDOW_DESTROYED"
                    introspectable="0">
      <source-position filename="gdk/gdkprivate.h" line="39"/>
      <parameters>
        <parameter name="d">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="WINDOW_GET_CLASS"
                    c:identifier="GDK_WINDOW_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="260"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="WINDOW_OBJECT"
                    c:identifier="GDK_WINDOW_OBJECT"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="263"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="WINDOW_TYPE"
                    c:identifier="GDK_WINDOW_TYPE"
                    introspectable="0">
      <source-position filename="gdk/gdkprivate.h" line="38"/>
      <parameters>
        <parameter name="d">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="WMDecoration" c:type="GdkWMDecoration">
      <source-position filename="gdk/gdkwindow.h" line="165"/>
      <member name="all" value="1" c:identifier="GDK_DECOR_ALL">
      </member>
      <member name="border" value="2" c:identifier="GDK_DECOR_BORDER">
      </member>
      <member name="resizeh" value="4" c:identifier="GDK_DECOR_RESIZEH">
      </member>
      <member name="title" value="8" c:identifier="GDK_DECOR_TITLE">
      </member>
      <member name="menu" value="16" c:identifier="GDK_DECOR_MENU">
      </member>
      <member name="minimize" value="32" c:identifier="GDK_DECOR_MINIMIZE">
      </member>
      <member name="maximize" value="64" c:identifier="GDK_DECOR_MAXIMIZE">
      </member>
    </bitfield>
    <bitfield name="WMFunction" c:type="GdkWMFunction">
      <source-position filename="gdk/gdkwindow.h" line="175"/>
      <member name="all" value="1" c:identifier="GDK_FUNC_ALL">
      </member>
      <member name="resize" value="2" c:identifier="GDK_FUNC_RESIZE">
      </member>
      <member name="move" value="4" c:identifier="GDK_FUNC_MOVE">
      </member>
      <member name="minimize" value="8" c:identifier="GDK_FUNC_MINIMIZE">
      </member>
      <member name="maximize" value="16" c:identifier="GDK_FUNC_MAXIMIZE">
      </member>
      <member name="close" value="32" c:identifier="GDK_FUNC_CLOSE">
      </member>
    </bitfield>
    <class name="Window"
           c:symbol-prefix="window_object"
           c:type="GdkWindow"
           parent="Drawable"
           glib:type-name="GdkWindow"
           glib:get-type="gdk_window_object_get_type">
      <method name="add_filter"
              c:identifier="gdk_window_add_filter"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2544">Adds an event filter to @window, allowing you to intercept events
before they reach GDK. This is a low-level operation and makes it
easy to break GDK and/or GTK+, so you have to know what you're
doing. Pass %NULL for @window to get all events for all windows,
instead of events for a specific window.

See gdk_display_add_client_message_filter() if you are interested
in X ClientMessage events.</doc>
        <source-position filename="gdk/gdkwindow.h" line="394"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2546">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="function" transfer-ownership="none" closure="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2547">filter callback</doc>
            <type name="FilterFunc" c:type="GdkFilterFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2548">data to pass to filter callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="beep" c:identifier="gdk_window_beep" version="2.12">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9806">Emits a short beep associated to @window in the appropriate
display, if supported. Otherwise, emits a short beep on
the display just as gdk_display_beep().</doc>
        <source-position filename="gdk/gdkwindow.h" line="635"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9808">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="begin_move_drag" c:identifier="gdk_window_begin_move_drag">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="5414">Begins a window move operation (for a toplevel window).  You might
use this function to implement a "window move grip," for
example. The function works best with window managers that support
the &lt;ulink url="http://www.freedesktop.org/Standards/wm-spec"&gt;Extended
Window Manager Hints&lt;/ulink&gt;, but has a fallback implementation for
other window managers.</doc>
        <source-position filename="gdk/gdkwindow.h" line="658"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5416">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5417">the button being used to drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="root_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5418">root window X coordinate of mouse click that began the drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="root_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5419">root window Y coordinate of mouse click that began the drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5420">timestamp of mouse click that began the drag</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_paint_rect"
              c:identifier="gdk_window_begin_paint_rect">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2910">A convenience wrapper around gdk_window_begin_paint_region() which
creates a rectangular region for you. See
gdk_window_begin_paint_region() for details.</doc>
        <source-position filename="gdk/gdkwindow.h" line="525"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2912">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2913">rectangle you intend to draw to</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_paint_region"
              c:identifier="gdk_window_begin_paint_region">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2933">Indicates that you are beginning the process of redrawing @region.
A backing store (offscreen buffer) large enough to contain @region
will be created. The backing store will be initialized with the
background color or background pixmap for @window. Then, all
drawing operations performed on @window will be diverted to the
backing store.  When you call gdk_window_end_paint(), the backing
store will be copied to @window, making it visible onscreen. Only
the part of @window contained in @region will be modified; that is,
drawing operations are clipped to @region.

The net result of all this is to remove flicker, because the user
sees the finished product appear all at once when you call
gdk_window_end_paint(). If you draw to @window directly without
calling gdk_window_begin_paint_region(), the user may see flicker
as individual drawing operations are performed in sequence.  The
clipping and background-initializing features of
gdk_window_begin_paint_region() are conveniences for the
programmer, so you can avoid doing that work yourself.

When using GTK+, the widget system automatically places calls to
gdk_window_begin_paint_region() and gdk_window_end_paint() around
emissions of the expose_event signal. That is, if you're writing an
expose event handler, you can assume that the exposed area in
#GdkEventExpose has already been cleared to the window background,
is already set as the clip region, and already has a backing store.
Therefore in most cases, application code need not call
gdk_window_begin_paint_region(). (You can disable the automatic
calls around expose events on a widget-by-widget basis by calling
gtk_widget_set_double_buffered().)

If you call this function multiple times before calling the
matching gdk_window_end_paint(), the backing stores are pushed onto
a stack. gdk_window_end_paint() copies the topmost backing store
onscreen, subtracts the topmost region from all other regions in
the stack, and pops the stack. All drawing operations affect only
the topmost backing store in the stack. One matching call to
gdk_window_end_paint() is required for each call to
gdk_window_begin_paint_region().</doc>
        <source-position filename="gdk/gdkwindow.h" line="527"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2935">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2936">region you intend to draw to</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_resize_drag"
              c:identifier="gdk_window_begin_resize_drag">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="5379">Begins a window resize operation (for a toplevel window).
You might use this function to implement a "window resize grip," for
example; in fact #GtkStatusbar uses it. The function works best
with window managers that support the &lt;ulink url="http://www.freedesktop.org/Standards/wm-spec"&gt;Extended Window Manager Hints&lt;/ulink&gt;, but has a
fallback implementation for other window managers.</doc>
        <source-position filename="gdk/gdkwindow.h" line="652"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5381">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5382">the edge or corner from which the drag is started</doc>
            <type name="WindowEdge" c:type="GdkWindowEdge"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5383">the button being used to drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="root_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5384">root window X coordinate of mouse click that began the drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="root_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5385">root window Y coordinate of mouse click that began the drag</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5386">timestamp of mouse click that began the drag (use gdk_event_get_time())</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="gdk_window_clear">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="4756">Clears an entire @window to the background color or background pixmap.</doc>
        <source-position filename="gdk/gdkwindow.h" line="366"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4758">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_area" c:identifier="gdk_window_clear_area">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="4872">Clears an area of @window to the background color or background pixmap.</doc>
        <source-position filename="gdk/gdkwindow.h" line="367"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4874">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4875">x coordinate of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4876">y coordinate of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4877">width of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4878">height of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_area_e" c:identifier="gdk_window_clear_area_e">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="4896">Like gdk_window_clear_area(), but also generates an expose event for
the cleared area.

This function has a stupid name because it dates back to the mists
time, pre-GDK-1.0.</doc>
        <source-position filename="gdk/gdkwindow.h" line="372"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4898">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4899">x coordinate of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4900">y coordinate of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4901">width of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="4902">height of rectangle to clear</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="configure_finished"
              c:identifier="gdk_window_configure_finished"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="5488">Signal to the window system that the application has finished
handling Configure events it has received. Window Managers can
use this to better synchronize the frame repaint with the
application. GTK+ applications will automatically call this
function when appropriate.

This function can only be called if gdk_window_enable_synchronized_configure()
was called previously.</doc>
        <source-position filename="gdk/gdkwindow.h" line="703"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5490">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="coords_from_parent"
              c:identifier="gdk_window_coords_from_parent"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8513">Transforms window coordinates from a parent window to a child
window, where the parent window is the normal parent as returned by
gdk_window_get_parent() for normal windows, and the window's
embedder as returned by gdk_offscreen_window_get_embedder() for
offscreen windows.

For normal windows, calling this function is equivalent to subtracting
the return values of gdk_window_get_position() from the parent coordinates.
For offscreen windows however (which can be arbitrarily transformed),
this function calls the GdkWindow::from-embedder: signal to translate
the coordinates.

You should always use this function when writing generic code that
walks down a window hierarchy.

See also: gdk_window_coords_to_parent()</doc>
        <source-position filename="gdk/gdkwindow.h" line="574"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8515">a child window</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="parent_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8516">X coordinate in parent's coordinate system</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="parent_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8517">Y coordinate in parent's coordinate system</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8518">return location for X coordinate in child's coordinate system</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8519">return location for Y coordinate in child's coordinate system</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="coords_to_parent"
              c:identifier="gdk_window_coords_to_parent"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8449">Transforms window coordinates from a child window to its parent
window, where the parent window is the normal parent as returned by
gdk_window_get_parent() for normal windows, and the window's
embedder as returned by gdk_offscreen_window_get_embedder() for
offscreen windows.

For normal windows, calling this function is equivalent to adding
the return values of gdk_window_get_position() to the child coordinates.
For offscreen windows however (which can be arbitrarily transformed),
this function calls the GdkWindow::to-embedder: signal to translate
the coordinates.

You should always use this function when writing generic code that
walks up a window hierarchy.

See also: gdk_window_coords_from_parent()</doc>
        <source-position filename="gdk/gdkwindow.h" line="569"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8451">a child window</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8452">X coordinate in child's coordinate system</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8453">Y coordinate in child's coordinate system</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="parent_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8454">return location for X coordinate
in parent's coordinate system, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="parent_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8456">return location for Y coordinate
in parent's coordinate system, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_similar_surface"
              c:identifier="gdk_window_create_similar_surface"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11243">Create a new surface that is as compatible as possible with the
given @window. For example the new surface will have the same
fallback resolution and font options as @window. Generally, the new
surface will also use the same backend as @window, unless that is
not possible for some reason. The type of the returned surface may
be examined with cairo_surface_get_type().

Initially the surface contents are all 0 (transparent if contents
have transparency, black otherwise.)</doc>
        <source-position filename="gdk/gdkwindow.h" line="630"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11260">a pointer to the newly allocated surface. The caller
owns the surface and should call cairo_surface_destroy() when done
with it.

This function always returns a valid pointer, but it will return a
pointer to a "nil" surface if @other is already in an error state
or any other error occurs.</doc>
          <type name="cairo.Surface" c:type="cairo_surface_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11245">window to make new surface similar to</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11246">the content for the new surface</doc>
            <type name="cairo.Content" c:type="cairo_content_t"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11247">width of the new surface</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11248">height of the new surface</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="deiconify" c:identifier="gdk_window_deiconify">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4040">Attempt to deiconify (unminimize) @window. On X11 the window manager may
choose to ignore the request to deiconify. When using GTK+,
use gtk_window_deiconify() instead of the #GdkWindow variant. Or better yet,
you probably want to use gtk_window_present(), which raises the window, focuses it,
unminimizes it, and puts it on the current desktop.</doc>
        <source-position filename="gdk/gdkwindow.h" line="637"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4042">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="gdk_window_destroy">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2206">Destroys the window system resources associated with @window and decrements @window's
reference count. The window system resources for all children of @window are also
destroyed, but the children's reference counts are not decremented.

Note that a window will not be destroyed automatically when its reference count
reaches zero. You must call this function yourself before that happens.</doc>
        <source-position filename="gdk/gdkwindow.h" line="335"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2208">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="destroy_notify" c:identifier="gdk_window_destroy_notify">
        <source-position filename="gdk/gdkprivate.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="enable_synchronized_configure"
              c:identifier="gdk_window_enable_synchronized_configure"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="5449">Indicates that the application will cooperate with the window
system in synchronizing the window repaint with the window
manager during resizing operations. After an application calls
this function, it must call gdk_window_configure_finished() every
time it has finished all processing associated with a set of
Configure events. Toplevel GTK+ windows automatically use this
protocol.

On X, calling this function makes @window participate in the
_NET_WM_SYNC_REQUEST window manager protocol.</doc>
        <source-position filename="gdk/gdkwindow.h" line="702"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5451">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="end_paint" c:identifier="gdk_window_end_paint">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="3115">Indicates that the backing store created by the most recent call to
gdk_window_begin_paint_region() should be copied onscreen and
deleted, leaving the next-most-recent backing store or no backing
store at all as the active paint region. See
gdk_window_begin_paint_region() for full details. It is an error to
call this function without a matching
gdk_window_begin_paint_region() first.</doc>
        <source-position filename="gdk/gdkwindow.h" line="529"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3117">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ensure_native"
              c:identifier="gdk_window_ensure_native"
              version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="1812">Tries to ensure that there is a window-system native window for this
GdkWindow. This may fail in some situations, returning %FALSE.

Offscreen window and children of them can never have native windows.

Some backends may not support native child windows.</doc>
        <source-position filename="gdk/gdkwindow.h" line="407"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="1823">%TRUE if the window has a native window, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1814">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="gdk_window_flush" version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="3542">Flush all outstanding cached operations on a window, leaving the
window in a state which reflects all that has been drawn before.

Gdk uses multiple kinds of caching to get better performance and
nicer drawing. For instance, during exposes all paints to a window
using double buffered rendering are keep on a pixmap until the last
window has been exposed. It also delays window moves/scrolls until
as long as possible until next update to avoid tearing when moving
windows.

Normally this should be completely invisible to applications, as
we automatically flush the windows when required, but this might
be needed if you for instance mix direct native drawing with
gdk drawing. For Gtk widgets that don't use double buffering this
will be called automatically before sending the expose event.</doc>
        <source-position filename="gdk/gdkwindow.h" line="530"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3544">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="focus" c:identifier="gdk_window_focus">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="1883">Sets keyboard focus to @window. In most cases, gtk_window_present()
should be used on a #GtkWindow, rather than calling this function.</doc>
        <source-position filename="gdk/gdkwindow.h" line="382"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1885">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1886">timestamp of the event triggering the window focus</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="freeze_toplevel_updates_libgtk_only"
              c:identifier="gdk_window_freeze_toplevel_updates_libgtk_only">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6319">Temporarily freezes a window and all its descendants such that it won't
receive expose events.  The window will begin receiving expose events
again when gdk_window_thaw_toplevel_updates_libgtk_only() is called. If
gdk_window_freeze_toplevel_updates_libgtk_only()
has been called more than once,
gdk_window_thaw_toplevel_updates_libgtk_only() must be called
an equal number of times to begin processing exposes.

This function is not part of the GDK public API and is only
for use by GTK+.</doc>
        <source-position filename="gdk/gdkwindow.h" line="680"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6321">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="freeze_updates" c:identifier="gdk_window_freeze_updates">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6275">Temporarily freezes a window such that it won't receive expose
events.  The window will begin receiving expose events again when
gdk_window_thaw_updates() is called. If gdk_window_freeze_updates()
has been called more than once, gdk_window_thaw_updates() must be called
an equal number of times to begin processing exposes.</doc>
        <source-position filename="gdk/gdkwindow.h" line="677"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6277">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fullscreen"
              c:identifier="gdk_window_fullscreen"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4242">Moves the window into fullscreen mode. This means the
window covers the entire screen and is above any panels
or task bars.

If the window was already fullscreen, then this function does nothing.

On X11, asks the window manager to put @window in a fullscreen
state, if the window manager supports this operation. Not all
window managers support this, and some deliberately ignore it or
don't have a concept of "fullscreen"; so you can't rely on the
fullscreenification actually happening. But it will happen with
most standard window managers, and GDK makes a best effort to get
it to happen.</doc>
        <source-position filename="gdk/gdkwindow.h" line="642"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4244">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="geometry_changed"
              c:identifier="gdk_window_geometry_changed"
              version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="10417">This function informs GDK that the geometry of an embedded
offscreen window has changed. This is necessary for GDK to keep
track of which offscreen window the pointer is in.</doc>
        <source-position filename="gdk/gdkwindow.h" line="712"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="10419">an embedded offscreen #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_accept_focus"
              c:identifier="gdk_window_get_accept_focus"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9207">Determines whether or not the desktop environment shuld be hinted that
the window does not want to receive input focus.</doc>
        <source-position filename="gdk/gdkwindow.h" line="388"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9214">whether or not the window should receive input focus.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9209">a toplevel #GdkWindow.</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background_pattern"
              c:identifier="gdk_window_get_background_pattern"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8144">Gets the pattern used to clear the background on @window. If @window
does not have its own background and reuses the parent's, %NULL is
returned and you'll have to query it yourself.</doc>
        <source-position filename="gdk/gdkwindow.h" line="545"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="8152">The pattern to use for the background or
    %NULL to use the parent's background.</doc>
          <type name="cairo.Pattern" c:type="cairo_pattern_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8146">a window</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children" c:identifier="gdk_window_get_children">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2497">Gets the list of children of @window known to GDK.
This function only returns children created via GDK,
so for example it's useless when used with the root window;
it only returns windows an application created itself.

The returned list must be freed, but the elements in the
list need not be.</doc>
        <source-position filename="gdk/gdkwindow.h" line="602"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2509">
    list of child windows inside @window</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Window"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2499">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_composited"
              c:identifier="gdk_window_get_composited"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9045">Determines whether @window is composited.

See gdk_window_set_composited().</doc>
        <source-position filename="gdk/gdkwindow.h" line="433"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9053">%TRUE if the window is composited.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9047">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cursor"
              c:identifier="gdk_window_get_cursor"
              glib:get-property="cursor"
              version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8194">Retrieves a #GdkCursor pointer for the cursor currently set on the
specified #GdkWindow, or %NULL.  If the return value is %NULL then
there is no custom cursor set on the specified window, and it is
using the cursor for its parent window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="549"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="8203">a #GdkCursor, or %NULL. The returned
  object is owned by the #GdkWindow and should not be unreferenced
  directly. Use gdk_window_set_cursor() to unset the cursor of the
  window</doc>
          <type name="Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8196">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decorations" c:identifier="gdk_window_get_decorations">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4590">Returns the decorations set on the GdkWindow with #gdk_window_set_decorations</doc>
        <source-position filename="gdk/gdkwindow.h" line="621"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="4596">TRUE if the window has decorations set, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4592">The toplevel #GdkWindow to get the decorations from</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="decorations" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4593">The window decorations will be written here</doc>
            <type name="WMDecoration" c:type="GdkWMDecoration*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_deskrelative_origin"
              c:identifier="gdk_window_get_deskrelative_origin">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8575">This gets the origin of a #GdkWindow relative to
an Enlightenment-window-manager desktop. As long as you don't
assume that the user's desktop/workspace covers the entire
root window (i.e. you don't assume that the desktop begins
at root window coordinate 0,0) this function is not necessary.
It's deprecated for that reason.</doc>
        <source-position filename="gdk/gdkwindow.h" line="582"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="8588">not meaningful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8577">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8578">return location for X coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8579">return location for Y coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gdk_window_get_display"
              version="2.24"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11309">Gets the #GdkDisplay associated with a #GdkWindow.</doc>
        <source-position filename="gdk/gdkwindow.h" line="340"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11315">the #GdkDisplay associated with @window</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11311">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_effective_parent"
              c:identifier="gdk_window_get_effective_parent"
              version="2.22"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2403">Obtains the parent of @window, as known to GDK. Works like
gdk_window_get_parent() for normal windows, but returns the
window's embedder for offscreen windows.

See also: gdk_offscreen_window_get_embedder()</doc>
        <source-position filename="gdk/gdkwindow.h" line="599"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2413">effective parent of @window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2405">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_effective_toplevel"
              c:identifier="gdk_window_get_effective_toplevel"
              version="2.22"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2468">Gets the toplevel window that's an ancestor of @window.

Works like gdk_window_get_toplevel(), but treats an offscreen window's
embedder as its parent, using gdk_window_get_effective_parent().

See also: gdk_offscreen_window_get_embedder()</doc>
        <source-position filename="gdk/gdkwindow.h" line="600"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2479">the effective toplevel window containing @window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2470">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_events" c:identifier="gdk_window_get_events">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7395">Gets the event mask for @window. See gdk_window_set_events().</doc>
        <source-position filename="gdk/gdkwindow.h" line="604"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="7401">event mask for @window</doc>
          <type name="EventMask" c:type="GdkEventMask"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7397">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_focus_on_map"
              c:identifier="gdk_window_get_focus_on_map"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9230">Determines whether or not the desktop environment should be hinted that the
window does not want to receive input focus when it is mapped.</doc>
        <source-position filename="gdk/gdkwindow.h" line="391"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9237">whether or not the window wants to receive input focus when
it is mapped.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9232">a toplevel #GdkWindow.</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frame_extents"
              c:identifier="gdk_window_get_frame_extents">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2966">Obtains the bounding box of the window, including window manager
titlebar/borders if any. The frame position is given in root window
coordinates. To get the position of the window itself (rather than
the frame) in root window coordinates, use gdk_window_get_origin().</doc>
        <source-position filename="gdk/gdkwindow.h" line="590"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2968">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2969">rectangle to fill with bounding box of the window frame</doc>
            <type name="Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_geometry" c:identifier="gdk_window_get_geometry">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8271">Any of the return location arguments to this function may be %NULL,
if you aren't interested in getting the value of that field.

The X and Y coordinates returned are relative to the parent window
of @window, which for toplevels usually means relative to the
window decorations (titlebar, etc.) rather than relative to the
root window (screen-size background window).

On the X11 platform, the geometry is obtained from the X server,
so reflects the latest position of @window; this may be out-of-sync
with the position of @window delivered in the most-recently-processed
#GdkEventConfigure. gdk_window_get_position() in contrast gets the
position from the most recent configure event.

&lt;note&gt;
If @window is not a toplevel, it is &lt;emphasis&gt;much&lt;/emphasis&gt; better
to call gdk_window_get_position() and gdk_drawable_get_size() instead,
because it avoids the roundtrip to the X server and because
gdk_drawable_get_size() supports the full 32-bit coordinate space,
whereas gdk_window_get_geometry() is restricted to the 16-bit
coordinates of X11.
&lt;/note&gt;</doc>
        <source-position filename="gdk/gdkwindow.h" line="552"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8273">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8274">return location for X coordinate of window (relative to its parent)</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8275">return location for Y coordinate of window (relative to its parent)</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8276">return location for width of window</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8277">return location for height of window</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8278">return location for bit depth of window</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_group"
              c:identifier="gdk_window_get_group"
              version="2.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4400">Returns the group leader window for @window. See gdk_window_set_group().</doc>
        <source-position filename="gdk/gdkwindow.h" line="618"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="4406">the group leader window for @window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4402">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdk_window_get_height"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11371">Returns the height of the given @window.

On the X11 platform the returned size is the size reported in the
most-recently-processed configure event, rather than the current
size on the X server.</doc>
        <source-position filename="gdk/gdkwindow.h" line="343"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11381">The height of @window</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11373">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_internal_paint_info"
              c:identifier="gdk_window_get_internal_paint_info">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="3641">If you bypass the GDK layer and use windowing system primitives to
draw directly onto a #GdkWindow, then you need to deal with two
details: there may be an offset between GDK coordinates and windowing
system coordinates, and GDK may have redirected drawing to a offscreen
pixmap as the result of a gdk_window_begin_paint_region() calls.
This function allows retrieving the information you need to compensate
for these effects.

This function exposes details of the GDK implementation, and is thus
likely to change in future releases of GDK.</doc>
        <source-position filename="gdk/gdkwindow.h" line="697"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3643">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="real_drawable"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3644">location to store the drawable to which drawing should be
           done.</doc>
            <type name="Drawable" c:type="GdkDrawable**"/>
          </parameter>
          <parameter name="x_offset"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3646">location to store the X offset between coordinates in @window,
           and the underlying window system primitive coordinates for
           *@real_drawable.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y_offset"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="3649">location to store the Y offset between coordinates in @window,
           and the underlying window system primitive coordinates for
           *@real_drawable.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_modal_hint"
              c:identifier="gdk_window_get_modal_hint"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9184">Determines whether or not the window manager is hinted that @window
has modal behaviour.</doc>
        <source-position filename="gdk/gdkwindow.h" line="507"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9191">whether or not the window has the modal hint set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9186">A toplevel #GdkWindow.</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin" c:identifier="gdk_window_get_origin">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8361">Obtains the position of a window in root window coordinates.
(Compare with gdk_window_get_position() and
gdk_window_get_geometry() which return the position of a window
relative to its parent window.)</doc>
        <source-position filename="gdk/gdkwindow.h" line="561"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="8372">not meaningful, ignore</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8363">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8364">return location for X coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8365">return location for Y coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="gdk_window_get_parent"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2377">Obtains the parent of @window, as known to GDK. Does not query the
X server; thus this returns the parent as passed to gdk_window_new(),
not the actual parent. This should never matter unless you're using
Xlib calls mixed with GDK calls on the X11 platform. It may also
matter for toplevel windows, because the window manager may choose
to reparent them.

Note that you should use gdk_window_get_effective_parent() when
writing generic code that walks up a window hierarchy, because
gdk_window_get_parent() will most likely not do what you expect if
there are offscreen windows in the hierarchy.</doc>
        <source-position filename="gdk/gdkwindow.h" line="596"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2393">parent of @window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2379">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer" c:identifier="gdk_window_get_pointer">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6529">Obtains the current pointer position and modifier state.
The position is given in coordinates relative to the upper left
corner of @window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="592"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6543">the window containing the pointer (as with
gdk_window_at_pointer()), or %NULL if the window containing the
pointer isn't known to GDK</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6531">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6532">return location for X coordinate of pointer or %NULL to not
     return the X coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6534">return location for Y coordinate of pointer or %NULL to not
     return the Y coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="mask"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6536">return location for modifier mask or %NULL to not return the
     modifier mask</doc>
            <type name="ModifierType" c:type="GdkModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position" c:identifier="gdk_window_get_position">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2345">Obtains the position of the window as reported in the
most-recently-processed #GdkEventConfigure. Contrast with
gdk_window_get_geometry() which queries the X server for the
current window position, regardless of which events have been
received or processed.

The position coordinates are relative to the window's parent window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="558"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2347">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2348">X coordinate of window</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2349">Y coordinate of window</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_root_coords"
              c:identifier="gdk_window_get_root_coords"
              version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8404">Obtains the position of a window position in root
window coordinates. This is similar to
gdk_window_get_origin() but allows you go pass
in any position in the window, not just the origin.</doc>
        <source-position filename="gdk/gdkwindow.h" line="564"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8406">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8407">X coordinate in window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8408">Y coordinate in window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="root_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8409">return location for X coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="root_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8410">return location for Y coordinate</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_root_origin" c:identifier="gdk_window_get_root_origin">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2940">Obtains the top-left corner of the window manager frame in root
window coordinates.</doc>
        <source-position filename="gdk/gdkwindow.h" line="587"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2942">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2943">return location for X position of window frame</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2944">return location for Y position of window frame</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_screen"
              c:identifier="gdk_window_get_screen"
              version="2.24"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11291">Gets the #GdkScreen associated with a #GdkWindow.</doc>
        <source-position filename="gdk/gdkwindow.h" line="339"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11297">the #GdkScreen associated with @window</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11293">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="gdk_window_get_state">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2751">Gets the bitwise OR of the currently active window state flags,
from the #GdkWindowState enumeration.</doc>
        <source-position filename="gdk/gdkwindow.h" line="469"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2758">window state bitfield</doc>
          <type name="WindowState" c:type="GdkWindowState"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2753">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toplevel"
              c:identifier="gdk_window_get_toplevel"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2432">Gets the toplevel window that's an ancestor of @window.

Any window type but %GDK_WINDOW_CHILD is considered a
toplevel window, as is a %GDK_WINDOW_CHILD window that
has a root window as parent.

Note that you should use gdk_window_get_effective_toplevel() when
you want to get to a window's toplevel as seen on screen, because
gdk_window_get_toplevel() will most likely not do what you expect
if there are offscreen windows in the hierarchy.</doc>
        <source-position filename="gdk/gdkwindow.h" line="597"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2447">the toplevel window containing @window</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2434">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_type_hint"
              c:identifier="gdk_window_get_type_hint"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2086">This function returns the type hint set for a window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="505"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="2092">The type hint set for @window</doc>
          <type name="WindowTypeHint" c:type="GdkWindowTypeHint"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2088">A toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_area"
              c:identifier="gdk_window_get_update_area"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6193">Transfers ownership of the update area from @window to the caller
of the function. That is, after calling this function, @window will
no longer have an invalid/dirty region; the update area is removed
from @window and handed to you. If a window has no update area,
gdk_window_get_update_area() returns %NULL. You are responsible for
calling gdk_region_destroy() on the returned region if it's non-%NULL.</doc>
        <source-position filename="gdk/gdkwindow.h" line="675"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6204">the update area for @window</doc>
          <type name="Region" c:type="GdkRegion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6195">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_data" c:identifier="gdk_window_get_user_data">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2248">Retrieves the user data for @window, which is normally the widget
that @window belongs to. See gdk_window_set_user_data().</doc>
        <source-position filename="gdk/gdkwindow.h" line="550"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2250">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2251">return location for user data</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_visual"
              c:identifier="gdk_window_get_visual"
              version="2.24"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11327">Gets the #GdkVisual describing the pixel format of @window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="341"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11333">a #GdkVisual</doc>
          <type name="Visual" c:type="GdkVisual*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11329">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdk_window_get_width"
              version="2.24">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="11345">Returns the width of the given @window.

On the X11 platform the returned size is the size reported in the
most-recently-processed configure event, rather than the current
size on the X server.</doc>
        <source-position filename="gdk/gdkwindow.h" line="342"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="11355">The width of @window</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="11347">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_window_type" c:identifier="gdk_window_get_window_type">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2266">Gets the type of the window. See #GdkWindowType.</doc>
        <source-position filename="gdk/gdkwindow.h" line="336"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2272">type of window</doc>
          <type name="WindowType" c:type="GdkWindowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2268">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_native"
              c:identifier="gdk_window_has_native"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2322">Checks whether the window has a native window or not. Note that
you can use gdk_window_ensure_native() if a native window is needed.</doc>
        <source-position filename="gdk/gdkwindow.h" line="492"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2329">%TRUE if the %window has a native window, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2324">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="gdk_window_hide">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7220">For toplevel windows, withdraws them, so they will no longer be
known to the window manager; for all windows, unmaps them, so
they won't be displayed. Normally done automatically as
part of gtk_widget_hide().</doc>
        <source-position filename="gdk/gdkwindow.h" line="348"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7222">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="iconify" c:identifier="gdk_window_iconify">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4004">Asks to iconify (minimize) @window. The window manager may choose
to ignore the request, but normally will honor it. Using
gtk_window_iconify() is preferred, if you have a #GtkWindow widget.

This function only makes sense when @window is a toplevel window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="636"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4006">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="input_shape_combine_mask"
              c:identifier="gdk_window_input_shape_combine_mask"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8828">Like gdk_window_shape_combine_mask(), but the shape applies
only to event handling. Mouse events which happen while
the pointer position corresponds to an unset bit in the
mask will be passed on the window below @window.

An input shape is typically used with RGBA windows.
The alpha channel of the window defines which pixels are
invisible and allows for nicely antialiased borders,
and the input shape controls where the window is
"clickable".

On the X11 platform, this requires version 1.1 of the
shape extension.

On the Win32 platform, this functionality is not present and the
function does nothing.</doc>
        <source-position filename="gdk/gdkwindow.h" line="446"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8830">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="mask"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8831">shape mask, or %NULL</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8832">X position of shape mask with respect to @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8833">Y position of shape mask with respect to @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="input_shape_combine_region"
              c:identifier="gdk_window_input_shape_combine_region"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8880">Like gdk_window_shape_combine_region(), but the shape applies
only to event handling. Mouse events which happen while
the pointer position corresponds to an unset bit in the
mask will be passed on the window below @window.

An input shape is typically used with RGBA windows.
The alpha channel of the window defines which pixels are
invisible and allows for nicely antialiased borders,
and the input shape controls where the window is
"clickable".

On the X11 platform, this requires version 1.1 of the
shape extension.

On the Win32 platform, this functionality is not present and the
function does nothing.</doc>
        <source-position filename="gdk/gdkwindow.h" line="450"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8882">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="shape_region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8883">region of window to be non-transparent</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
          <parameter name="offset_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8884">X position of @shape_region in @window coordinates</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="offset_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8885">Y position of @shape_region in @window coordinates</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate_maybe_recurse"
              c:identifier="gdk_window_invalidate_maybe_recurse">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6042">Adds @region to the update area for @window. The update area is the
region that needs to be redrawn, or "dirty region." The call
gdk_window_process_updates() sends one or more expose events to the
window, which together cover the entire update area. An
application would normally redraw the contents of @window in
response to those expose events.

GDK will call gdk_window_process_all_updates() on your behalf
whenever your program returns to the main loop and becomes idle, so
normally there's no need to do that manually, you just need to
invalidate regions that you know should be redrawn.

The @child_func parameter controls whether the region of
each child window that intersects @region will also be invalidated.
Only children for which @child_func returns TRUE will have the area
invalidated.</doc>
        <source-position filename="gdk/gdkwindow.h" line="671"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6044">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6045">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
          <parameter name="child_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6046">function to use to decide if to recurse to a child,
             %NULL means never recurse.</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6048">data passed to @child_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate_rect" c:identifier="gdk_window_invalidate_rect">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="5877">A convenience wrapper around gdk_window_invalidate_region() which
invalidates a rectangular region. See
gdk_window_invalidate_region() for details.</doc>
        <source-position filename="gdk/gdkwindow.h" line="665"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="5879">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="rect"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="5880">rectangle to invalidate or %NULL to invalidate the whole
     window</doc>
            <type name="Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
          <parameter name="invalidate_children" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="5882">whether to also invalidate child windows</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate_region"
              c:identifier="gdk_window_invalidate_region">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6097">Adds @region to the update area for @window. The update area is the
region that needs to be redrawn, or "dirty region." The call
gdk_window_process_updates() sends one or more expose events to the
window, which together cover the entire update area. An
application would normally redraw the contents of @window in
response to those expose events.

GDK will call gdk_window_process_all_updates() on your behalf
whenever your program returns to the main loop and becomes idle, so
normally there's no need to do that manually, you just need to
invalidate regions that you know should be redrawn.

The @invalidate_children parameter controls whether the region of
each child window that intersects @region will also be invalidated.
If %FALSE, then the update area for child windows will remain
unaffected. See gdk_window_invalidate_maybe_recurse if you need
fine grained control over which children are invalidated.</doc>
        <source-position filename="gdk/gdkwindow.h" line="668"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6099">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6100">a #GdkRegion</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
          <parameter name="invalidate_children" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6101">%TRUE to also invalidate child windows</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_destroyed"
              c:identifier="gdk_window_is_destroyed"
              version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2282">Check to see if a window is destroyed..</doc>
        <source-position filename="gdk/gdkwindow.h" line="337"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2288">%TRUE if the window is destroyed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2284">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_input_only"
              c:identifier="gdk_window_is_input_only"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9254">Determines whether or not the window is an input only window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="466"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9260">%TRUE if @window is input only</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9256">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_shaped"
              c:identifier="gdk_window_is_shaped"
              version="2.22">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9276">Determines whether or not the window is shaped.</doc>
        <source-position filename="gdk/gdkwindow.h" line="467"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9282">%TRUE if @window is shaped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9278">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_viewable" c:identifier="gdk_window_is_viewable">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2727">Check if the window and all ancestors of the window are
mapped. (This is not necessarily "viewable" in the X sense, since
we only check as far as we have GDK window parents, not to the root
window.)</doc>
        <source-position filename="gdk/gdkwindow.h" line="465"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2736">%TRUE if the window is viewable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2729">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible" c:identifier="gdk_window_is_visible">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2710">Checks whether the window has been mapped (with gdk_window_show() or
gdk_window_show_unraised()).</doc>
        <source-position filename="gdk/gdkwindow.h" line="464"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2717">%TRUE if the window is mapped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2712">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lower" c:identifier="gdk_window_lower">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7044">Lowers @window to the bottom of the Z-order (stacking order), so that
other windows with the same parent window appear above @window.
This is true whether or not the other windows are visible.

If @window is a toplevel, the window manager may choose to deny the
request to move the window in the Z-order, gdk_window_lower() only
requests the restack, does not guarantee it.

Note that gdk_window_show() raises the window again, so don't call this
function before gdk_window_show(). (Try gdk_window_show_unraised().)</doc>
        <source-position filename="gdk/gdkwindow.h" line="378"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7046">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="maximize" c:identifier="gdk_window_maximize">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4174">Maximizes the window. If the window was already maximized, then
this function does nothing.

On X11, asks the window manager to maximize @window, if the window
manager supports this operation. Not all window managers support
this, and some deliberately ignore it or don't have a concept of
"maximized"; so you can't rely on the maximization actually
happening. But it will happen with most standard window managers,
and GDK makes a best effort to get it to happen.

On Windows, reliably maximizes the window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="640"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4176">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="merge_child_input_shapes"
              c:identifier="gdk_window_merge_child_input_shapes"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8989">Merges the input shape masks for any child windows into the
input shape mask for @window. i.e. the union of all input masks
for @window and its children will become the new input mask
for @window. See gdk_window_input_shape_combine_mask().

This function is distinct from gdk_window_set_child_input_shapes()
because it includes @window's input shape mask in the set of
shapes to be merged.</doc>
        <source-position filename="gdk/gdkwindow.h" line="455"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8991">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="merge_child_shapes"
              c:identifier="gdk_window_merge_child_shapes">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8807">Merges the shape masks for any child windows into the
shape mask for @window. i.e. the union of all masks
for @window and its children will become the new mask
for @window. See gdk_window_shape_combine_mask().

This function is distinct from gdk_window_set_child_shapes()
because it includes @window's shape mask in the set of shapes to
be merged.</doc>
        <source-position filename="gdk/gdkwindow.h" line="444"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8809">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move" c:identifier="gdk_window_move">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7763">Repositions a window relative to its parent window.
For toplevel windows, window managers may ignore or modify the move;
you should probably use gtk_window_move() on a #GtkWindow widget
anyway, instead of using GDK functions. For child windows,
the move will reliably succeed.

If you're also planning to resize the window, use gdk_window_move_resize()
to both move and resize simultaneously, for a nicer visual effect.</doc>
        <source-position filename="gdk/gdkwindow.h" line="351"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7765">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7766">X coordinate relative to window's parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7767">Y coordinate relative to window's parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_region"
              c:identifier="gdk_window_move_region"
              version="2.8">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7959">Move the part of @window indicated by @region by @dy pixels in the Y
direction and @dx pixels in the X direction. The portions of @region
that not covered by the new position of @region are invalidated.

Child windows are not moved.</doc>
        <source-position filename="gdk/gdkwindow.h" line="403"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7961">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7962">The #GdkRegion to move</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7963">Amount to move in the X direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7964">Amount to move in the Y direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_resize" c:identifier="gdk_window_move_resize">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7810">Equivalent to calling gdk_window_move() and gdk_window_resize(),
except that both operations are performed at once, avoiding strange
visual effects. (i.e. the user may be able to see the window first
move, then resize, if you don't use gdk_window_move_resize().)</doc>
        <source-position filename="gdk/gdkwindow.h" line="357"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7812">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7813">new X position relative to window's parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7814">new Y position relative to window's parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7815">new width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7816">new height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="new" c:identifier="gdk_window_new">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="1279">Creates a new #GdkWindow using the attributes from
@attributes. See #GdkWindowAttr and #GdkWindowAttributesType for
more details.  Note: to use this on displays other than the default
display, @parent must be specified.</doc>
        <source-position filename="gdk/gdkwindow.h" line="332"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="1291">the new #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1281">a #GdkWindow, or %NULL to create the window as a child of
  the default root window for the default display.</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="attributes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1283">attributes of the new window</doc>
            <type name="WindowAttr" c:type="GdkWindowAttr*"/>
          </parameter>
          <parameter name="attributes_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1284">mask indicating which fields in @attributes are valid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_children" c:identifier="gdk_window_peek_children">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2523">Like gdk_window_get_children(), but does not copy the list of
children, so the list does not need to be freed.</doc>
        <source-position filename="gdk/gdkwindow.h" line="603"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="2530">
    a reference to the list of child windows in @window</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Window"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2525">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_updates" c:identifier="gdk_window_process_updates">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="5778">Sends one or more expose events to @window. The areas in each
expose event will cover the entire update area for the window (see
gdk_window_invalidate_region() for details). Normally GDK calls
gdk_window_process_all_updates() on your behalf, so there's no
need to call this function unless you want to force expose events
to be delivered immediately and synchronously (vs. the usual
case, where GDK delivers them in an idle handler). Occasionally
this is useful to produce nicer scrolling behavior, for example.</doc>
        <source-position filename="gdk/gdkwindow.h" line="684"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="5780">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="update_children" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="5781">whether to also process updates for child windows</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="raise" c:identifier="gdk_window_raise">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6908">Raises @window to the top of the Z-order (stacking order), so that
other windows with the same parent window appear below @window.
This is true whether or not the windows are visible.

If @window is a toplevel, the window manager may choose to deny the
request to move the window in the Z-order, gdk_window_raise() only
requests the restack, does not guarantee it.</doc>
        <source-position filename="gdk/gdkwindow.h" line="377"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6910">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redirect_to_drawable"
              c:identifier="gdk_window_redirect_to_drawable"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9318">Redirects drawing into @window so that drawing to the
window in the rectangle specified by @src_x, @src_y,
@width and @height is also drawn into @drawable at
@dest_x, @dest_y.

Only drawing between gdk_window_begin_paint_region() or
gdk_window_begin_paint_rect() and gdk_window_end_paint() is
redirected.

Redirection is active until gdk_window_remove_redirection()
is called.</doc>
        <source-position filename="gdk/gdkwindow.h" line="714"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9320">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9321">a #GdkDrawable</doc>
            <type name="Drawable" c:type="GdkDrawable*"/>
          </parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9322">x position in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9323">y position in @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9324">x position in @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9325">y position in @drawable</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9326">width of redirection, or -1 to use the width of @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9327">height of redirection or -1 to use the height of @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_dnd" c:identifier="gdk_window_register_dnd">
        <source-position filename="gdk/gdkwindow.h" line="650"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_filter"
              c:identifier="gdk_window_remove_filter"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2607">Remove a filter previously added with gdk_window_add_filter().</doc>
        <source-position filename="gdk/gdkwindow.h" line="397"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2609">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="function" transfer-ownership="none" closure="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2610">previously-added filter function</doc>
            <type name="FilterFunc" c:type="GdkFilterFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2611">user data for previously-added filter function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_redirection"
              c:identifier="gdk_window_remove_redirection"
              version="2.14">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9157">Removes any active redirection started by
gdk_window_redirect_to_drawable().</doc>
        <source-position filename="gdk/gdkwindow.h" line="722"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9159">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reparent" c:identifier="gdk_window_reparent">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="1563">Reparents @window into the given @new_parent. The window being
reparented will be unmapped as a side effect.</doc>
        <source-position filename="gdk/gdkwindow.h" line="362"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1565">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="new_parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1566">new parent to move @window into</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1567">X location inside the new parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="1568">Y location inside the new parent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="resize" c:identifier="gdk_window_resize">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7786">Resizes @window; for toplevel windows, asks the window manager to resize
the window. The window manager may not allow the resize. When using GTK+,
use gtk_window_resize() instead of this low-level GDK function.

Windows may not be resized below 1x1.

If you're also planning to move the window, use gdk_window_move_resize()
to both move and resize simultaneously, for a nicer visual effect.</doc>
        <source-position filename="gdk/gdkwindow.h" line="354"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7788">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7789">new width of the window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7790">new height of the window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="restack" c:identifier="gdk_window_restack" version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7081">Changes the position of  @window in the Z-order (stacking order), so that
it is above @sibling (if @above is %TRUE) or below @sibling (if @above is
%FALSE).

If @sibling is %NULL, then this either raises (if @above is %TRUE) or
lowers the window.

If @window is a toplevel, the window manager may choose to deny the
request to move the window in the Z-order, gdk_window_restack() only
requests the restack, does not guarantee it.</doc>
        <source-position filename="gdk/gdkwindow.h" line="379"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7083">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7084">a #GdkWindow that is a sibling of @window, or %NULL</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="above" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7085">a boolean</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll" c:identifier="gdk_window_scroll">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7834">Scroll the contents of @window, both pixels and children, by the
given amount. @window itself does not move. Portions of the window
that the scroll operation brings in from offscreen areas are
invalidated. The invalidated region may be bigger than what would
strictly be necessary.

For X11, a minimum area will be invalidated if the window has no
subwindows, or if the edges of the window's parent do not extend
beyond the edges of the window. In other cases, a multi-step process
is used to scroll the window which may produce temporary visual
artifacts and unnecessary invalidations.</doc>
        <source-position filename="gdk/gdkwindow.h" line="400"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7836">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7837">Amount to scroll in the X direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7838">Amount to scroll in the Y direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_accept_focus"
              c:identifier="gdk_window_set_accept_focus"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3626">Setting @accept_focus to %FALSE hints the desktop environment that the
window doesn't want to receive input focus.

On X, it is the responsibility of the window manager to interpret this
hint. ICCCM-compliant window manager usually respect it.</doc>
        <source-position filename="gdk/gdkwindow.h" line="389"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3628">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="accept_focus" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3629">%TRUE if the window should receive input focus</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_back_pixmap" c:identifier="gdk_window_set_back_pixmap">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8071">Sets the background pixmap of @window. May also be used to set a
background of "None" on @window, by setting a background pixmap
of %NULL.

A background pixmap will be tiled, positioning the first tile at
the origin of @window, or if @parent_relative is %TRUE, the tiling
will be done based on the origin of the parent window (useful to
align tiles in a parent with tiles in a child).

A background pixmap of %NULL means that the window will have no
background.  A window with no background will never have its
background filled by the windowing system, instead the window will
contain whatever pixels were already in the corresponding area of
the display.

The windowing system will normally fill a window with its background
when the window is obscured then exposed, and when you call
gdk_window_clear().</doc>
        <source-position filename="gdk/gdkwindow.h" line="542"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8073">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="pixmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8074">a #GdkPixmap, or %NULL</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
          <parameter name="parent_relative" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8075">whether the tiling origin is at the origin of
  @window's parent</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background" c:identifier="gdk_window_set_background">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8019">Sets the background color of @window. (However, when using GTK+,
set the background of a widget with gtk_widget_modify_bg() - if
you're an application - or gtk_style_set_background() - if you're
implementing a custom widget.)

The @color must be allocated; gdk_rgb_find_color() is the best way
to allocate a color.

See also gdk_window_set_back_pixmap().</doc>
        <source-position filename="gdk/gdkwindow.h" line="540"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8021">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8022">an allocated #GdkColor</doc>
            <type name="Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_input_shapes"
              c:identifier="gdk_window_set_child_input_shapes"
              version="2.10">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8970">Sets the input shape mask of @window to the union of input shape masks
for all children of @window, ignoring the input shape mask of @window
itself. Contrast with gdk_window_merge_child_input_shapes() which includes
the input shape mask of @window in the masks to be merged.</doc>
        <source-position filename="gdk/gdkwindow.h" line="454"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8972">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child_shapes"
              c:identifier="gdk_window_set_child_shapes">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8790">Sets the shape mask of @window to the union of shape masks
for all children of @window, ignoring the shape mask of @window
itself. Contrast with gdk_window_merge_child_shapes() which includes
the shape mask of @window in the masks to be merged.</doc>
        <source-position filename="gdk/gdkwindow.h" line="431"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8792">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_composited"
              c:identifier="gdk_window_set_composited"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9069">Sets a #GdkWindow as composited, or unsets it. Composited
windows do not automatically have their contents drawn to
the screen. Drawing is redirected to an offscreen buffer
and an expose event is emitted on the parent of the composited
window. It is the responsibility of the parent's expose handler
to manually merge the off-screen content onto the screen in
whatever way it sees fit. See &lt;xref linkend="composited-window-example"/&gt;
for an example.

It only makes sense for child windows to be composited; see
gdk_window_set_opacity() if you need translucent toplevel
windows.

An additional effect of this call is that the area of this
window is no longer clipped from regions marked for
invalidation on its parent. Draws done on the parent
window are also no longer clipped by the child.

This call is only supported on some systems (currently,
only X11 with new enough Xcomposite and Xdamage extensions).
You must call gdk_display_supports_composite() to check if
setting a window as composited is supported before
attempting to do so.</doc>
        <source-position filename="gdk/gdkwindow.h" line="434"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9071">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="composited" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9072">%TRUE to set the window as composited</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor"
              c:identifier="gdk_window_set_cursor"
              glib:set-property="cursor">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8222">Sets the mouse pointer for a #GdkWindow. Use gdk_cursor_new_for_display()
or gdk_cursor_new_from_pixmap() to create the cursor. To make the cursor
invisible, use %GDK_BLANK_CURSOR. Passing %NULL for the @cursor argument
to gdk_window_set_cursor() means that @window will use the cursor of its
parent window. Most windows should use this default.</doc>
        <source-position filename="gdk/gdkwindow.h" line="547"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8224">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="cursor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8225">a cursor</doc>
            <type name="Cursor" c:type="GdkCursor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decorations" c:identifier="gdk_window_set_decorations">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4551">"Decorations" are the features the window manager adds to a toplevel #GdkWindow.
This function sets the traditional Motif window manager hints that tell the
window manager which decorations you would like your window to have.
Usually you should use gtk_window_set_decorated() on a #GtkWindow instead of
using the GDK function directly.

The @decorations argument is the logical OR of the fields in
the #GdkWMDecoration enumeration. If #GDK_DECOR_ALL is included in the
mask, the other bits indicate which decorations should be turned off.
If #GDK_DECOR_ALL is not included, then the other bits indicate
which decorations should be turned on.

Most window managers honor a decorations hint of 0 to disable all decorations,
but very few honor all possible combinations of bits.</doc>
        <source-position filename="gdk/gdkwindow.h" line="619"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4553">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="decorations" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4554">decoration hint mask</doc>
            <type name="WMDecoration" c:type="GdkWMDecoration"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_events" c:identifier="gdk_window_set_events">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7354">The event mask for a window determines which events will be reported
for that window. For example, an event mask including #GDK_BUTTON_PRESS_MASK
means the window should report button press events. The event mask
is the bitwise OR of values from the #GdkEventMask enumeration.</doc>
        <source-position filename="gdk/gdkwindow.h" line="605"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7356">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="event_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7357">event mask for @window</doc>
            <type name="EventMask" c:type="GdkEventMask"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_focus_on_map"
              c:identifier="gdk_window_set_focus_on_map"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3659">Setting @focus_on_map to %FALSE hints the desktop environment that the
window doesn't want to receive input focus when it is mapped.
focus_on_map should be turned off for windows that aren't triggered
interactively (such as popups from network activity).

On X, it is the responsibility of the window manager to interpret
this hint. Window managers following the freedesktop.org window
manager extension specification should respect it.</doc>
        <source-position filename="gdk/gdkwindow.h" line="392"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3661">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="focus_on_map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3662">%TRUE if the window should receive input focus when mapped</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_functions" c:identifier="gdk_window_set_functions">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4626">Sets hints about the window management functions to make available
via buttons on the window frame.

On the X backend, this function sets the traditional Motif window
manager hint for this purpose. However, few window managers do
anything reliable or interesting with this hint. Many ignore it
entirely.

The @functions argument is the logical OR of values from the
#GdkWMFunction enumeration. If the bitmask includes #GDK_FUNC_ALL,
then the other bits indicate which functions to disable; if
it doesn't include #GDK_FUNC_ALL, it indicates which functions to
enable.</doc>
        <source-position filename="gdk/gdkwindow.h" line="623"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4628">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="functions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4629">bitmask of operations to allow on @window</doc>
            <type name="WMFunction" c:type="GdkWMFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_geometry_hints"
              c:identifier="gdk_window_set_geometry_hints">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2325">Sets the geometry hints for @window. Hints flagged in @geom_mask
are set, hints not flagged in @geom_mask are unset.
To unset all hints, use a @geom_mask of 0 and a @geometry of %NULL.

This function provides hints to the windowing system about
acceptable sizes for a toplevel window. The purpose of
this is to constrain user resizing, but the windowing system
will typically  (but is not required to) also constrain the
current size of the window to the provided values and
constrain programatic resizing via gdk_window_resize() or
gdk_window_move_resize().

Note that on X11, this effect has no effect on windows
of type %GDK_WINDOW_TEMP or windows where override redirect
has been turned on via gdk_window_set_override_redirect()
since these windows are not resizable by the user.

Since you can't count on the windowing system doing the
constraints for programmatic resizes, you should generally
call gdk_window_constrain_size() yourself to determine
appropriate sizes.</doc>
        <source-position filename="gdk/gdkwindow.h" line="518"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2327">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="geometry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2328">geometry hints</doc>
            <type name="Geometry" c:type="const GdkGeometry*"/>
          </parameter>
          <parameter name="geom_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2329">bitmask indicating fields of @geometry to pay attention to</doc>
            <type name="WindowHints" c:type="GdkWindowHints"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_group" c:identifier="gdk_window_set_group">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4424">Sets the group leader window for @window. By default,
GDK sets the group leader for all toplevel windows
to a global window implicitly created by GDK. With this function
you can override this default.

The group leader window allows the window manager to distinguish
all windows that belong to a single application. It may for example
allow users to minimize/unminimize all windows belonging to an
application at once. You should only set a non-default group window
if your application pretends to be multiple applications.</doc>
        <source-position filename="gdk/gdkwindow.h" line="616"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4426">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="leader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4427">group leader window, or %NULL to restore the default group leader window</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hints" c:identifier="gdk_window_set_hints">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="1940">This function is broken and useless and you should ignore it.
If using GTK+, use functions such as gtk_window_resize(), gtk_window_set_size_request(),
gtk_window_move(), gtk_window_parse_geometry(), and gtk_window_set_geometry_hints(),
depending on what you're trying to do.

If using GDK directly, use gdk_window_set_geometry_hints().</doc>
        <source-position filename="gdk/gdkwindow.h" line="494"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1942">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1943">ignored field, does not matter</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1944">ignored field, does not matter</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="min_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1945">minimum width hint</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="min_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1946">minimum height hint</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="max_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1947">max width hint</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="max_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1948">max height hint</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="1949">logical OR of GDK_HINT_POS, GDK_HINT_MIN_SIZE, and/or GDK_HINT_MAX_SIZE</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon" c:identifier="gdk_window_set_icon">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3887">Sets the icon of @window as a pixmap or window. If using GTK+, investigate
gtk_window_set_default_icon_list() first, and then gtk_window_set_icon_list()
and gtk_window_set_icon(). If those don't meet your needs, look at
gdk_window_set_icon_list(). Only if all those are too high-level do you
want to fall back to gdk_window_set_icon().</doc>
        <source-position filename="gdk/gdkwindow.h" line="610"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3889">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="icon_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3890">a #GdkWindow to use for the icon, or %NULL to unset</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="pixmap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3891">a #GdkPixmap to use as the icon, or %NULL to unset</doc>
            <type name="Pixmap" c:type="GdkPixmap*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3892">a 1-bit pixmap (#GdkBitmap) to use as mask for @pixmap, or %NULL to have none</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_list" c:identifier="gdk_window_set_icon_list">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3767">Sets a list of icons for the window. One of these will be used
to represent the window when it has been iconified. The icon is
usually shown in an icon box or some sort of task bar. Which icon
size is shown depends on the window manager. The window manager
can scale the icon  but setting several size icons can give better
image quality since the window manager may only need to scale the
icon by a small amount or not at all.</doc>
        <source-position filename="gdk/gdkwindow.h" line="608"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3769">The #GdkWindow toplevel window to set the icon of.</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="pixbufs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3770">
    A list of pixbufs, of different sizes.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="GdkPixbuf.Pixbuf"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name" c:identifier="gdk_window_set_icon_name">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3950">Windows may have a name used while minimized, distinct from the
name they display in their titlebar. Most of the time this is a bad
idea from a user interface standpoint. But you can set such a name
with this function, if you like.

After calling this with a non-%NULL @name, calls to gdk_window_set_title()
will not update the icon title.

Using %NULL for @name unsets the icon title; further calls to
gdk_window_set_title() will again update the icon title as well.</doc>
        <source-position filename="gdk/gdkwindow.h" line="614"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3952">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3953">name of window while iconified (minimized)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keep_above"
              c:identifier="gdk_window_set_keep_above"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4315">Set if @window must be kept above other windows. If the
window was already above, then this function does nothing.

On X11, asks the window manager to keep @window above, if the window
manager supports this operation. Not all window managers support
this, and some deliberately ignore it or don't have a concept of
"keep above"; so you can't rely on the window being kept above.
But it will happen with most standard window managers,
and GDK makes a best effort to get it to happen.</doc>
        <source-position filename="gdk/gdkwindow.h" line="644"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4317">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4318">whether to keep @window above other windows</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keep_below"
              c:identifier="gdk_window_set_keep_below"
              version="2.4">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4358">Set if @window must be kept below other windows. If the
window was already below, then this function does nothing.

On X11, asks the window manager to keep @window below, if the window
manager supports this operation. Not all window managers support
this, and some deliberately ignore it or don't have a concept of
"keep below"; so you can't rely on the window being kept below.
But it will happen with most standard window managers,
and GDK makes a best effort to get it to happen.</doc>
        <source-position filename="gdk/gdkwindow.h" line="646"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4360">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4361">whether to keep @window below other windows</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modal_hint" c:identifier="gdk_window_set_modal_hint">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2192">The application can use this hint to tell the window manager
that a certain window has modal behaviour. The window manager
can use this information to handle modal windows in a special
way.

You should only use this on windows for which you have
previously called gdk_window_set_transient_for()</doc>
        <source-position filename="gdk/gdkwindow.h" line="508"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2194">A toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="modal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2195">%TRUE if the window is modal, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_opacity"
              c:identifier="gdk_window_set_opacity"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="5555">Request the windowing system to make @window partially transparent,
with opacity 0 being fully transparent and 1 fully opaque. (Values
of the opacity parameter are clamped to the [0,1] range.)

On X11, this works only on X screens with a compositing manager
running.

For setting up per-pixel alpha, see gdk_screen_get_rgba_colormap().
For making non-toplevel windows translucent, see
gdk_window_set_composited().</doc>
        <source-position filename="gdk/gdkwindow.h" line="648"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5557">a top-level #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="5558">opacity</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_override_redirect"
              c:identifier="gdk_window_set_override_redirect">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="3589">An override redirect window is not under the control of the window manager.
This means it won't have a titlebar, won't be minimizable, etc. - it will
be entirely under the control of the application. The window manager
can't see the override redirect window at all.

Override redirect should only be used for short-lived temporary
windows, such as popup menus. #GtkMenu uses an override redirect
window in its implementation, for example.</doc>
        <source-position filename="gdk/gdkwindow.h" line="386"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3591">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="override_redirect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="3592">%TRUE if window should be override redirect</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_role" c:identifier="gdk_window_set_role">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2650">When using GTK+, typically you should use gtk_window_set_role() instead
of this low-level function.

The window manager and session manager use a window's role to
distinguish it from other kinds of window in the same application.
When an application is restarted after being saved in a previous
session, all windows with the same title and role are treated as
interchangeable.  So if you have two windows with the same title
that should be distinguished for session management purposes, you
should set the role on those windows. It doesn't matter what string
you use for the role, as long as you have a different role for each
non-interchangeable kind of window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="534"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2652">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2653">a string indicating its role</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_skip_pager_hint"
              c:identifier="gdk_window_set_skip_pager_hint"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2260">Toggles whether a window should appear in a pager (workspace
switcher, or other desktop utility program that displays a small
thumbnail representation of the windows on the desktop). If a
window's semantic type as specified with gdk_window_set_type_hint()
already fully describes the window, this function should
&lt;emphasis&gt;not&lt;/emphasis&gt; be called in addition, instead you should
allow the window to be treated according to standard policy for
its semantic type.</doc>
        <source-position filename="gdk/gdkwindow.h" line="513"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2262">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="skips_pager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2263">%TRUE to skip the pager</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_skip_taskbar_hint"
              c:identifier="gdk_window_set_skip_taskbar_hint"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2225">Toggles whether a window should appear in a task list or window
list. If a window's semantic type as specified with
gdk_window_set_type_hint() already fully describes the window, this
function should &lt;emphasis&gt;not&lt;/emphasis&gt; be called in addition,
instead you should allow the window to be treated according to
standard policy for its semantic type.</doc>
        <source-position filename="gdk/gdkwindow.h" line="511"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2227">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="skips_taskbar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2228">%TRUE to skip the taskbar</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_startup_id"
              c:identifier="gdk_window_set_startup_id"
              version="2.12">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2690">When using GTK+, typically you should use gtk_window_set_startup_id()
instead of this low-level function.</doc>
        <source-position filename="gdk/gdkwindow.h" line="536"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2692">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="startup_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2693">a string with startup-notification identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_static_gravities"
              c:identifier="gdk_window_set_static_gravities">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="9013">Set the bit gravity of the given window to static, and flag it so
all children get static subwindow gravity. This is used if you are
implementing scary features that involve deep knowledge of the
windowing system. Don't worry about it unless you have to.</doc>
        <source-position filename="gdk/gdkwindow.h" line="474"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="9023">%TRUE if the server supports static gravity</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9015">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="use_static" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="9016">%TRUE to turn on static gravity</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title" c:identifier="gdk_window_set_title">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2606">Sets the title of a toplevel window, to be displayed in the titlebar.
If you haven't explicitly set the icon name for the window
(using gdk_window_set_icon_name()), the icon name will be set to
@title as well. @title must be in UTF-8 encoding (as with all
user-readable strings in GDK/GTK+). @title may not be %NULL.</doc>
        <source-position filename="gdk/gdkwindow.h" line="532"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2608">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2609">title of @window</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transient_for"
              c:identifier="gdk_window_set_transient_for">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2725">Indicates to the window manager that @window is a transient dialog
associated with the application window @parent. This allows the
window manager to do things like center @window on @parent and
keep @window above @parent.

See gtk_window_set_transient_for() if you're using #GtkWindow or
#GtkDialog.</doc>
        <source-position filename="gdk/gdkwindow.h" line="538"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2727">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2728">another toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type_hint" c:identifier="gdk_window_set_type_hint">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2006">The application can use this call to provide a hint to the window
manager about the functionality of a window. The window manager
can use this information when determining the decoration and behaviour
of the window.

The hint must be set before the window is mapped.</doc>
        <source-position filename="gdk/gdkwindow.h" line="503"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2008">A toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2009">A hint of the function this window will have</doc>
            <type name="WindowTypeHint" c:type="GdkWindowTypeHint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_urgency_hint"
              c:identifier="gdk_window_set_urgency_hint"
              version="2.8">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="2297">Toggles whether a window needs the user's
urgent attention.</doc>
        <source-position filename="gdk/gdkwindow.h" line="515"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2299">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="urgent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="2300">%TRUE if the window is urgent</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_data" c:identifier="gdk_window_set_user_data">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2225">For most purposes this function is deprecated in favor of
g_object_set_data(). However, for historical reasons GTK+ stores
the #GtkWidget that owns a #GdkWindow as user data on the
#GdkWindow. So, custom widget implementations should use
this function for that. If GTK+ receives an event for a #GdkWindow,
and the user data for the window is non-%NULL, GTK+ will assume the
user data is a #GtkWidget, and forward the event to that widget.</doc>
        <source-position filename="gdk/gdkwindow.h" line="384"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2227">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="2228">user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="shape_combine_mask"
              c:identifier="gdk_window_shape_combine_mask">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8619">Applies a shape mask to @window. Pixels in @window corresponding to
set bits in the @mask will be visible; pixels in @window
corresponding to unset bits in the @mask will be transparent. This
gives a non-rectangular window.

If @mask is %NULL, the shape mask will be unset, and the @x/@y
parameters are not used.

On the X11 platform, this uses an X server extension which is
widely available on most common platforms, but not available on
very old X servers, and occasionally the implementation will be
buggy. On servers without the shape extension, this function
will do nothing.

This function works on both toplevel and child windows.</doc>
        <source-position filename="gdk/gdkwindow.h" line="415"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8621">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8622">shape mask</doc>
            <type name="Bitmap" c:type="GdkBitmap*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8623">X position of shape mask with respect to @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8624">Y position of shape mask with respect to @window</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="shape_combine_region"
              c:identifier="gdk_window_shape_combine_region">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="8668">Makes pixels in @window outside @shape_region be transparent,
so that the window may be nonrectangular. See also
gdk_window_shape_combine_mask() to use a bitmap as the mask.

If @shape_region is %NULL, the shape will be unset, so the whole
window will be opaque again. @offset_x and @offset_y are ignored
if @shape_region is %NULL.

On the X11 platform, this uses an X server extension which is
widely available on most common platforms, but not available on
very old X servers, and occasionally the implementation will be
buggy. On servers without the shape extension, this function
will do nothing.

This function works on both toplevel and child windows.</doc>
        <source-position filename="gdk/gdkwindow.h" line="419"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8670">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
          <parameter name="shape_region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8671">region of window to be non-transparent</doc>
            <type name="Region" c:type="const GdkRegion*"/>
          </parameter>
          <parameter name="offset_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8672">X position of @shape_region in @window coordinates</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="offset_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="8673">Y position of @shape_region in @window coordinates</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="gdk_window_show">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7200">Like gdk_window_show_unraised(), but also raises the window to the
top of the window stack (moves the window to the front of the
Z-order).

This function maps a window so it's visible onscreen. Its opposite
is gdk_window_hide().

When implementing a #GtkWidget, you should call this function on the widget's
#GdkWindow as part of the "map" method.</doc>
        <source-position filename="gdk/gdkwindow.h" line="347"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7202">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_unraised" c:identifier="gdk_window_show_unraised">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6890">Shows a #GdkWindow onscreen, but does not modify its stacking
order. In contrast, gdk_window_show() will raise the window
to the top of the window stack.

On the X11 platform, in Xlib terms, this function calls
XMapWindow() (it also updates some internal GDK state, which means
that you can't really use XMapWindow() directly on a GDK window).</doc>
        <source-position filename="gdk/gdkwindow.h" line="350"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6892">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stick" c:identifier="gdk_window_stick">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4077">"Pins" a window such that it's on all workspaces and does not scroll
with viewports, for window managers that have scrollable viewports.
(When using #GtkWindow, gtk_window_stick() may be more useful.)

On the X11 platform, this function depends on window manager
support, so may have no effect with many window managers. However,
GDK will do the best it can to convince the window manager to stick
the window. For window managers that don't support this operation,
there's nothing you can do to force it to happen.</doc>
        <source-position filename="gdk/gdkwindow.h" line="638"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4079">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thaw_toplevel_updates_libgtk_only"
              c:identifier="gdk_window_thaw_toplevel_updates_libgtk_only">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6345">Thaws a window frozen with
gdk_window_freeze_toplevel_updates_libgtk_only().

This function is not part of the GDK public API and is only
for use by GTK+.</doc>
        <source-position filename="gdk/gdkwindow.h" line="681"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6347">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thaw_updates" c:identifier="gdk_window_thaw_updates">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6297">Thaws a window frozen with gdk_window_freeze_updates().</doc>
        <source-position filename="gdk/gdkwindow.h" line="678"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="6299">a #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unfullscreen"
              c:identifier="gdk_window_unfullscreen"
              version="2.2">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4280">Moves the window out of fullscreen mode. If the window was not
fullscreen, does nothing.

On X11, asks the window manager to move @window out of the fullscreen
state, if the window manager supports this operation. Not all
window managers support this, and some deliberately ignore it or
don't have a concept of "fullscreen"; so you can't rely on the
unfullscreenification actually happening. But it will happen with
most standard window managers, and GDK makes a best effort to get
it to happen.</doc>
        <source-position filename="gdk/gdkwindow.h" line="643"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4282">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unmaximize" c:identifier="gdk_window_unmaximize">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4208">Unmaximizes the window. If the window wasn't maximized, then this
function does nothing.

On X11, asks the window manager to unmaximize @window, if the
window manager supports this operation. Not all window managers
support this, and some deliberately ignore it or don't have a
concept of "maximized"; so you can't rely on the unmaximization
actually happening. But it will happen with most standard window
managers, and GDK makes a best effort to get it to happen.

On Windows, reliably unmaximizes the window.</doc>
        <source-position filename="gdk/gdkwindow.h" line="641"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4210">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unstick" c:identifier="gdk_window_unstick">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="4140">Reverse operation for gdk_window_stick(); see gdk_window_stick(),
and gtk_window_unstick().</doc>
        <source-position filename="gdk/gdkwindow.h" line="639"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/x11/gdkwindow-x11.c"
                 line="4142">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="withdraw" c:identifier="gdk_window_withdraw">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="7311">Withdraws a window (unmaps it and asks the window manager to forget about it).
This function is not really useful as gdk_window_hide() automatically
withdraws toplevel windows before hiding them.</doc>
        <source-position filename="gdk/gdkwindow.h" line="349"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="7313">a toplevel #GdkWindow</doc>
            <type name="Window" c:type="GdkWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="cursor"
                version="2.18"
                writable="1"
                transfer-ownership="none"
                setter="set_cursor"
                getter="get_cursor">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="485">The mouse pointer for a #GdkWindow. See gdk_window_set_cursor() and
gdk_window_get_cursor() for details.</doc>
        <type name="Cursor"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="from-embedder" when="last" version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="558">The ::from-embedder signal is emitted to translate coordinates
in the embedder of an offscreen window to the offscreen window.

See also #GtkWindow::to-embedder.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="embedder-x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="561">x coordinate in the embedder window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="embedder-y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="562">y coordinate in the embedder window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="offscreen-x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="563">return location for the x
    coordinate in the offscreen window</doc>
            <type name="gdouble" c:type="gpointer"/>
          </parameter>
          <parameter name="offscreen-y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="565">return location for the y
    coordinate in the offscreen window</doc>
            <type name="gdouble" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pick-embedded-child" when="last" version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="501">The ::pick-embedded-child signal is emitted to find an embedded
child at the given position.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="510">the #GdkWindow of the embedded child at
    @x, @y, or %NULL</doc>
          <type name="Window"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="504">x coordinate in the window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="505">y coordinate in the window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="to-embedder" when="last" version="2.18">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="527">The ::to-embedder signal is emitted to translate coordinates
in an offscreen window to its embedder.

See also #GtkWindow::from-embedder.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="offscreen-x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="530">x coordinate in the offscreen window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="offscreen-y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="531">y coordinate in the offscreen window</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="embedder-x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="532">return location for the x
    coordinate in the embedder window</doc>
            <type name="gdouble" c:type="gpointer"/>
          </parameter>
          <parameter name="embedder-y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk/gdkwindow.c"
                 line="534">return location for the y
    coordinate in the embedder window</doc>
            <type name="gdouble" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="WindowAttr" c:type="GdkWindowAttr">
      <source-position filename="gdk/gdkwindow.h" line="224"/>
      <field name="title" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="event_mask" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="x" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="width" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="height" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="wclass" writable="1">
        <type name="WindowClass" c:type="GdkWindowClass"/>
      </field>
      <field name="visual" writable="1">
        <type name="Visual" c:type="GdkVisual*"/>
      </field>
      <field name="colormap" writable="1">
        <type name="Colormap" c:type="GdkColormap*"/>
      </field>
      <field name="window_type" writable="1">
        <type name="WindowType" c:type="GdkWindowType"/>
      </field>
      <field name="cursor" writable="1">
        <type name="Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="wmclass_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="wmclass_class" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="override_redirect" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="type_hint" writable="1">
        <type name="WindowTypeHint" c:type="GdkWindowTypeHint"/>
      </field>
    </record>
    <bitfield name="WindowAttributesType" c:type="GdkWindowAttributesType">
      <source-position filename="gdk/gdkwindow.h" line="103"/>
      <member name="title" value="2" c:identifier="GDK_WA_TITLE">
      </member>
      <member name="x" value="4" c:identifier="GDK_WA_X">
      </member>
      <member name="y" value="8" c:identifier="GDK_WA_Y">
      </member>
      <member name="cursor" value="16" c:identifier="GDK_WA_CURSOR">
      </member>
      <member name="colormap" value="32" c:identifier="GDK_WA_COLORMAP">
      </member>
      <member name="visual" value="64" c:identifier="GDK_WA_VISUAL">
      </member>
      <member name="wmclass" value="128" c:identifier="GDK_WA_WMCLASS">
      </member>
      <member name="noredir" value="256" c:identifier="GDK_WA_NOREDIR">
      </member>
      <member name="type_hint" value="512" c:identifier="GDK_WA_TYPE_HINT">
      </member>
    </bitfield>
    <enumeration name="WindowClass" c:type="GdkWindowClass">
      <source-position filename="gdk/gdkwindow.h" line="58"/>
      <member name="output" value="0" c:identifier="GDK_INPUT_OUTPUT">
      </member>
      <member name="only" value="1" c:identifier="GDK_INPUT_ONLY">
      </member>
    </enumeration>
    <enumeration name="WindowEdge" c:type="GdkWindowEdge">
      <source-position filename="gdk/gdkwindow.h" line="206"/>
      <member name="north_west"
              value="0"
              c:identifier="GDK_WINDOW_EDGE_NORTH_WEST">
      </member>
      <member name="north" value="1" c:identifier="GDK_WINDOW_EDGE_NORTH">
      </member>
      <member name="north_east"
              value="2"
              c:identifier="GDK_WINDOW_EDGE_NORTH_EAST">
      </member>
      <member name="west" value="3" c:identifier="GDK_WINDOW_EDGE_WEST">
      </member>
      <member name="east" value="4" c:identifier="GDK_WINDOW_EDGE_EAST">
      </member>
      <member name="south_west"
              value="5"
              c:identifier="GDK_WINDOW_EDGE_SOUTH_WEST">
      </member>
      <member name="south" value="6" c:identifier="GDK_WINDOW_EDGE_SOUTH">
      </member>
      <member name="south_east"
              value="7"
              c:identifier="GDK_WINDOW_EDGE_SOUTH_EAST">
      </member>
    </enumeration>
    <bitfield name="WindowHints" c:type="GdkWindowHints">
      <source-position filename="gdk/gdkwindow.h" line="118"/>
      <member name="pos" value="1" c:identifier="GDK_HINT_POS">
      </member>
      <member name="min_size" value="2" c:identifier="GDK_HINT_MIN_SIZE">
      </member>
      <member name="max_size" value="4" c:identifier="GDK_HINT_MAX_SIZE">
      </member>
      <member name="base_size" value="8" c:identifier="GDK_HINT_BASE_SIZE">
      </member>
      <member name="aspect" value="16" c:identifier="GDK_HINT_ASPECT">
      </member>
      <member name="resize_inc" value="32" c:identifier="GDK_HINT_RESIZE_INC">
      </member>
      <member name="win_gravity"
              value="64"
              c:identifier="GDK_HINT_WIN_GRAVITY">
      </member>
      <member name="user_pos" value="128" c:identifier="GDK_HINT_USER_POS">
      </member>
      <member name="user_size" value="256" c:identifier="GDK_HINT_USER_SIZE">
      </member>
    </bitfield>
    <record name="WindowObject" c:type="GdkWindowObject" disguised="1">
      <source-position filename="gdk/gdkwindow.h" line="252"/>
    </record>
    <record name="WindowObjectClass" c:type="GdkWindowObjectClass">
      <source-position filename="gdk/gdkwindow.h" line="327"/>
      <field name="parent_class" writable="1">
        <type name="DrawableClass" c:type="GdkDrawableClass"/>
      </field>
    </record>
    <record name="WindowRedirect" c:type="GdkWindowRedirect" disguised="1">
      <source-position filename="gdk/gdkwindow.h" line="43"/>
    </record>
    <bitfield name="WindowState" c:type="GdkWindowState">
      <source-position filename="gdk/gdkevents.h" line="250"/>
      <member name="withdrawn"
              value="1"
              c:identifier="GDK_WINDOW_STATE_WITHDRAWN">
      </member>
      <member name="iconified"
              value="2"
              c:identifier="GDK_WINDOW_STATE_ICONIFIED">
      </member>
      <member name="maximized"
              value="4"
              c:identifier="GDK_WINDOW_STATE_MAXIMIZED">
      </member>
      <member name="sticky" value="8" c:identifier="GDK_WINDOW_STATE_STICKY">
      </member>
      <member name="fullscreen"
              value="16"
              c:identifier="GDK_WINDOW_STATE_FULLSCREEN">
      </member>
      <member name="above" value="32" c:identifier="GDK_WINDOW_STATE_ABOVE">
      </member>
      <member name="below" value="64" c:identifier="GDK_WINDOW_STATE_BELOW">
      </member>
    </bitfield>
    <enumeration name="WindowType" c:type="GdkWindowType">
      <source-position filename="gdk/gdkwindow.h" line="82"/>
      <member name="root" value="0" c:identifier="GDK_WINDOW_ROOT">
      </member>
      <member name="toplevel" value="1" c:identifier="GDK_WINDOW_TOPLEVEL">
      </member>
      <member name="child" value="2" c:identifier="GDK_WINDOW_CHILD">
      </member>
      <member name="dialog" value="3" c:identifier="GDK_WINDOW_DIALOG">
      </member>
      <member name="temp" value="4" c:identifier="GDK_WINDOW_TEMP">
      </member>
      <member name="foreign" value="5" c:identifier="GDK_WINDOW_FOREIGN">
      </member>
      <member name="offscreen" value="6" c:identifier="GDK_WINDOW_OFFSCREEN">
      </member>
    </enumeration>
    <enumeration name="WindowTypeHint" c:type="GdkWindowTypeHint">
      <source-position filename="gdk/gdkwindow.h" line="149"/>
      <member name="normal"
              value="0"
              c:identifier="GDK_WINDOW_TYPE_HINT_NORMAL">
      </member>
      <member name="dialog"
              value="1"
              c:identifier="GDK_WINDOW_TYPE_HINT_DIALOG">
      </member>
      <member name="menu" value="2" c:identifier="GDK_WINDOW_TYPE_HINT_MENU">
      </member>
      <member name="toolbar"
              value="3"
              c:identifier="GDK_WINDOW_TYPE_HINT_TOOLBAR">
      </member>
      <member name="splashscreen"
              value="4"
              c:identifier="GDK_WINDOW_TYPE_HINT_SPLASHSCREEN">
      </member>
      <member name="utility"
              value="5"
              c:identifier="GDK_WINDOW_TYPE_HINT_UTILITY">
      </member>
      <member name="dock" value="6" c:identifier="GDK_WINDOW_TYPE_HINT_DOCK">
      </member>
      <member name="desktop"
              value="7"
              c:identifier="GDK_WINDOW_TYPE_HINT_DESKTOP">
      </member>
      <member name="dropdown_menu"
              value="8"
              c:identifier="GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU">
      </member>
      <member name="popup_menu"
              value="9"
              c:identifier="GDK_WINDOW_TYPE_HINT_POPUP_MENU">
      </member>
      <member name="tooltip"
              value="10"
              c:identifier="GDK_WINDOW_TYPE_HINT_TOOLTIP">
      </member>
      <member name="notification"
              value="11"
              c:identifier="GDK_WINDOW_TYPE_HINT_NOTIFICATION">
      </member>
      <member name="combo"
              value="12"
              c:identifier="GDK_WINDOW_TYPE_HINT_COMBO">
      </member>
      <member name="dnd" value="13" c:identifier="GDK_WINDOW_TYPE_HINT_DND">
      </member>
    </enumeration>
    <function name="add_client_message_filter"
              c:identifier="gdk_add_client_message_filter"
              introspectable="0">
      <source-position filename="gdk/gdkevents.h" line="556"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="message_type" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" closure="2">
          <type name="FilterFunc" c:type="GdkFilterFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="add_option_entries_libgtk_only"
              c:identifier="gdk_add_option_entries_libgtk_only">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="173">Appends gdk option entries to the passed in option group. This is
not public API and must not be used by applications.</doc>
      <source-position filename="gdk/gdk.h" line="75"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="group" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="175">An option group.</doc>
          <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
        </parameter>
      </parameters>
    </function>
    <function name="beep" c:identifier="gdk_beep">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="338">Emits a short beep on the default display.</doc>
      <source-position filename="gdk/gdk.h" line="140"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="cairo_create"
              c:identifier="gdk_cairo_create"
              version="2.8">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="33">Creates a Cairo context for drawing to @drawable.

&lt;note&gt;&lt;para&gt;
Note that due to double-buffering, Cairo contexts created
in a GTK+ expose event handler cannot be cached and reused
between different expose events.
&lt;/para&gt;&lt;/note&gt;</doc>
      <source-position filename="gdk/gdkcairo.h" line="33"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkcairo.c"
             line="45">A newly created Cairo context. Free with
 cairo_destroy() when you are done drawing.</doc>
        <type name="cairo.Context" c:type="cairo_t*"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="35">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_rectangle"
              c:identifier="gdk_cairo_rectangle"
              version="2.8">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="125">Adds the given rectangle to the current path of @cr.</doc>
      <source-position filename="gdk/gdkcairo.h" line="52"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="127">a #cairo_t</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="rectangle" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="128">a #GdkRectangle</doc>
          <type name="Rectangle" c:type="const GdkRectangle*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_region"
              c:identifier="gdk_cairo_region"
              version="2.8">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="146">Adds the given region to the current path of @cr.</doc>
      <source-position filename="gdk/gdkcairo.h" line="54"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="148">a #cairo_t</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="region" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="149">a #GdkRegion</doc>
          <type name="Region" c:type="const GdkRegion*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_reset_clip"
              c:identifier="gdk_cairo_reset_clip"
              version="2.18">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="75">Resets the clip region for a Cairo context created by gdk_cairo_create().

This resets the clip region to the "empty" state for the given drawable.
This is required for non-native windows since a direct call to
cairo_reset_clip() would unset the clip region inherited from the
drawable (i.e. the window clip region), and thus let you e.g.
draw outside your window.

This is rarely needed though, since most code just create a new cairo_t
using gdk_cairo_create() each time they want to draw something.</doc>
      <source-position filename="gdk/gdkcairo.h" line="34"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="77">a #cairo_t</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="78">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_set_source_color"
              c:identifier="gdk_cairo_set_source_color"
              version="2.8">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="103">Sets the specified #GdkColor as the source color of @cr.</doc>
      <source-position filename="gdk/gdkcairo.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="105">a #cairo_t</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="106">a #GdkColor</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_set_source_pixbuf"
              c:identifier="gdk_cairo_set_source_pixbuf"
              version="2.8">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="176">Sets the given pixbuf as the source pattern for the Cairo context.
The pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned
so that the origin of @pixbuf is @pixbuf_x, @pixbuf_y</doc>
      <source-position filename="gdk/gdkcairo.h" line="39"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="178">a #Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="179">a #GdkPixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="const GdkPixbuf*"/>
        </parameter>
        <parameter name="pixbuf_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="180">X coordinate of location to place upper left corner of @pixbuf</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
        <parameter name="pixbuf_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="181">Y coordinate of location to place upper left corner of @pixbuf</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_set_source_pixmap"
              c:identifier="gdk_cairo_set_source_pixmap"
              version="2.10"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="288">Sets the given pixmap as the source pattern for the Cairo context.
The pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned
so that the origin of @pixmap is @pixmap_x, @pixmap_y</doc>
      <doc-deprecated xml:space="preserve">This function is being removed in GTK+ 3 (together
    with #GdkPixmap). Instead, use gdk_cairo_set_source_window() where
    appropriate.</doc-deprecated>
      <source-position filename="gdk/gdkcairo.h" line="43"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="290">a #Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="pixmap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="291">a #GdkPixmap</doc>
          <type name="Pixmap" c:type="GdkPixmap*"/>
        </parameter>
        <parameter name="pixmap_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="292">X coordinate of location to place upper left corner of @pixmap</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
        <parameter name="pixmap_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="293">Y coordinate of location to place upper left corner of @pixmap</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_set_source_window"
              c:identifier="gdk_cairo_set_source_window"
              version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkcairo.c"
           line="318">Sets the given window as the source pattern for the Cairo context.
The pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned
so that the origin of @window is @x, @y. The window contains all its
subwindows when rendering.

Note that the contents of @window are undefined outside of the
visible part of @window, so use this function with care.</doc>
      <source-position filename="gdk/gdkcairo.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="320">a #Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="321">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="322">X coordinate of location to place upper left corner of @window</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcairo.c"
               line="323">Y coordinate of location to place upper left corner of @window</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="char_height"
              c:identifier="gdk_char_height"
              deprecated="1"
              deprecated-version="2.2">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="299">Determines the total height of a given character.
This value is not generally useful, because you cannot
determine how this total height will be drawn in
relation to the baseline. See gdk_text_extents().</doc>
      <doc-deprecated xml:space="preserve">Use gdk_text_extents() instead.</doc-deprecated>
      <source-position filename="gdk/gdkfont.h" line="103"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="309">the height of the character in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="301">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="character" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="302">the character to measure.</doc>
          <type name="gchar" c:type="gchar"/>
        </parameter>
      </parameters>
    </function>
    <function name="char_measure" c:identifier="gdk_char_measure">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="229">Determines the distance from the origin to the rightmost
portion of a character when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces.</doc>
      <source-position filename="gdk/gdkfont.h" line="96"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="239">the right bearing of the character in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="231">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="character" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="232">the character to measure.</doc>
          <type name="gchar" c:type="gchar"/>
        </parameter>
      </parameters>
    </function>
    <function name="char_width"
              c:identifier="gdk_char_width"
              deprecated="1"
              deprecated-version="2.2">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="110">Determines the width of a given character.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_text_extents() instead.</doc-deprecated>
      <source-position filename="gdk/gdkfont.h" line="87"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="117">the width of the character in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="112">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="character" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="113">the character to measure.</doc>
          <type name="gchar" c:type="gchar"/>
        </parameter>
      </parameters>
    </function>
    <function name="char_width_wc" c:identifier="gdk_char_width_wc">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="130">Determines the width of a given wide character. (Encoded
in the wide-character encoding of the current locale).</doc>
      <source-position filename="gdk/gdkfont.h" line="89"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="138">the width of the character in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="132">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="character" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="133">the character to measure.</doc>
          <type name="WChar" c:type="GdkWChar"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_alloc"
              c:identifier="gdk_color_alloc"
              moved-to="Color.alloc"
              deprecated="1"
              deprecated-version="2.2">
      <doc xml:space="preserve"
           filename="gdk/gdkcolor.c"
           line="244">Allocates a single color from a colormap.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_colormap_alloc_color() instead.</doc-deprecated>
      <source-position filename="gdk/gdkcolor.h" line="154"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="252">%TRUE if the allocation succeeded.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="246">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="247">The color to allocate. On return, the
   &lt;structfield&gt;pixel&lt;/structfield&gt; field will be filled in.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_black"
              c:identifier="gdk_color_black"
              moved-to="Color.black">
      <doc xml:space="preserve"
           filename="gdk/gdkcolor.c"
           line="178">Returns the black color for a given colormap. The resulting
value has already been allocated.</doc>
      <source-position filename="gdk/gdkcolor.h" line="152"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="186">%TRUE if the allocation succeeded.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="180">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="181">the location to store the color.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_change"
              c:identifier="gdk_color_change"
              moved-to="Color.change">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkcolor-x11.c"
           line="1211">Changes the value of a color that has already
been allocated. If @colormap is not a private
colormap, then the color must have been allocated
using gdk_colormap_alloc_colors() with the
@writeable set to %TRUE.</doc>
      <source-position filename="gdk/gdkcolor.h" line="156"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="1224">%TRUE if the color was successfully changed.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="1213">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="1214">a #GdkColor, with the color to change
in the &lt;structfield&gt;pixel&lt;/structfield&gt; field,
and the new value in the remaining fields.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_parse"
              c:identifier="gdk_color_parse"
              moved-to="Color.parse">
      <doc xml:space="preserve"
           filename="gdk/gdkcolor.c"
           line="318">Parses a textual specification of a color and fill in the
&lt;structfield&gt;red&lt;/structfield&gt;, &lt;structfield&gt;green&lt;/structfield&gt;,
and &lt;structfield&gt;blue&lt;/structfield&gt; fields of a #GdkColor
structure. The color is &lt;emphasis&gt;not&lt;/emphasis&gt; allocated, you
must call gdk_colormap_alloc_color() yourself. The string can
either one of a large set of standard names. (Taken from the X11
&lt;filename&gt;rgb.txt&lt;/filename&gt; file), or it can be a hex value in the
form '&amp;num;rgb' '&amp;num;rrggbb' '&amp;num;rrrgggbbb' or
'&amp;num;rrrrggggbbbb' where 'r', 'g' and 'b' are hex digits of the
red, green, and blue components of the color, respectively. (White
in the four forms is '&amp;num;fff' '&amp;num;ffffff' '&amp;num;fffffffff' and
'&amp;num;ffffffffffff')</doc>
      <source-position filename="gdk/gdkcolor.h" line="136"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="336">%TRUE if the parsing succeeded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="spec" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="320">the string specifying the color.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="color"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="321">the #GdkColor to fill in</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_white"
              c:identifier="gdk_color_white"
              moved-to="Color.white">
      <doc xml:space="preserve"
           filename="gdk/gdkcolor.c"
           line="146">Returns the white color for a given colormap. The resulting
value has already allocated been allocated.</doc>
      <source-position filename="gdk/gdkcolor.h" line="150"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkcolor.c"
             line="154">%TRUE if the allocation succeeded.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="148">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="149">the location to store the color.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="colors_alloc" c:identifier="gdk_colors_alloc">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkcolor-x11.c"
           line="526">Allocates colors from a colormap. This function
is obsolete. See gdk_colormap_alloc_colors().
For full documentation of the fields, see
the Xlib documentation for &lt;function&gt;XAllocColorCells()&lt;/function&gt;.</doc>
      <source-position filename="gdk/gdkcolor.h" line="162"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkcolor-x11.c"
             line="542">%TRUE if the allocation was successful</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="528">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="contiguous" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="529">if %TRUE, the colors should be allocated
   in contiguous color cells.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="planes" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="531">an array in which to store the plane masks.</doc>
          <type name="gulong" c:type="gulong*"/>
        </parameter>
        <parameter name="nplanes" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="532">the number of planes to allocate. (Or zero,
   to indicate that the color allocation should not be planar.)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="pixels" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="534">an array into which to store allocated pixel values.</doc>
          <type name="gulong" c:type="gulong*"/>
        </parameter>
        <parameter name="npixels" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="535">the number of pixels in each plane to allocate.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="colors_free" c:identifier="gdk_colors_free">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkcolor-x11.c"
           line="583">Frees colors allocated with gdk_colors_alloc(). This
function is obsolete. See gdk_colormap_free_colors().</doc>
      <source-position filename="gdk/gdkcolor.h" line="168"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="585">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="pixels" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="586">the pixel values of the colors to free.</doc>
          <type name="gulong" c:type="gulong*"/>
        </parameter>
        <parameter name="npixels" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="587">the number of values in @pixels.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="planes" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkcolor-x11.c"
               line="588">the plane masks for all planes to free, OR'd together.</doc>
          <type name="gulong" c:type="gulong"/>
        </parameter>
      </parameters>
    </function>
    <function name="colors_store" c:identifier="gdk_colors_store">
      <doc xml:space="preserve"
           filename="gdk/gdkcolor.c"
           line="82">Changes the value of the first @ncolors colors in
a private colormap. This function is obsolete and
should not be used. See gdk_color_change().</doc>
      <source-position filename="gdk/gdkcolor.h" line="147"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="84">a #GdkColormap.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="colors" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="85">the new color values.</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
        <parameter name="ncolors" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkcolor.c"
               line="86">the number of colors to change.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="devices_list" c:identifier="gdk_devices_list">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkinput.c"
           line="140">Returns the list of available input devices for the default display.
The list is statically allocated and should not be freed.</doc>
      <source-position filename="gdk/gdkinput.h" line="130"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkinput.c"
             line="146">a list of #GdkDevice</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="Device"/>
        </type>
      </return-value>
    </function>
    <function name="drag_abort" c:identifier="gdk_drag_abort">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3693">Aborts a drag without dropping.

This function is called by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="180"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3695">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3696">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_begin"
              c:identifier="gdk_drag_begin"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3179">Starts a drag and creates a new drag context for it.

This function is called by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="141"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="3189">a newly created #GdkDragContext.</doc>
        <type name="DragContext" c:type="GdkDragContext*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3181">the source window for this drag.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="targets" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3182">the offered targets,
    as list of #GdkAtom&lt;!-- --&gt;s</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Atom"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="drag_drop" c:identifier="gdk_drag_drop">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3653">Drops on the current destination.

This function is called by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="178"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3655">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3656">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_drop_succeeded"
              c:identifier="gdk_drag_drop_succeeded"
              version="2.6">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="4019">Returns whether the dropped data has been successfully
transferred. This function is intended to be used while
handling a %GDK_DROP_FINISHED event, its return value is
meaningless at other times.</doc>
      <source-position filename="gdk/gdkdnd.h" line="182"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="4028">%TRUE if the drop was successful.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="4021">a #GdkDragContext</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_find_window"
              c:identifier="gdk_drag_find_window"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkdnd.c"
           line="33">Finds the destination window and DND protocol to use at the
given pointer position.

This function is called by the drag source to obtain the
@dest_window and @protocol parameters for gdk_drag_motion().</doc>
      <doc-deprecated xml:space="preserve">Use gdk_drag_find_window_for_screen() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdnd.h" line="161"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="35">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="drag_window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="36">a window which may be at the pointer position, but
     should be ignored, since it is put up by the drag source as an icon.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="x_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="38">the x position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="39">the y position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dest_window"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="40">location to store the destination window in.</doc>
          <type name="Window" c:type="GdkWindow**"/>
        </parameter>
        <parameter name="protocol"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="41">location to store the DND protocol in.</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_find_window_for_screen"
              c:identifier="gdk_drag_find_window_for_screen"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3364">Finds the destination window and DND protocol to use at the
given pointer position.

This function is called by the drag source to obtain the
@dest_window and @protocol parameters for gdk_drag_motion().</doc>
      <source-position filename="gdk/gdkdnd.h" line="148"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3366">a #GdkDragContext</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="drag_window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3367">a window which may be at the pointer position, but
should be ignored, since it is put up by the drag source as an icon.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="screen" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3369">the screen where the destination window is sought.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </parameter>
        <parameter name="x_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3370">the x position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3371">the y position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dest_window"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3372">location to store the destination window in.</doc>
          <type name="Window" c:type="GdkWindow**"/>
        </parameter>
        <parameter name="protocol"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3373">location to store the DND protocol in.</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_get_protocol"
              c:identifier="gdk_drag_get_protocol"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkdnd.c"
           line="64">Finds out the DND protocol supported by a window.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_drag_get_protocol_for_display() instead</doc-deprecated>
      <source-position filename="gdk/gdkdnd.h" line="158"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkdnd.c"
             line="71">the windowing system specific id for the window where
   the drop should happen. This may be @xid or the id of a proxy
   window, or zero if @xid doesn't support Drag and Drop.</doc>
        <type name="NativeWindow" c:type="GdkNativeWindow"/>
      </return-value>
      <parameters>
        <parameter name="xid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="66">the windowing system id of the destination window.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdnd.c"
               line="67">location where the supported DND protocol is returned.</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_get_protocol_for_display"
              c:identifier="gdk_drag_get_protocol_for_display"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3322">Finds out the DND protocol supported by a window.</doc>
      <source-position filename="gdk/gdkdnd.h" line="144"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="3327">the windowing system id of the window where the drop should happen. This
    may be @xid or the id of a proxy window, or zero if @xid doesn't
    support Drag and Drop.</doc>
        <type name="NativeWindow" c:type="GdkNativeWindow"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3324">the #GdkDisplay where the destination window resides</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="xid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3325">the windowing system id of the destination window.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3326">location where the supported DND protocol is returned.</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_get_selection"
              c:identifier="gdk_drag_get_selection"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3997">Returns the selection atom for the current source window.</doc>
      <source-position filename="gdk/gdkdnd.h" line="137"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="4003">the selection atom.</doc>
        <type name="Atom" c:type="GdkAtom"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3999">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_motion" c:identifier="gdk_drag_motion">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3442">Updates the drag context when the pointer moves or the
set of actions changes.

This function is called by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="170"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkdnd-x11.c"
             line="3459">FIXME</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3444">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="dest_window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3445">the new destination window, obtained by
    gdk_drag_find_window().</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3447">the DND protocol in use, obtained by gdk_drag_find_window().</doc>
          <type name="DragProtocol" c:type="GdkDragProtocol"/>
        </parameter>
        <parameter name="x_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3448">the x position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_root" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3449">the y position of the pointer in root coordinates.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="suggested_action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3450">the suggested action.</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </parameter>
        <parameter name="possible_actions" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3451">the possible actions.</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3452">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="drag_status" c:identifier="gdk_drag_status">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3713">Selects one of the actions offered by the drag source.

This function is called by the drag destination in response to
gdk_drag_motion() called by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="128"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3715">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3716">the selected action which will be taken when a drop happens,
   or 0 to indicate that a drop will not be accepted.</doc>
          <type name="DragAction" c:type="GdkDragAction"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3718">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_arc"
              c:identifier="gdk_draw_arc"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="450">Draws an arc or a filled 'pie slice'. The arc is defined by the bounding
rectangle of the entire ellipse, and the start and end angles of the part
of the ellipse to be drawn.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_arc() and cairo_fill() or cairo_stroke()
instead. Note that arcs just like any drawing operation in Cairo are
antialiased unless you call cairo_set_antialias().</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="292"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="452">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="453">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="filled" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="454">%TRUE if the arc should be filled, producing a 'pie slice'.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="455">the x coordinate of the left edge of the bounding rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="456">the y coordinate of the top edge of the bounding rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="457">the width of the bounding rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="458">the height of the bounding rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="angle1" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="459">the start angle of the arc, relative to the 3 o'clock position,
    counter-clockwise, in 1/64ths of a degree.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="angle2" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="461">the end angle of the arc, relative to @angle1, in 1/64ths
    of a degree.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_drawable"
              c:identifier="gdk_draw_drawable"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="634">Copies the @width x @height region of @src at coordinates (@xsrc,
@ysrc) to coordinates (@xdest, @ydest) in @drawable.
@width and/or @height may be given as -1, in which case the entire
@src drawable will be copied.

Most fields in @gc are not used for this operation, but notably the
clip mask or clip region will be honored.

The source and destination drawables must have the same visual and
colormap, or errors will result. (On X11, failure to match
visual/colormap results in a BadMatch error from the X server.)
A common cause of this problem is an attempt to draw a bitmap to
a color drawable. The way to draw a bitmap is to set the bitmap as
the stipple on the #GdkGC, set the fill mode to %GDK_STIPPLED, and
then draw the rectangle.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_pixmap(), cairo_rectangle()
and cairo_fill() to draw pixmap on top of other drawables. Also keep
in mind that the limitations on allowed sources do not apply to Cairo.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="326"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="636">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="637">a #GdkGC sharing the drawable's visual and colormap</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="638">the source #GdkDrawable, which may be the same as @drawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="xsrc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="639">X position in @src of rectangle to draw</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ysrc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="640">Y position in @src of rectangle to draw</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="xdest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="641">X position in @drawable where the rectangle should be drawn</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ydest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="642">Y position in @drawable where the rectangle should be drawn</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="643">width of rectangle to draw, or -1 for entire @src width</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="644">height of rectangle to draw, or -1 for entire @src height</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_glyphs"
              c:identifier="gdk_draw_glyphs"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="973">This is a low-level function; 99% of text rendering should be done
using gdk_draw_layout() instead.

A glyph is a single image in a font. This function draws a sequence of
glyphs.  To obtain a sequence of glyphs you have to understand a
lot about internationalized text handling, which you don't want to
understand; thus, use gdk_draw_layout() instead of this function,
gdk_draw_layout() handles the details.</doc>
      <doc-deprecated xml:space="preserve">Use pango_cairo_show_glyphs() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="369"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="975">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="976">a #GdkGC</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="977">font to be used</doc>
          <type name="Pango.Font" c:type="PangoFont*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="978">X coordinate of baseline origin</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="979">Y coordinate of baseline origin</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="glyphs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="980">the glyph string to draw</doc>
          <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_glyphs_transformed"
              c:identifier="gdk_draw_glyphs_transformed"
              version="2.6"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="1008">Renders a #PangoGlyphString onto a drawable, possibly
transforming the layed-out coordinates through a transformation
matrix. Note that the transformation matrix for @font is not
changed, so to produce correct rendering results, the @font
must have been loaded using a #PangoContext with an identical
transformation matrix to that passed in to this function.

See also gdk_draw_glyphs(), gdk_draw_layout().</doc>
      <doc-deprecated xml:space="preserve">Use pango_cairo_show_glyphs() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="401"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1010">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1011">a #GdkGC</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="matrix"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1012">a #PangoMatrix, or %NULL to use an identity transformation</doc>
          <type name="Pango.Matrix" c:type="const PangoMatrix*"/>
        </parameter>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1013">the font in which to draw the string</doc>
          <type name="Pango.Font" c:type="PangoFont*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1014">the x position of the start of the string (in Pango
          units in user space coordinates)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1016">the y position of the baseline (in Pango units
          in user space coordinates)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="glyphs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1018">the glyph string to draw</doc>
          <type name="Pango.GlyphString" c:type="PangoGlyphString*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_gray_image" c:identifier="gdk_draw_gray_image">
      <source-position filename="gdk/gdkrgb.h" line="109"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_image"
              c:identifier="gdk_draw_image"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="729">Draws a #GdkImage onto a drawable.
The depth of the #GdkImage must match the depth of the #GdkDrawable.</doc>
      <doc-deprecated xml:space="preserve">Do not use #GdkImage anymore, instead use Cairo image
surfaces.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="335"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="731">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="732">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="733">the #GdkImage to draw.</doc>
          <type name="Image" c:type="GdkImage*"/>
        </parameter>
        <parameter name="xsrc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="734">the left edge of the source rectangle within @image.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ysrc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="735">the top of the source rectangle within @image.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="xdest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="736">the x coordinate of the destination within @drawable.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ydest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="737">the y coordinate of the destination within @drawable.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="738">the width of the area to be copied, or -1 to make the area
    extend to the right edge of @image.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="740">the height of the area to be copied, or -1 to make the area
    extend to the bottom edge of @image.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_indexed_image" c:identifier="gdk_draw_indexed_image">
      <source-position filename="gdk/gdkrgb.h" line="118"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="cmap" transfer-ownership="none">
          <type name="RgbCmap" c:type="GdkRgbCmap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_layout" c:identifier="gdk_draw_layout">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1033">Render a #PangoLayout onto a GDK drawable

If the layout's #PangoContext has a transformation matrix set, then
@x and @y specify the position of the top left corner of the
bounding box (in device space) of the transformed layout.

If you're using GTK+, the usual way to obtain a #PangoLayout
is gtk_widget_create_pango_layout().</doc>
      <source-position filename="gdk/gdkdrawable.h" line="380"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1035">the drawable on which to draw string</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1036">base graphics context to use</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1037">the X position of the left of the layout (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1038">the Y position of the top of the layout (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="layout" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1039">a #PangoLayout</doc>
          <type name="Pango.Layout" c:type="PangoLayout*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_layout_line" c:identifier="gdk_draw_layout_line">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1004">Render a #PangoLayoutLine onto an GDK drawable

If the layout's #PangoContext has a transformation matrix set, then
@x and @y specify the position of the left edge of the baseline
(left is in before-tranform user coordinates) in after-transform
device coordinates.</doc>
      <source-position filename="gdk/gdkdrawable.h" line="375"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1006">the drawable on which to draw the line</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1007">base graphics to use</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1008">the x position of start of string (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1009">the y position of baseline (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1010">a #PangoLayoutLine</doc>
          <type name="Pango.LayoutLine" c:type="PangoLayoutLine*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_layout_line_with_colors"
              c:identifier="gdk_draw_layout_line_with_colors">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="847">Render a #PangoLayoutLine onto a #GdkDrawable, overriding the
layout's normal colors with @foreground and/or @background.
@foreground and @background need not be allocated.

If the layout's #PangoContext has a transformation matrix set, then
@x and @y specify the position of the left edge of the baseline
(left is in before-tranform user coordinates) in after-transform
device coordinates.</doc>
      <source-position filename="gdk/gdkdrawable.h" line="386"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="849">the drawable on which to draw the line</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="850">base graphics to use</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="851">the x position of start of string (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="852">the y position of baseline (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="853">a #PangoLayoutLine</doc>
          <type name="Pango.LayoutLine" c:type="PangoLayoutLine*"/>
        </parameter>
        <parameter name="foreground"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="854">foreground override color, or %NULL for none</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
        <parameter name="background"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="855">background override color, or %NULL for none</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_layout_with_colors"
              c:identifier="gdk_draw_layout_with_colors">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="924">Render a #PangoLayout onto a #GdkDrawable, overriding the
layout's normal colors with @foreground and/or @background.
@foreground and @background need not be allocated.

If the layout's #PangoContext has a transformation matrix set, then
@x and @y specify the position of the top left corner of the
bounding box (in device space) of the transformed layout.

If you're using GTK+, the ususal way to obtain a #PangoLayout
is gtk_widget_create_pango_layout().</doc>
      <source-position filename="gdk/gdkdrawable.h" line="393"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="926">the drawable on which to draw string</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="927">base graphics context to use</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="928">the X position of the left of the layout (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="929">the Y position of the top of the layout (in pixels)</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="layout" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="930">a #PangoLayout</doc>
          <type name="Pango.Layout" c:type="PangoLayout*"/>
        </parameter>
        <parameter name="foreground"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="931">foreground override color, or %NULL for none</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
        <parameter name="background"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="932">background override color, or %NULL for none</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_line"
              c:identifier="gdk_draw_line"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="352">Draws a line, using the foreground color and other attributes of
the #GdkGC.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_line_to() and cairo_stroke() instead.
Be aware that the default line width in Cairo is 2 pixels and that your
coordinates need to describe the center of the line. To draw a single
pixel wide pixel-aligned line, you would use:
|[cairo_set_line_width (cr, 1.0);
cairo_set_line_cap (cr, CAIRO_LINE_CAP_SQUARE);
cairo_move_to (cr, 0.5, 0.5);
cairo_line_to (cr, 9.5, 0.5);
cairo_stroke (cr);]|
See also &lt;ulink url="http://cairographics.org/FAQ/#sharp_lines"&gt;the Cairo
FAQ&lt;/ulink&gt; on this topic.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="279"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="354">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="355">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x1_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="356">the x coordinate of the start point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y1_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="357">the y coordinate of the start point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="x2_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="358">the x coordinate of the end point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y2_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="359">the y coordinate of the end point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_lines"
              c:identifier="gdk_draw_lines"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="906">Draws a series of lines connecting the given points.
The way in which joins between lines are draw is determined by the
#GdkCapStyle value in the #GdkGC. This can be set with
gdk_gc_set_line_attributes().</doc>
      <doc-deprecated xml:space="preserve">Use cairo_line_to() and cairo_stroke() instead. See the
documentation of gdk_draw_line() for notes on line drawing with Cairo.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="352"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="908">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="909">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="910">an array of #GdkPoint structures specifying the endpoints of the</doc>
          <type name="Point" c:type="const GdkPoint*"/>
        </parameter>
        <parameter name="n_points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="911">the size of the @points array.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_pixbuf"
              c:identifier="gdk_draw_pixbuf"
              version="2.2"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="773">Renders a rectangular portion of a pixbuf to a drawable.  The destination
drawable must have a colormap. All windows have a colormap, however, pixmaps
only have colormap by default if they were created with a non-%NULL window
argument. Otherwise a colormap must be set on them with
gdk_drawable_set_colormap().

On older X servers, rendering pixbufs with an alpha channel involves round
trips to the X server, and may be somewhat slow.

If GDK is built with the Sun mediaLib library, the gdk_draw_pixbuf
function is accelerated using mediaLib, which provides hardware
acceleration on Intel, AMD, and Sparc chipsets.  If desired, mediaLib
support can be turned off by setting the GDK_DISABLE_MEDIALIB environment
variable.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_cairo_set_source_pixbuf() and cairo_paint() or
cairo_rectangle() and cairo_fill() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="356"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="775">Destination drawable.</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="776">a #GdkGC, used for clipping, or %NULL</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="777">a #GdkPixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="const GdkPixbuf*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="778">Source X coordinate within pixbuf.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="779">Source Y coordinates within pixbuf.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="780">Destination X coordinate within drawable.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="781">Destination Y coordinate within drawable.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="782">Width of region to render, in pixels, or -1 to use pixbuf width.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="783">Height of region to render, in pixels, or -1 to use pixbuf height.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="784">Dithering mode for #GdkRGB.</doc>
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="x_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="785">X offset for dither.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="786">Y offset for dither.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_point"
              c:identifier="gdk_draw_point"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="322">Draws a point, using the foreground color and other attributes of
the #GdkGC.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_rectangle() and cairo_fill() or
cairo_move_to() and cairo_stroke() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="275"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="324">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="325">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="326">the x coordinate of the point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="327">the y coordinate of the point.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_points"
              c:identifier="gdk_draw_points"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="841">Draws a number of points, using the foreground color and other
attributes of the #GdkGC.</doc>
      <doc-deprecated xml:space="preserve">Use @n_points calls to cairo_rectangle() and
cairo_fill() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="344"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="843">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="844">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="845">an array of #GdkPoint structures.</doc>
          <type name="Point" c:type="const GdkPoint*"/>
        </parameter>
        <parameter name="n_points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="846">the number of points to be drawn.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_polygon"
              c:identifier="gdk_draw_polygon"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="503">Draws an outlined or filled polygon.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_line_to() or cairo_append_path() and
cairo_fill() or cairo_stroke() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="301"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="505">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="506">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="filled" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="507">%TRUE if the polygon should be filled. The polygon is closed
    automatically, connecting the last point to the first point if
    necessary.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="510">an array of #GdkPoint structures specifying the points making
    up the polygon.</doc>
          <type name="Point" c:type="const GdkPoint*"/>
        </parameter>
        <parameter name="n_points" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="512">the number of points.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_rectangle"
              c:identifier="gdk_draw_rectangle"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="396">Draws a rectangular outline or filled rectangle, using the foreground color
and other attributes of the #GdkGC.

A rectangle drawn filled is 1 pixel smaller in both dimensions than a
rectangle outlined. Calling
&lt;literal&gt;gdk_draw_rectangle (window, gc, TRUE, 0, 0, 20, 20)&lt;/literal&gt;
results in a filled rectangle 20 pixels wide and 20 pixels high. Calling
&lt;literal&gt;gdk_draw_rectangle (window, gc, FALSE, 0, 0, 20, 20)&lt;/literal&gt;
results in an outlined rectangle with corners at (0, 0), (0, 20), (20, 20),
and (20, 0), which makes it 21 pixels wide and 21 pixels high.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_rectangle() and cairo_fill() or cairo_stroke()
instead. For stroking, the same caveats for converting code apply as for
gdk_draw_line().</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="285"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="398">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="399">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="filled" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="400">%TRUE if the rectangle should be filled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="401">the x coordinate of the left edge of the rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="402">the y coordinate of the top edge of the rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="403">the width of the rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="404">the height of the rectangle.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_rgb_32_image" c:identifier="gdk_draw_rgb_32_image">
      <source-position filename="gdk/gdkrgb.h" line="89"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_rgb_32_image_dithalign"
              c:identifier="gdk_draw_rgb_32_image_dithalign"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkrgb.c"
           line="3452">Like gdk_draw_rgb_32_image(), but allows you to specify the dither
offsets. See gdk_draw_rgb_image_dithalign() for more details.</doc>
      <doc-deprecated xml:space="preserve">Cairo handles colors automatically.</doc-deprecated>
      <source-position filename="gdk/gdkrgb.h" line="98"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3454">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3455">a #GdkGC</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3456">X coordinate on @drawable where image should go</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3457">Y coordinate on @drawable where image should go</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3458">width of area of image to draw</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3459">height of area of image to draw</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3460">dithering mode</doc>
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3461">RGB image data</doc>
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3462">rowstride of RGB image data</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="xdith" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3463">X dither offset</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ydith" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="3464">Y dither offset</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_rgb_image" c:identifier="gdk_draw_rgb_image">
      <source-position filename="gdk/gdkrgb.h" line="69"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="rgb_buf" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_rgb_image_dithalign"
              c:identifier="gdk_draw_rgb_image_dithalign">
      <source-position filename="gdk/gdkrgb.h" line="78"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="dith" transfer-ownership="none">
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="rgb_buf" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="rowstride" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="xdith" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ydith" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_segments"
              c:identifier="gdk_draw_segments"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="872">Draws a number of unconnected lines.</doc>
      <doc-deprecated xml:space="preserve">Use cairo_move_to(), cairo_line_to() and cairo_stroke()
instead. See the documentation of gdk_draw_line() for notes on line drawing
with Cairo.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="348"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="874">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="875">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="segs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="876">an array of #GdkSegment structures specifying the start and
  end points of the lines to be drawn.</doc>
          <type name="Segment" c:type="const GdkSegment*"/>
        </parameter>
        <parameter name="n_segs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="878">the number of line segments to draw, i.e. the size of the
  @segs array.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_string"
              c:identifier="gdk_draw_string"
              deprecated="1"
              deprecated-version="2.4">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="540">Draws a string of characters in the given font or fontset.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_draw_layout() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="306"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="542">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="543">a #GdkFont.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="544">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="545">the x coordinate of the left edge of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="546">the y coordinate of the baseline of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="547">the string of characters to draw.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_text"
              c:identifier="gdk_draw_text"
              deprecated="1"
              deprecated-version="2.4">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="570">Draws a number of characters in the given font or fontset.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_draw_layout() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="312"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="572">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="573">a #GdkFont.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="574">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="575">the x coordinate of the left edge of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="576">the y coordinate of the baseline of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="577">the characters to draw.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="578">the number of characters of @text to draw.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_text_wc"
              c:identifier="gdk_draw_text_wc"
              deprecated="1"
              deprecated-version="2.4">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="601">Draws a number of wide characters using the given font of fontset.
If the font is a 1-byte font, the string is converted into 1-byte
characters (discarding the high bytes) before output.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_draw_layout() instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="319"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="603">a #GdkDrawable (a #GdkWindow or a #GdkPixmap).</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="604">a #GdkFont.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="605">a #GdkGC.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="606">the x coordinate of the left edge of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="607">the y coordinate of the baseline of the text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="608">the wide characters to draw.</doc>
          <type name="WChar" c:type="const GdkWChar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="609">the number of characters to draw.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="draw_trapezoids"
              c:identifier="gdk_draw_trapezoids"
              version="2.6"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkdraw.c"
           line="1049">Draws a set of anti-aliased trapezoids. The trapezoids are
combined using saturation addition, then drawn over the background
as a set. This is low level functionality used internally to implement
rotated underlines and backgrouds when rendering a PangoLayout and is
likely not useful for applications.</doc>
      <doc-deprecated xml:space="preserve">Use Cairo path contruction functions and cairo_fill()
instead.</doc-deprecated>
      <source-position filename="gdk/gdkdrawable.h" line="408"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1051">a #GdkDrawable</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1052">a #GdkGC</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="trapezoids" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1053">an array of #GdkTrapezoid structures</doc>
          <type name="Trapezoid" c:type="const GdkTrapezoid*"/>
        </parameter>
        <parameter name="n_trapezoids" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdraw.c"
               line="1054">the number of trapezoids to draw</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="drop_finish" c:identifier="gdk_drop_finish">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3896">Ends the drag operation after a drop.

This function is called by the drag destination.</doc>
      <source-position filename="gdk/gdkdnd.h" line="134"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3898">a #GtkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="success" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3899">%TRUE if the data was successfully received.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3900">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="drop_reply" c:identifier="gdk_drop_reply">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdnd-x11.c"
           line="3840">Accepts or rejects a drop.

This function is called by the drag destination in response
to a drop initiated by the drag source.</doc>
      <source-position filename="gdk/gdkdnd.h" line="131"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3842">a #GdkDragContext.</doc>
          <type name="DragContext" c:type="GdkDragContext*"/>
        </parameter>
        <parameter name="ok" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3843">%TRUE if the drop is accepted.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdnd-x11.c"
               line="3844">the timestamp for this operation.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_trap_pop" c:identifier="gdk_error_trap_pop">
      <source-position filename="gdk/gdk.h" line="89"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
    </function>
    <function name="error_trap_push" c:identifier="gdk_error_trap_push">
      <source-position filename="gdk/gdk.h" line="88"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="event_get"
              c:identifier="gdk_event_get"
              moved-to="Event.get">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="257">Checks all open displays for a #GdkEvent to process,to be processed
on, fetching events from the windowing system if necessary.
See gdk_display_get_event().</doc>
      <source-position filename="gdk/gdkevents.h" line="519"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="264">the next #GdkEvent to be processed, or %NULL if no events
are pending. The returned #GdkEvent should be freed with gdk_event_free().</doc>
        <type name="Event" c:type="GdkEvent*"/>
      </return-value>
    </function>
    <function name="event_get_graphics_expose"
              c:identifier="gdk_event_get_graphics_expose"
              moved-to="Event.get_graphics_expose">
      <source-position filename="gdk/gdkevents.h" line="523"/>
      <return-value transfer-ownership="full">
        <type name="Event" c:type="GdkEvent*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_handler_set"
              c:identifier="gdk_event_handler_set"
              moved-to="Event.handler_set">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="230">Sets the function to call to handle all events from GDK.

Note that GTK+ uses this to install its own event handler, so it is
usually not useful for GTK+ applications. (Although an application
can call this function then call gtk_main_do_event() to pass
events to GTK+.)</doc>
      <source-position filename="gdk/gdkevents.h" line="544"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="1"
                   destroy="2">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="232">the function to call to handle events from GDK.</doc>
          <type name="EventFunc" c:type="GdkEventFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="233">user data to pass to the function.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="234">the function to call when the handler function is removed, i.e. when
         gdk_event_handler_set() is called with another event handler.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_peek"
              c:identifier="gdk_event_peek"
              moved-to="Event.peek">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="282">If there is an event waiting in the event queue of some open
display, returns a copy of it. See gdk_display_peek_event().</doc>
      <source-position filename="gdk/gdkevents.h" line="521"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="288">a copy of the first #GdkEvent on some event queue, or %NULL if no
events are in any queues. The returned #GdkEvent should be freed with
gdk_event_free().</doc>
        <type name="Event" c:type="GdkEvent*"/>
      </return-value>
    </function>
    <function name="event_request_motions"
              c:identifier="gdk_event_request_motions"
              moved-to="Event.request_motions"
              version="2.12">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="922">Request more motion notifies if @event is a motion notify hint event.
This function should be used instead of gdk_window_get_pointer() to
request further motion notifies, because it also works for extension
events where motion notifies are provided for devices other than the
core pointer. Coordinate extraction, processing and requesting more
motion events from a %GDK_MOTION_NOTIFY event usually works like this:

|[
{
  /&amp;ast; motion_event handler &amp;ast;/
  x = motion_event-&gt;x;
  y = motion_event-&gt;y;
  /&amp;ast; handle (x,y) motion &amp;ast;/
  gdk_event_request_motions (motion_event); /&amp;ast; handles is_hint events &amp;ast;/
}
]|</doc>
      <source-position filename="gdk/gdkevents.h" line="543"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="924">a valid #GdkEvent</doc>
          <type name="EventMotion" c:type="const GdkEventMotion*"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_send_client_message_for_display"
              c:identifier="gdk_event_send_client_message_for_display"
              moved-to="Event.send_client_message_for_display">
      <source-position filename="gdk/gdk.h" line="177"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="event" transfer-ownership="none">
          <type name="Event" c:type="GdkEvent*"/>
        </parameter>
        <parameter name="winid" transfer-ownership="none">
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
      </parameters>
    </function>
    <function name="events_pending" c:identifier="gdk_events_pending">
      <source-position filename="gdk/gdkevents.h" line="518"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="exit" c:identifier="gdk_exit">
      <source-position filename="gdk/gdk.h" line="79"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error_code" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="flush" c:identifier="gdk_flush">
      <source-position filename="gdk/gdk.h" line="143"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="font_from_description"
              c:identifier="gdk_font_from_description"
              moved-to="Font.from_description">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="322">Load a #GdkFont based on a Pango font description. This font will
only be an approximation of the Pango font, and
internationalization will not be handled correctly. This function
should only be used for legacy code that cannot be easily converted
to use Pango. Using Pango directly will produce better results.</doc>
      <source-position filename="gdk/gdkfont.h" line="76"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="332">the newly loaded font, or %NULL if the font
cannot be loaded.</doc>
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="font_desc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="324">a #PangoFontDescription.</doc>
          <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
        </parameter>
      </parameters>
    </function>
    <function name="font_from_description_for_display"
              c:identifier="gdk_font_from_description_for_display"
              moved-to="Font.from_description_for_display">
      <source-position filename="gdk/gdkfont.h" line="68"/>
      <return-value transfer-ownership="full">
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="font_desc" transfer-ownership="none">
          <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
        </parameter>
      </parameters>
    </function>
    <function name="font_load"
              c:identifier="gdk_font_load"
              moved-to="Font.load">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="341">Loads a font.

The font may be newly loaded or looked up the font in a cache.
You should make no assumptions about the initial reference count.</doc>
      <source-position filename="gdk/gdkfont.h" line="74"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="350">a #GdkFont, or %NULL if the font could not be loaded.</doc>
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="font_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="343">a XLFD describing the font to load.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="font_load_for_display"
              c:identifier="gdk_font_load_for_display"
              moved-to="Font.load_for_display">
      <source-position filename="gdk/gdkfont.h" line="64"/>
      <return-value transfer-ownership="full">
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="font_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="fontset_load" c:identifier="gdk_fontset_load">
      <source-position filename="gdk/gdkfont.h" line="75"/>
      <return-value transfer-ownership="full">
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="fontset_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="fontset_load_for_display"
              c:identifier="gdk_fontset_load_for_display">
      <source-position filename="gdk/gdkfont.h" line="66"/>
      <return-value transfer-ownership="full">
        <type name="Font" c:type="GdkFont*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="fontset_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="free_compound_text" c:identifier="gdk_free_compound_text">
      <source-position filename="gdk/gdkproperty.h" line="123"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="ctext" transfer-ownership="none">
          <type name="guint8" c:type="guchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="free_text_list" c:identifier="gdk_free_text_list">
      <source-position filename="gdk/gdkproperty.h" line="122"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_root_window"
              c:identifier="gdk_get_default_root_window"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="6613">Obtains the root window (parent all other windows are inside)
for the default display and screen.</doc>
      <source-position filename="gdk/gdkwindow.h" line="705"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6619">the default root window</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
    </function>
    <function name="get_display" c:identifier="gdk_get_display">
      <source-position filename="gdk/gdk.h" line="96"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="get_display_arg_name"
              c:identifier="gdk_get_display_arg_name"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="276">Gets the display name specified in the command line arguments passed
to gdk_init() or gdk_parse_args(), if any.</doc>
      <source-position filename="gdk/gdk.h" line="97"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="282">the display name, if specified explicitely, otherwise %NULL
  this string is owned by GTK+ and must not be modified or freed.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
    <function name="get_program_class" c:identifier="gdk_get_program_class">
      <source-position filename="gdk/gdk.h" line="83"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
    </function>
    <function name="get_show_events" c:identifier="gdk_get_show_events">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1036">Gets whether event debugging output is enabled.</doc>
      <source-position filename="gdk/gdkevents.h" line="553"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1041">%TRUE if event debugging output is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="get_use_xshm" c:identifier="gdk_get_use_xshm">
      <source-position filename="gdk/gdk.h" line="93"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="init" c:identifier="gdk_init">
      <source-position filename="gdk/gdk.h" line="71"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <array length="0" zero-terminated="0" c:type="gchar***">
            <type name="utf8" c:type="gchar**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="init_check" c:identifier="gdk_init_check">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="341">Initialize the library for use.

Arguments:
  "argc" is the number of arguments.
  "argv" is an array of strings.

Results:
  "argc" and "argv" are modified to reflect any arguments
  which were not handled. (Such arguments should either
  be handled by the application or dismissed). If initialization
  fails, returns FALSE, otherwise TRUE.

Side effects:
  The library is initialized.

--------------------------------------------------------------</doc>
      <source-position filename="gdk/gdk.h" line="73"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <array length="0" zero-terminated="0" c:type="gchar***">
            <type name="utf8" c:type="gchar**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="input_add"
              c:identifier="gdk_input_add"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.14">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1137">Establish a callback when a condition becomes true on
a file descriptor.</doc>
      <doc-deprecated xml:space="preserve">Use g_io_add_watch() on a #GIOChannel</doc-deprecated>
      <source-position filename="gdk/gdk.h" line="105"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1147">a tag that can later be used as an argument to
gdk_input_remove().</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1139">a file descriptor.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="condition" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1140">the condition.</doc>
          <type name="InputCondition" c:type="GdkInputCondition"/>
        </parameter>
        <parameter name="function" transfer-ownership="none" closure="3">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1141">the callback function.</doc>
          <type name="InputFunction" c:type="GdkInputFunction"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1142">callback data passed to @function.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="input_add_full"
              c:identifier="gdk_input_add_full"
              deprecated="1"
              deprecated-version="2.14">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1087">Establish a callback when a condition becomes true on
a file descriptor.</doc>
      <doc-deprecated xml:space="preserve">Use g_io_add_watch_full() on a #GIOChannel</doc-deprecated>
      <source-position filename="gdk/gdk.h" line="100"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1099">a tag that can later be used as an argument to
gdk_input_remove().</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1089">a file descriptor.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="condition" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1090">the condition.</doc>
          <type name="InputCondition" c:type="GdkInputCondition"/>
        </parameter>
        <parameter name="function"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1091">the callback function.</doc>
          <type name="InputFunction" c:type="GdkInputFunction"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1092">callback data passed to @function.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1093">callback function to call with @data when the input
handler is removed.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="input_remove" c:identifier="gdk_input_remove">
      <source-position filename="gdk/gdk.h" line="109"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="input_set_extension_events"
              c:identifier="gdk_input_set_extension_events">
      <source-position filename="gdk/gdkinput.h" line="182"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="mask" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="mode" transfer-ownership="none">
          <type name="ExtensionMode" c:type="GdkExtensionMode"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="iswalnum"
                    c:identifier="gdk_iswalnum"
                    introspectable="0">
      <source-position filename="gdk/gdki18n.h" line="49"/>
      <parameters>
        <parameter name="c">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="iswspace"
                    c:identifier="gdk_iswspace"
                    introspectable="0">
      <source-position filename="gdk/gdki18n.h" line="50"/>
      <parameters>
        <parameter name="c">
        </parameter>
      </parameters>
    </function-macro>
    <function name="keyboard_grab" c:identifier="gdk_keyboard_grab">
      <source-position filename="gdk/gdk.h" line="118"/>
      <return-value transfer-ownership="none">
        <type name="GrabStatus" c:type="GdkGrabStatus"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="owner_events" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyboard_grab_info_libgtk_only"
              c:identifier="gdk_keyboard_grab_info_libgtk_only"
              moved-to="KeyboardGrabInfo.libgtk_only">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="1207">Determines information about the current keyboard grab.
This is not public API and must not be used by applications.</doc>
      <source-position filename="gdk/gdk.h" line="125"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="1217">%TRUE if this application currently has the
 keyboard grabbed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1209">the display for which to get the grab information</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="grab_window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1210">location to store current grab window</doc>
          <type name="Window" c:type="GdkWindow**"/>
        </parameter>
        <parameter name="owner_events" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1211">location to store boolean indicating whether
  the @owner_events flag to gdk_keyboard_grab() was %TRUE.</doc>
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyboard_ungrab" c:identifier="gdk_keyboard_ungrab">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="324">Ungrabs the keyboard on the default display, if it is grabbed by this
application.</doc>
      <source-position filename="gdk/gdk.h" line="131"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="326">a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no
       timestamp is available.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_convert_case"
              c:identifier="gdk_keyval_convert_case">
      <doc xml:space="preserve"
           filename="gdk/gdkkeys.c"
           line="121">Obtains the upper- and lower-case versions of the keyval @symbol.
Examples of keyvals are #GDK_a, #GDK_Enter, #GDK_F1, etc.</doc>
      <source-position filename="gdk/gdkkeys.h" line="120"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="symbol" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkkeys.c"
               line="123">a keyval</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="lower"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkkeys.c"
               line="124">return location for lowercase version of @symbol</doc>
          <type name="guint" c:type="guint*"/>
        </parameter>
        <parameter name="upper"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkkeys.c"
               line="125">return location for uppercase version of @symbol</doc>
          <type name="guint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_from_name" c:identifier="gdk_keyval_from_name">
      <doc xml:space="preserve"
           filename="gdk/gdkkeynames.c"
           line="103">Converts a key name to a key value.

The names are the same as those in the
&lt;filename&gt;&amp;lt;gdk/gdkkeysyms.h&amp;gt;&lt;/filename&gt; header file
but without the leading "GDK_KEY_".</doc>
      <source-position filename="gdk/gdkkeys.h" line="119"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkkeynames.c"
             line="113">the corresponding key value, or %GDK_KEY_VoidSymbol
    if the key name is not a valid key</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="keyval_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkkeynames.c"
               line="105">a key name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_is_lower" c:identifier="gdk_keyval_is_lower">
      <source-position filename="gdk/gdkkeys.h" line="126"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_is_upper" c:identifier="gdk_keyval_is_upper">
      <source-position filename="gdk/gdkkeys.h" line="125"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_name" c:identifier="gdk_keyval_name">
      <doc xml:space="preserve"
           filename="gdk/gdkkeynames.c"
           line="48">Converts a key value into a symbolic name.

The names are the same as those in the
&lt;filename&gt;&amp;lt;gdk/gdkkeysyms.h&amp;gt;&lt;/filename&gt; header file
but without the leading "GDK_KEY_".</doc>
      <source-position filename="gdk/gdkkeys.h" line="118"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkkeynames.c"
             line="58">a string containing the name of the key,
    or %NULL if @keyval is not a valid key. The string should not be
    modified.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkkeynames.c"
               line="50">a key value</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_to_lower" c:identifier="gdk_keyval_to_lower">
      <source-position filename="gdk/gdkkeys.h" line="124"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_to_unicode" c:identifier="gdk_keyval_to_unicode">
      <doc xml:space="preserve"
           filename="gdk/gdkkeyuni.c"
           line="861">Convert from a GDK key symbol to the corresponding ISO10646 (Unicode)
character.</doc>
      <source-position filename="gdk/gdkkeys.h" line="128"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkkeyuni.c"
             line="868">the corresponding unicode character, or 0 if there
              is no corresponding character.</doc>
        <type name="guint32" c:type="guint32"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkkeyuni.c"
               line="863">a GDK key symbol</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyval_to_upper" c:identifier="gdk_keyval_to_upper">
      <source-position filename="gdk/gdkkeys.h" line="123"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="list_visuals" c:identifier="gdk_list_visuals">
      <doc xml:space="preserve"
           filename="gdk/gdkvisual.c"
           line="29">Lists the available visuals for the default screen.
(See gdk_screen_list_visuals())
A visual describes a hardware image data format.
For example, a visual might support 24-bit color, or 8-bit color,
and might expect pixels to be in a certain format.

Call g_list_free() on the return value when you're finished with it.</doc>
      <source-position filename="gdk/gdkvisual.h" line="117"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="gdk/gdkvisual.c"
             line="40">
    a list of visuals; the list must be freed, but not its contents</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="Visual"/>
        </type>
      </return-value>
    </function>
    <function name="mbstowcs" c:identifier="gdk_mbstowcs">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkim-x11.c"
           line="192">Converts a multi-byte string to a wide character string.
(The function name comes from an acronym of 'Multi-Byte String TO Wide
Character String').</doc>
      <source-position filename="gdk/gdk.h" line="166"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkim-x11.c"
             line="202">the number of wide characters written into @dest, or -1 if
  the conversion failed.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkim-x11.c"
               line="194">the space to place the converted wide character string into.</doc>
          <type name="WChar" c:type="GdkWChar*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkim-x11.c"
               line="195">the multi-byte string to convert, which must be nul-terminated.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="dest_max" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkim-x11.c"
               line="196">the maximum number of wide characters to place in @dest.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="notify_startup_complete"
              c:identifier="gdk_notify_startup_complete"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdisplay-x11.c"
           line="1187">Indicates to the GUI environment that the application has finished
loading. If the applications opens windows, this function is
normally called after opening the application's initial set of
windows.

GTK+ will call this function automatically after opening the first
#GtkWindow unless gtk_window_set_auto_startup_notification() is called
to disable that feature.</doc>
      <source-position filename="gdk/gdk.h" line="181"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="notify_startup_complete_with_id"
              c:identifier="gdk_notify_startup_complete_with_id"
              version="2.12">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkdisplay-x11.c"
           line="1219">Indicates to the GUI environment that the application has finished
loading, using a given identifier.

GTK+ will call this function automatically for #GtkWindow with custom
startup-notification identifier unless
gtk_window_set_auto_startup_notification() is called to disable
that feature.</doc>
      <source-position filename="gdk/gdk.h" line="183"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="startup_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkdisplay-x11.c"
               line="1221">a startup-notification identifier, for which notification
             process should be completed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="offscreen_window_get_embedder"
              c:identifier="gdk_offscreen_window_get_embedder"
              version="2.18"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkoffscreenwindow.c"
           line="1221">Gets the window that @window is embedded in.</doc>
      <source-position filename="gdk/gdkwindow.h" line="711"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkoffscreenwindow.c"
             line="1227">the embedding #GdkWindow, or %NULL if @window is not an
    embedded offscreen window</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkoffscreenwindow.c"
               line="1223">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="offscreen_window_get_pixmap"
              c:identifier="gdk_offscreen_window_get_pixmap"
              version="2.18"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkoffscreenwindow.c"
           line="851">Gets the offscreen pixmap that an offscreen window renders into.
If you need to keep this around over window resizes, you need to
add a reference to it.</doc>
      <source-position filename="gdk/gdkwindow.h" line="708"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkoffscreenwindow.c"
             line="859">The offscreen pixmap, or %NULL if not offscreen</doc>
        <type name="Pixmap" c:type="GdkPixmap*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkoffscreenwindow.c"
               line="853">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="offscreen_window_set_embedder"
              c:identifier="gdk_offscreen_window_set_embedder"
              version="2.18">
      <doc xml:space="preserve"
           filename="gdk/gdkoffscreenwindow.c"
           line="1178">Sets @window to be embedded in @embedder.

To fully embed an offscreen window, in addition to calling this
function, it is also necessary to handle the #GdkWindow::pick-embedded-child
signal on the @embedder and the #GdkWindow::to-embedder and
#GdkWindow::from-embedder signals on @window.</doc>
      <source-position filename="gdk/gdkwindow.h" line="709"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkoffscreenwindow.c"
               line="1180">a #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="embedder" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkoffscreenwindow.c"
               line="1181">the #GdkWindow that @window gets embedded in</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_attr_emboss_color_new"
              c:identifier="gdk_pango_attr_emboss_color_new"
              moved-to="PangoAttrEmbossColor.new"
              version="2.12">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1221">Creates a new attribute specifying the color to emboss text with.</doc>
      <source-position filename="gdk/gdkpango.h" line="162"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1227">new #PangoAttribute</doc>
        <type name="Pango.Attribute" c:type="PangoAttribute*"/>
      </return-value>
      <parameters>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1223">a GdkColor representing the color to emboss with</doc>
          <type name="Color" c:type="const GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_attr_embossed_new"
              c:identifier="gdk_pango_attr_embossed_new"
              moved-to="PangoAttrEmbossed.new">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1158">Creates a new attribute flagging a region as embossed or not.</doc>
      <source-position filename="gdk/gdkpango.h" line="161"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1164">new #PangoAttribute</doc>
        <type name="Pango.Attribute" c:type="PangoAttribute*"/>
      </return-value>
      <parameters>
        <parameter name="embossed" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1160">if the region should be embossed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_attr_stipple_new"
              c:identifier="gdk_pango_attr_stipple_new"
              moved-to="PangoAttrStipple.new">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1095">Creates a new attribute containing a stipple bitmap to be used when
rendering the text.</doc>
      <source-position filename="gdk/gdkpango.h" line="160"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1102">new #PangoAttribute</doc>
        <type name="Pango.Attribute" c:type="PangoAttribute*"/>
      </return-value>
      <parameters>
        <parameter name="stipple" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1097">a bitmap to be set as stipple</doc>
          <type name="Bitmap" c:type="GdkBitmap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_context_get"
              c:identifier="gdk_pango_context_get"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1430">Creates a #PangoContext for the default GDK screen.

The context must be freed when you're finished with it.

When using GTK+, normally you should use gtk_widget_get_pango_context()
instead of this function, to get the appropriate context for
the widget you intend to render text onto.

The newly created context will have the default font options (see
#cairo_font_options_t) for the default screen; if these options
change it will not be updated. Using gtk_widget_get_pango_context()
is more convenient if you want to keep a context around and track
changes to the screen's font rendering settings.</doc>
      <source-position filename="gdk/gdkpango.h" line="109"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1447">a new #PangoContext for the default display</doc>
        <type name="Pango.Context" c:type="PangoContext*"/>
      </return-value>
    </function>
    <function name="pango_context_get_for_screen"
              c:identifier="gdk_pango_context_get_for_screen"
              version="2.2"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1455">Creates a #PangoContext for @screen.

The context must be freed when you're finished with it.

When using GTK+, normally you should use gtk_widget_get_pango_context()
instead of this function, to get the appropriate context for
the widget you intend to render text onto.

The newly created context will have the default font options
(see #cairo_font_options_t) for the screen; if these options
change it will not be updated. Using gtk_widget_get_pango_context()
is more convenient if you want to keep a context around and track
changes to the screen's font rendering settings.</doc>
      <source-position filename="gdk/gdkpango.h" line="107"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1473">a new #PangoContext for @screen</doc>
        <type name="Pango.Context" c:type="PangoContext*"/>
      </return-value>
      <parameters>
        <parameter name="screen" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1457">the #GdkScreen for which the context is to be created.</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_context_set_colormap"
              c:identifier="gdk_pango_context_set_colormap">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="767">This function used to set the colormap to be used for drawing with
@context. The colormap is now always derived from the graphics
context used for drawing, so calling this function is no longer
necessary.</doc>
      <source-position filename="gdk/gdkpango.h" line="112"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="769">a #PangoContext</doc>
          <type name="Pango.Context" c:type="PangoContext*"/>
        </parameter>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="770">a #GdkColormap</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_layout_get_clip_region"
              c:identifier="gdk_pango_layout_get_clip_region"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1368">Obtains a clip region which contains the areas where the given ranges
of text would be drawn. @x_origin and @y_origin are the same position
you would pass to gdk_draw_layout_line(). @index_ranges should contain
ranges of bytes in the layout's text.

Note that the regions returned correspond to logical extents of the text
ranges, not ink extents. So the drawn layout may in fact touch areas out of
the clip region.  The clip region is mainly useful for highlightling parts
of text, such as when text is selected.</doc>
      <source-position filename="gdk/gdkpango.h" line="128"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1386">a clip region containing the given ranges</doc>
        <type name="Region" c:type="GdkRegion*"/>
      </return-value>
      <parameters>
        <parameter name="layout" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1370">a #PangoLayout</doc>
          <type name="Pango.Layout" c:type="PangoLayout*"/>
        </parameter>
        <parameter name="x_origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1371">X pixel where you intend to draw the layout with this clip</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1372">Y pixel where you intend to draw the layout with this clip</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="index_ranges" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1373">array of byte indexes into the layout, where even members of array are start indexes and odd elements are end indexes</doc>
          <type name="gint" c:type="const gint*"/>
        </parameter>
        <parameter name="n_ranges" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1374">number of ranges in @index_ranges, i.e. half the size of @index_ranges</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="pango_layout_line_get_clip_region"
              c:identifier="gdk_pango_layout_line_get_clip_region"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpango.c"
           line="1319">Obtains a clip region which contains the areas where the given
ranges of text would be drawn. @x_origin and @y_origin are the same
position you would pass to gdk_draw_layout_line(). @index_ranges
should contain ranges of bytes in the layout's text. The clip
region will include space to the left or right of the line (to the
layout bounding box) if you have indexes above or below the indexes
contained inside the line. This is to draw the selection all the way
to the side of the layout. However, the clip region is in line coordinates,
not layout coordinates.

Note that the regions returned correspond to logical extents of the text
ranges, not ink extents. So the drawn line may in fact touch areas out of
the clip region.  The clip region is mainly useful for highlightling parts
of text, such as when text is selected.</doc>
      <source-position filename="gdk/gdkpango.h" line="123"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpango.c"
             line="1342">a clip region containing the given ranges</doc>
        <type name="Region" c:type="GdkRegion*"/>
      </return-value>
      <parameters>
        <parameter name="line" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1321">a #PangoLayoutLine</doc>
          <type name="Pango.LayoutLine" c:type="PangoLayoutLine*"/>
        </parameter>
        <parameter name="x_origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1322">X pixel where you intend to draw the layout line with this clip</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y_origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1323">baseline pixel where you intend to draw the layout line with this clip</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="index_ranges" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1324">array of byte indexes into the layout, where even members of array are start indexes and odd elements are end indexes</doc>
          <type name="gint" c:type="const gint*"/>
        </parameter>
        <parameter name="n_ranges" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpango.c"
               line="1325">number of ranges in @index_ranges, i.e. half the size of @index_ranges</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_args" c:identifier="gdk_parse_args" version="2.2">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="225">Parse command line arguments, and store for future
use by calls to gdk_display_open().

Any arguments used by GDK are removed from the array and @argc and @argv are
updated accordingly.

You shouldn't call this function explicitely if you are using
gtk_init(), gtk_init_check(), gdk_init(), or gdk_init_check().</doc>
      <source-position filename="gdk/gdk.h" line="69"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="227">the number of command line arguments.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="228">the array of command line arguments.</doc>
          <array length="0" zero-terminated="0" c:type="gchar***">
            <type name="utf8" c:type="gchar**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_get_from_drawable"
              c:identifier="gdk_pixbuf_get_from_drawable"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-drawable.c"
           line="1137">Transfers image data from a #GdkDrawable and converts it to an RGB(A)
representation inside a #GdkPixbuf. In other words, copies
image data from a server-side drawable to a client-side RGB(A) buffer.
This allows you to efficiently read individual pixels on the client side.

If the drawable @src has no colormap (gdk_drawable_get_colormap()
returns %NULL), then a suitable colormap must be specified.
Typically a #GdkWindow or a pixmap created by passing a #GdkWindow
to gdk_pixmap_new() will already have a colormap associated with
it.  If the drawable has a colormap, the @cmap argument will be
ignored.  If the drawable is a bitmap (1 bit per pixel pixmap),
then a colormap is not required; pixels with a value of 1 are
assumed to be white, and pixels with a value of 0 are assumed to be
black. For taking screenshots, gdk_colormap_get_system() returns
the correct colormap to use.

If the specified destination pixbuf @dest is %NULL, then this
function will create an RGB pixbuf with 8 bits per channel and no
alpha, with the same size specified by the @width and @height
arguments.  In this case, the @dest_x and @dest_y arguments must be
specified as 0.  If the specified destination pixbuf is not %NULL
and it contains alpha information, then the filled pixels will be
set to full opacity (alpha = 255).

If the specified drawable is a pixmap, then the requested source
rectangle must be completely contained within the pixmap, otherwise
the function will return %NULL. For pixmaps only (not for windows)
passing -1 for width or height is allowed to mean the full width
or height of the pixmap.

If the specified drawable is a window, and the window is off the
screen, then there is no image data in the obscured/offscreen
regions to be placed in the pixbuf. The contents of portions of the
pixbuf corresponding to the offscreen region are undefined.

If the window you're obtaining data from is partially obscured by
other windows, then the contents of the pixbuf areas corresponding
to the obscured regions are undefined.

If the target drawable is not mapped (typically because it's
iconified/minimized or not on the current workspace), then %NULL
will be returned.

If memory can't be allocated for the return value, %NULL will be returned
instead.

(In short, there are several ways this function can fail, and if it fails
 it returns %NULL; so check the return value.)

This function calls gdk_drawable_get_image() internally and
converts the resulting image to a #GdkPixbuf, so the
documentation for gdk_drawable_get_image() may also be relevant.</doc>
      <source-position filename="gdk/gdkpixbuf.h" line="93"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpixbuf-drawable.c"
             line="1202">The same pixbuf as @dest if it was non-%NULL, or a newly-created
pixbuf with a reference count of 1 if no destination pixbuf was specified, or %NULL on error</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="dest"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1139">Destination pixbuf, or %NULL if a new pixbuf should be created.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1140">Source drawable.</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="cmap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1141">A colormap if @src doesn't have one set.</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1142">Source X coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1143">Source Y coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1144">Destination X coordinate in pixbuf, or 0 if @dest is NULL.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1145">Destination Y coordinate in pixbuf, or 0 if @dest is NULL.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1146">Width in pixels of region to get.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1147">Height in pixels of region to get.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_get_from_image"
              c:identifier="gdk_pixbuf_get_from_image"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-drawable.c"
           line="1315">Same as gdk_pixbuf_get_from_drawable() but gets the pixbuf from
an image.</doc>
      <source-position filename="gdk/gdkpixbuf.h" line="103"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkpixbuf-drawable.c"
             line="1330">@dest, newly-created pixbuf if @dest was %NULL, %NULL on error</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="dest"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1317">Destination pixbuf, or %NULL if a new pixbuf should be created.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1318">Source #GdkImage.</doc>
          <type name="Image" c:type="GdkImage*"/>
        </parameter>
        <parameter name="cmap"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1319">A colormap, or %NULL to use the one for @src</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1320">Source X coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1321">Source Y coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1322">Destination X coordinate in pixbuf, or 0 if @dest is NULL.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1323">Destination Y coordinate in pixbuf, or 0 if @dest is NULL.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1324">Width in pixels of region to get.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-drawable.c"
               line="1325">Height in pixels of region to get.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_render_pixmap_and_mask"
              c:identifier="gdk_pixbuf_render_pixmap_and_mask">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-render.c"
           line="230">Creates a pixmap and a mask bitmap which are returned in the @pixmap_return
and @mask_return arguments, respectively, and renders a pixbuf and its
corresponding thresholded alpha mask to them.  This is merely a convenience
function; applications that need to render pixbufs with dither offsets or to
given drawables should use gdk_draw_pixbuf() and gdk_pixbuf_render_threshold_alpha().

The pixmap that is created is created for the colormap returned
by gdk_rgb_get_colormap(). You normally will want to instead use
the actual colormap for a widget, and use
gdk_pixbuf_render_pixmap_and_mask_for_colormap().

If the pixbuf does not have an alpha channel, then *@mask_return will be set
to %NULL.</doc>
      <source-position filename="gdk/gdkpixbuf.h" line="85"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="232">A pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="pixmap_return" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="233">Location to store a pointer to the created pixmap,
  or %NULL if the pixmap is not needed.</doc>
          <type name="Pixmap" c:type="GdkPixmap**"/>
        </parameter>
        <parameter name="mask_return" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="235">Location to store a pointer to the created mask,
  or %NULL if the mask is not needed.</doc>
          <type name="Bitmap" c:type="GdkBitmap**"/>
        </parameter>
        <parameter name="alpha_threshold" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="237">Threshold value for opacity values.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_render_pixmap_and_mask_for_colormap"
              c:identifier="gdk_pixbuf_render_pixmap_and_mask_for_colormap">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-render.c"
           line="265">Creates a pixmap and a mask bitmap which are returned in the @pixmap_return
and @mask_return arguments, respectively, and renders a pixbuf and its
corresponding tresholded alpha mask to them.  This is merely a convenience
function; applications that need to render pixbufs with dither offsets or to
given drawables should use gdk_draw_pixbuf(), and gdk_pixbuf_render_threshold_alpha().

The pixmap that is created uses the #GdkColormap specified by @colormap.
This colormap must match the colormap of the window where the pixmap
will eventually be used or an error will result.

If the pixbuf does not have an alpha channel, then *@mask_return will be set
to %NULL.</doc>
      <source-position filename="gdk/gdkpixbuf.h" line="79"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="267">A pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="268">A #GdkColormap</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="pixmap_return" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="269">Location to store a pointer to the created pixmap,
  or %NULL if the pixmap is not needed.</doc>
          <type name="Pixmap" c:type="GdkPixmap**"/>
        </parameter>
        <parameter name="mask_return" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="271">Location to store a pointer to the created mask,
  or %NULL if the mask is not needed.</doc>
          <type name="Bitmap" c:type="GdkBitmap**"/>
        </parameter>
        <parameter name="alpha_threshold" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="273">Threshold value for opacity values.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_render_threshold_alpha"
              c:identifier="gdk_pixbuf_render_threshold_alpha">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-render.c"
           line="33">Takes the opacity values in a rectangular portion of a pixbuf and thresholds
them to produce a bi-level alpha mask that can be used as a clipping mask for
a drawable.</doc>
      <source-position filename="gdk/gdkpixbuf.h" line="43"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="35">A pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="bitmap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="36">Bitmap where the bilevel mask will be painted to.</doc>
          <type name="Bitmap" c:type="GdkBitmap*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="37">Source X coordinate.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="38">source Y coordinate.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="39">Destination X coordinate.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="40">Destination Y coordinate.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="41">Width of region to threshold, or -1 to use pixbuf width</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="42">Height of region to threshold, or -1 to use pixbuf height</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="alpha_threshold" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="43">Opacity values below this will be painted as zero; all
other values will be painted as one.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_render_to_drawable"
              c:identifier="gdk_pixbuf_render_to_drawable"
              deprecated="1"
              deprecated-version="2.4">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-render.c"
           line="141">Renders a rectangular portion of a pixbuf to a drawable while using the
specified GC.  This is done using GdkRGB, so the specified drawable must have
the GdkRGB visual and colormap.  Note that this function will ignore the
opacity information for images with an alpha channel; the GC must already
have the clipping mask set if you want transparent regions to show through.

For an explanation of dither offsets, see the GdkRGB documentation.  In
brief, the dither offset is important when re-rendering partial regions of an
image to a rendered version of the full image, or for when the offsets to a
base position change, as in scrolling.  The dither matrix has to be shifted
for consistent visual results.  If you do not have any of these cases, the
dither offsets can be both zero.</doc>
      <doc-deprecated xml:space="preserve">This function is obsolete. Use gdk_draw_pixbuf() instead.</doc-deprecated>
      <source-position filename="gdk/gdkpixbuf.h" line="53"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="143">A pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="144">Destination drawable.</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="gc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="145">GC used for rendering.</doc>
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="146">Source X coordinate within pixbuf.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="147">Source Y coordinate within pixbuf.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="148">Destination X coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="149">Destination Y coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="150">Width of region to render, in pixels, or -1 to use pixbuf width</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="151">Height of region to render, in pixels, or -1 to use pixbuf height</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="152">Dithering mode for GdkRGB.</doc>
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="x_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="153">X offset for dither.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="y_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="154">Y offset for dither.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_render_to_drawable_alpha"
              c:identifier="gdk_pixbuf_render_to_drawable_alpha"
              deprecated="1"
              deprecated-version="2.4">
      <doc xml:space="preserve"
           filename="gdk/gdkpixbuf-render.c"
           line="188">Renders a rectangular portion of a pixbuf to a drawable.  The destination
drawable must have a colormap. All windows have a colormap, however, pixmaps
only have colormap by default if they were created with a non-%NULL window argument.
Otherwise a colormap must be set on them with gdk_drawable_set_colormap.

On older X servers, rendering pixbufs with an alpha channel involves round trips
to the X server, and may be somewhat slow.</doc>
      <doc-deprecated xml:space="preserve">This function is obsolete. Use gdk_draw_pixbuf() instead.</doc-deprecated>
      <source-position filename="gdk/gdkpixbuf.h" line="65"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="190">A pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="drawable" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="191">Destination drawable.</doc>
          <type name="Drawable" c:type="GdkDrawable*"/>
        </parameter>
        <parameter name="src_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="192">Source X coordinate within pixbuf.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="src_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="193">Source Y coordinates within pixbuf.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="194">Destination X coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dest_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="195">Destination Y coordinate within drawable.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="196">Width of region to render, in pixels, or -1 to use pixbuf width.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="197">Height of region to render, in pixels, or -1 to use pixbuf height.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="alpha_mode" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="198">Ignored. Present for backwards compatibility.</doc>
          <type name="GdkPixbuf.PixbufAlphaMode" c:type="GdkPixbufAlphaMode"/>
        </parameter>
        <parameter name="alpha_threshold" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="199">Ignored. Present for backwards compatibility</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="200">Dithering mode for GdkRGB.</doc>
          <type name="RgbDither" c:type="GdkRgbDither"/>
        </parameter>
        <parameter name="x_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="201">X offset for dither.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
        <parameter name="y_dither" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkpixbuf-render.c"
               line="202">Y offset for dither.</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="pointer_grab" c:identifier="gdk_pointer_grab">
      <source-position filename="gdk/gdk.h" line="112"/>
      <return-value transfer-ownership="none">
        <type name="GrabStatus" c:type="GdkGrabStatus"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="owner_events" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="event_mask" transfer-ownership="none">
          <type name="EventMask" c:type="GdkEventMask"/>
        </parameter>
        <parameter name="confine_to" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="cursor" transfer-ownership="none">
          <type name="Cursor" c:type="GdkCursor*"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="pointer_grab_info_libgtk_only"
              c:identifier="gdk_pointer_grab_info_libgtk_only">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="1240">Determines information about the current pointer grab.
This is not public API and must not be used by applications.</doc>
      <source-position filename="gdk/gdk.h" line="122"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="1250">%TRUE if this application currently has the
 pointer grabbed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1242">the #GdkDisplay for which to get the grab information</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="grab_window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1243">location to store current grab window</doc>
          <type name="Window" c:type="GdkWindow**"/>
        </parameter>
        <parameter name="owner_events" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="1244">location to store boolean indicating whether
  the @owner_events flag to gdk_pointer_grab() was %TRUE.</doc>
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pointer_is_grabbed" c:identifier="gdk_pointer_is_grabbed">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="307">Returns %TRUE if the pointer on the default display is currently
grabbed by this application.

Note that this does not take the inmplicit pointer grab on button
presses into account.</doc>
      <source-position filename="gdk/gdk.h" line="132"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="316">%TRUE if the pointer is currently grabbed by this application.*</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="pointer_ungrab" c:identifier="gdk_pointer_ungrab">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="293">Ungrabs the pointer on the default display, if it is grabbed by this
application.</doc>
      <source-position filename="gdk/gdk.h" line="130"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="295">a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no
 timestamp is available.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="pre_parse_libgtk_only"
              c:identifier="gdk_pre_parse_libgtk_only">
      <source-position filename="gdk/gdk.h" line="76"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="property_change" c:identifier="gdk_property_change">
      <source-position filename="gdk/gdkproperty.h" line="60"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="mode" transfer-ownership="none">
          <type name="PropMode" c:type="GdkPropMode"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="nelements" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_delete" c:identifier="gdk_property_delete">
      <source-position filename="gdk/gdkproperty.h" line="67"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_get" c:identifier="gdk_property_get">
      <source-position filename="gdk/gdkproperty.h" line="50"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gulong" c:type="gulong"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gulong" c:type="gulong"/>
        </parameter>
        <parameter name="pdelete" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="actual_property_type" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="actual_format" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="actual_length" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="guint8" c:type="guchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_depths" c:identifier="gdk_query_depths">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkvisual-x11.c"
           line="468">This function returns the available bit depths for the default
screen. It's equivalent to listing the visuals
(gdk_list_visuals()) and then looking at the depth field in each
visual, removing duplicates.

The array returned by this function should not be freed.</doc>
      <source-position filename="gdk/gdkvisual.h" line="112"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="depths"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="470">return location for available depths</doc>
          <array zero-terminated="0" c:type="gint**">
            <type name="gint" c:type="gint*"/>
          </array>
        </parameter>
        <parameter name="count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="471">return location for number of available depths</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_visual_types" c:identifier="gdk_query_visual_types">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkvisual-x11.c"
           line="491">This function returns the available visual types for the default
screen. It's equivalent to listing the visuals
(gdk_list_visuals()) and then looking at the type field in each
visual, removing duplicates.

The array returned by this function should not be freed.</doc>
      <source-position filename="gdk/gdkvisual.h" line="114"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="visual_types" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="493">return location for the available visual types</doc>
          <type name="VisualType" c:type="GdkVisualType**"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkvisual-x11.c"
               line="494">return location for the number of available visual types</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_colormap_ditherable"
              c:identifier="gdk_rgb_colormap_ditherable">
      <source-position filename="gdk/gdkrgb.h" line="142"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cmap" transfer-ownership="none">
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_ditherable" c:identifier="gdk_rgb_ditherable">
      <source-position filename="gdk/gdkrgb.h" line="141"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="rgb_find_color"
              c:identifier="gdk_rgb_find_color"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkrgb.c"
           line="812">@colormap should be the colormap for the graphics context and
drawable you're using to draw. If you're drawing to a #GtkWidget,
call gtk_widget_get_colormap().

@color should have its %red, %green, and %blue fields initialized;
gdk_rgb_find_color() will fill in the %pixel field with the best
matching pixel from a color cube. The color is then ready to be
used for drawing, e.g. you can call gdk_gc_set_foreground() which
expects %pixel to be initialized.

In many cases, you can avoid this whole issue by calling
gdk_gc_set_rgb_fg_color() or gdk_gc_set_rgb_bg_color(), which
do not expect %pixel to be initialized in advance. If you use those
functions, there's no need for gdk_rgb_find_color().</doc>
      <doc-deprecated xml:space="preserve">Cairo handles colors automatically.</doc-deprecated>
      <source-position filename="gdk/gdkrgb.h" line="66"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="colormap" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="814">a #GdkColormap</doc>
          <type name="Colormap" c:type="GdkColormap*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkrgb.c"
               line="815">a #GdkColor</doc>
          <type name="Color" c:type="GdkColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_gc_set_background"
              c:identifier="gdk_rgb_gc_set_background">
      <source-position filename="gdk/gdkrgb.h" line="62"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="rgb" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_gc_set_foreground"
              c:identifier="gdk_rgb_gc_set_foreground">
      <source-position filename="gdk/gdkrgb.h" line="60"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="gc" transfer-ownership="none">
          <type name="GC" c:type="GdkGC*"/>
        </parameter>
        <parameter name="rgb" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_get_colormap"
              c:identifier="gdk_rgb_get_colormap"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkrgb.c"
           line="3667">Get the preferred colormap for rendering image data.  Not a
very useful function; historically, GDK could only render RGB image
data to one colormap and visual, but in the current version it can
render to any colormap and visual. So there's no need to call this
function.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_screen_get_system_colormap (gdk_screen_get_default ()) instead.</doc-deprecated>
      <source-position filename="gdk/gdkrgb.h" line="139"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkrgb.c"
             line="3676">the preferred colormap</doc>
        <type name="Colormap" c:type="GdkColormap*"/>
      </return-value>
    </function>
    <function name="rgb_get_visual"
              c:identifier="gdk_rgb_get_visual"
              deprecated="1"
              deprecated-version="2.22">
      <doc xml:space="preserve"
           filename="gdk/gdkrgb.c"
           line="3749">Gets a "preferred visual" chosen by GdkRGB for rendering image data
on the default screen. In previous versions of GDK, this was the
only visual GdkRGB could use for rendering. In current versions,
it's simply the visual GdkRGB would have chosen as the optimal one
in those previous versions. GdkRGB can now render to drawables with
any visual.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_visual_get_system_visual (gdk_screen_get_default ()) instead.</doc-deprecated>
      <source-position filename="gdk/gdkrgb.h" line="140"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkrgb.c"
             line="3759">The #GdkVisual chosen by GdkRGB.</doc>
        <type name="Visual" c:type="GdkVisual*"/>
      </return-value>
    </function>
    <function name="rgb_init" c:identifier="gdk_rgb_init">
      <source-position filename="gdk/gdkrgb.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="rgb_set_install" c:identifier="gdk_rgb_set_install">
      <source-position filename="gdk/gdkrgb.h" line="135"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="install" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_set_min_colors" c:identifier="gdk_rgb_set_min_colors">
      <source-position filename="gdk/gdkrgb.h" line="136"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="min_colors" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_set_verbose" c:identifier="gdk_rgb_set_verbose">
      <source-position filename="gdk/gdkrgb.h" line="132"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="verbose" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="rgb_xpixel_from_rgb"
              c:identifier="gdk_rgb_xpixel_from_rgb">
      <source-position filename="gdk/gdkrgb.h" line="59"/>
      <return-value transfer-ownership="none">
        <type name="gulong" c:type="gulong"/>
      </return-value>
      <parameters>
        <parameter name="rgb" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_convert" c:identifier="gdk_selection_convert">
      <source-position filename="gdk/gdkselection.h" line="85"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="requestor" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="target" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_owner_get"
              c:identifier="gdk_selection_owner_get"
              introspectable="0">
      <source-position filename="gdk/gdkselection.h" line="74"/>
      <return-value>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="selection" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_owner_get_for_display"
              c:identifier="gdk_selection_owner_get_for_display"
              version="2.2"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="187">Determine the owner of the given selection.

Note that the return value may be owned by a different
process if a foreign window was previously created for that
window, but a new foreign window will never be created by this call.</doc>
      <source-position filename="gdk/gdkselection.h" line="82"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="198">if there is a selection owner for this window, and it is a
   window known to the current process, the #GdkWindow that owns the
   selection, otherwise %NULL.</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="189">a #GdkDisplay.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="190">an atom indentifying a selection.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_owner_set"
              c:identifier="gdk_selection_owner_set">
      <source-position filename="gdk/gdkselection.h" line="70"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="owner" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="send_event" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_owner_set_for_display"
              c:identifier="gdk_selection_owner_set_for_display"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="104">Sets the #GdkWindow @owner as the current owner of the selection @selection.</doc>
      <source-position filename="gdk/gdkselection.h" line="77"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="118">%TRUE if the selection owner was successfully changed to owner,
    otherwise %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="106">the #GdkDisplay.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="owner" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="107">a #GdkWindow or %NULL to indicate that the owner for
        the given should be unset.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="109">an atom identifying a selection.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="110">timestamp to use when setting the selection.
        If this is older than the timestamp given last time the owner was
        set for the given selection, the request will be ignored.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="send_event" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="113">if %TRUE, and the new owner is different from the current
             owner, the current owner will be sent a SelectionClear event.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_property_get"
              c:identifier="gdk_selection_property_get">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="248">Retrieves selection data that was stored by the selection
data in response to a call to gdk_selection_convert(). This function
will not be used by applications, who should use the #GtkClipboard
API instead.</doc>
      <source-position filename="gdk/gdkselection.h" line="89"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="266">the length of the retrieved data.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="requestor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="250">the window on which the data is stored</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="251">location to store a pointer to the retrieved data.
       If the retrieval failed, %NULL we be stored here, otherwise, it
       will be non-%NULL and the returned data should be freed with g_free()
       when you are finished using it. The length of the
       allocated memory is one more than the length
       of the returned data, and the final byte will always
       be zero, to ensure nul-termination of strings.</doc>
          <type name="guint8" c:type="guchar**"/>
        </parameter>
        <parameter name="prop_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="258">location to store the type of the property.</doc>
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="prop_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="259">location to store the format of the property.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_send_notify"
              c:identifier="gdk_selection_send_notify">
      <source-position filename="gdk/gdkselection.h" line="95"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="requestor" transfer-ownership="none">
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="target" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="selection_send_notify_for_display"
              c:identifier="gdk_selection_send_notify_for_display"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="378">Send a response to SelectionRequest event.</doc>
      <source-position filename="gdk/gdkselection.h" line="102"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="380">the #GdkDisplay where @requestor is realized</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="requestor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="381">window to which to deliver response.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
        <parameter name="selection" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="382">selection that was requested.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="383">target that was selected.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="384">property in which the selection owner stored the data,
           or %GDK_NONE to indicate that the request was rejected.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="time_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="386">timestamp.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_double_click_time"
              c:identifier="gdk_set_double_click_time">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1313">Set the double click time for the default display. See
gdk_display_set_double_click_time().
See also gdk_display_set_double_click_distance().
Applications should &lt;emphasis&gt;not&lt;/emphasis&gt; set this, it is a
global user-configured setting.</doc>
      <source-position filename="gdk/gdk.h" line="146"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="msec" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1315">double click time in milliseconds (thousandths of a second)</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_locale" c:identifier="gdk_set_locale">
      <source-position filename="gdk/gdk.h" line="80"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="set_pointer_hooks"
              c:identifier="gdk_set_pointer_hooks"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="715">This function allows for hooking into the operation
of getting the current location of the pointer. This
is only useful for such low-level tools as an
event recorder. Applications should never have any
reason to use this facility.

This function is not multihead safe. For multihead operation,
see gdk_display_set_pointer_hooks().</doc>
      <doc-deprecated xml:space="preserve">This function will go away in GTK 3 for lack of use cases.</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="726"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkdisplay.c"
             line="730">the previous pointer hook table</doc>
        <type name="PointerHooks" c:type="GdkPointerHooks*"/>
      </return-value>
      <parameters>
        <parameter name="new_hooks" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="717">a table of pointers to functions for getting
  quantities related to the current pointer position,
  or %NULL to restore the default table.</doc>
          <type name="PointerHooks" c:type="const GdkPointerHooks*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_program_class" c:identifier="gdk_set_program_class">
      <source-position filename="gdk/gdk.h" line="84"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="program_class" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_show_events" c:identifier="gdk_set_show_events">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1018">Sets whether a trace of received events is output.
Note that GTK+ must be compiled with debugging (that is,
configured using the &lt;option&gt;--enable-debug&lt;/option&gt; option)
to use this option.</doc>
      <source-position filename="gdk/gdkevents.h" line="552"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="show_events" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1020">%TRUE to output event debugging information.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_sm_client_id"
              c:identifier="gdk_set_sm_client_id"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/gdkdisplay.c"
           line="422">Sets the &lt;literal&gt;SM_CLIENT_ID&lt;/literal&gt; property on the application's leader window so that
the window manager can save the application's state using the X11R6 ICCCM
session management protocol.

See the X Session Management Library documentation for more information on
session management and the Inter-Client Communication Conventions Manual
(ICCCM) for information on the &lt;literal&gt;WM_CLIENT_LEADER&lt;/literal&gt; property.
(Both documents are part of the X Window System distribution.)</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_set_sm_client_id() instead</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="522"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sm_client_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkdisplay.c"
               line="424">the client id assigned by the session manager when the
   connection was opened, or %NULL to remove the property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_use_xshm" c:identifier="gdk_set_use_xshm">
      <source-position filename="gdk/gdk.h" line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="use_xshm" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="setting_get" c:identifier="gdk_setting_get">
      <doc xml:space="preserve"
           filename="gdk/gdkevents.c"
           line="1361">Obtains a desktop-wide setting, such as the double-click time,
for the default screen. See gdk_screen_get_setting().</doc>
      <source-position filename="gdk/gdkevents.h" line="560"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkevents.c"
             line="1369">%TRUE if the setting existed and a value was stored
  in @value, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1363">the name of the setting.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkevents.c"
               line="1364">location to store the value of the setting.</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="spawn_command_line_on_screen"
              c:identifier="gdk_spawn_command_line_on_screen"
              version="2.4"
              deprecated="1"
              deprecated-version="2.24"
              throws="1">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkspawn-x11.c"
           line="180">Like g_spawn_command_line_async(), except the child process is
spawned in such an environment that on calling gdk_display_open()
it would be returned a #GdkDisplay with @screen as the default
screen.

This is useful for applications which wish to launch an application
on a specific screen.</doc>
      <doc-deprecated xml:space="preserve">This function is being removed in 3.0. Use
    either g_spawn_command_line_sync(), g_spawn_command_line_async() or
    #GdkAppLaunchContext instead.</doc-deprecated>
      <source-position filename="gdk/gdkspawn.h" line="57"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkspawn-x11.c"
             line="194">%TRUE on success, %FALSE if error is set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="screen" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="182">a #GdkScreen</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </parameter>
        <parameter name="command_line" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="183">a command line</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="spawn_on_screen"
              c:identifier="gdk_spawn_on_screen"
              version="2.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24"
              throws="1">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkspawn-x11.c"
           line="54">Like g_spawn_async(), except the child process is spawned in such
an environment that on calling gdk_display_open() it would be
returned a #GdkDisplay with @screen as the default screen.

This is useful for applications which wish to launch an application
on a specific screen.</doc>
      <doc-deprecated xml:space="preserve">This function is being removed in 3.0. Use
    either g_spawn_sync(), g_spawn_async(), or #GdkAppLaunchContext instead.</doc-deprecated>
      <source-position filename="gdk/gdkspawn.h" line="34"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkspawn-x11.c"
             line="74">%TRUE on success, %FALSE if error is set</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="screen" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="56">a #GdkScreen</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </parameter>
        <parameter name="working_directory" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="57">child's current working directory, or %NULL to
  inherit parent's</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="59">child's argument vector</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="envp" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="60">child's environment, or %NULL to inherit parent's</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="61">flags from #GSpawnFlags</doc>
          <type name="GLib.SpawnFlags" c:type="GSpawnFlags"/>
        </parameter>
        <parameter name="child_setup" transfer-ownership="none" closure="6">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="62">function to run in the child just before exec()</doc>
          <type name="GLib.SpawnChildSetupFunc" c:type="GSpawnChildSetupFunc"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="63">user data for @child_setup</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="child_pid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="64">return location for child process ID, or %NULL</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="spawn_on_screen_with_pipes"
              c:identifier="gdk_spawn_on_screen_with_pipes"
              version="2.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24"
              throws="1">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkspawn-x11.c"
           line="110">Like g_spawn_async_with_pipes(), except the child process is
spawned in such an environment that on calling gdk_display_open()
it would be returned a #GdkDisplay with @screen as the default
screen.

This is useful for applications which wish to launch an application
on a specific screen.</doc>
      <doc-deprecated xml:space="preserve">This function is being removed in 3.0. Use
    either g_spawn_async_with_pipes() or #GdkAppLaunchContext instead.</doc-deprecated>
      <source-position filename="gdk/gdkspawn.h" line="44"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkspawn-x11.c"
             line="137">%TRUE on success, %FALSE if an error was set</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="screen" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="112">a #GdkScreen</doc>
          <type name="Screen" c:type="GdkScreen*"/>
        </parameter>
        <parameter name="working_directory" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="113">child's current working directory, or %NULL to
  inherit parent's</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="115">child's argument vector</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="envp" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="116">child's environment, or %NULL to inherit parent's</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="117">flags from #GSpawnFlags</doc>
          <type name="GLib.SpawnFlags" c:type="GSpawnFlags"/>
        </parameter>
        <parameter name="child_setup" transfer-ownership="none" closure="6">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="118">function to run in the child just before exec()</doc>
          <type name="GLib.SpawnChildSetupFunc" c:type="GSpawnChildSetupFunc"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="119">user data for @child_setup</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="child_pid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="120">return location for child process ID, or %NULL</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="standard_input" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="121">return location for file descriptor to write to
  child's stdin, or %NULL</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="standard_output" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="123">return location for file descriptor to read child's
  stdout, or %NULL</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="standard_error" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkspawn-x11.c"
               line="125">return location for file descriptor to read child's
  stderr, or %NULL</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_extents" c:identifier="gdk_string_extents">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="172">Gets the metrics of a nul-terminated string.</doc>
      <source-position filename="gdk/gdkfont.h" line="122"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="174">a #GdkFont.</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="175">the nul-terminated string to measure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="lbearing" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="176">the left bearing of the string.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="rbearing" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="177">the right bearing of the string.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="178">the width of the string.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ascent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="179">the ascent of the string.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="descent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="180">the descent of the string.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_height" c:identifier="gdk_string_height">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="250">Determines the total height of a given nul-terminated
string. This value is not generally useful, because you
cannot determine how this total height will be drawn in
relation to the baseline. See gdk_string_extents().</doc>
      <source-position filename="gdk/gdkfont.h" line="98"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="260">the height of the string in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="252">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="253">the nul-terminated string to measure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_measure" c:identifier="gdk_string_measure">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="149">Determines the distance from the origin to the rightmost
portion of a nul-terminated string when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces.
See gdk_string_width().</doc>
      <source-position filename="gdk/gdkfont.h" line="91"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="160">the right bearing of the string in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="151">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="152">the nul-terminated string to measure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_to_compound_text"
              c:identifier="gdk_string_to_compound_text">
      <source-position filename="gdk/gdkproperty.h" line="81"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ctext" transfer-ownership="none">
          <type name="guint8" c:type="guchar**"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_to_compound_text_for_display"
              c:identifier="gdk_string_to_compound_text_for_display"
              version="2.2"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="696">Convert a string from the encoding of the current
locale into a form suitable for storing in a window property.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_display_string_to_compound_text()</doc-deprecated>
      <source-position filename="gdk/gdkproperty.h" line="109"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="709">0 upon success, non-zero upon failure.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="698">the #GdkDisplay where the encoding is defined.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="699">a nul-terminated string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="700">location to store the encoding atom
      (to be used as the type for the property).</doc>
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="702">location to store the format of the property</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ctext" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="703">location to store newly allocated data for the property.</doc>
          <type name="guint8" c:type="guchar**"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="704">the length of @text, in bytes</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_width" c:identifier="gdk_string_width">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="88">Determines the width of a nul-terminated string.
(The distance from the origin of the string to the
point where the next string in a sequence of strings
should be drawn)</doc>
      <source-position filename="gdk/gdkfont.h" line="79"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="98">the width of the string in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="90">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="91">the nul-terminated string to measure</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="synthesize_window_state"
              c:identifier="gdk_synthesize_window_state">
      <source-position filename="gdk/gdkprivate.h" line="44"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="unset_flags" transfer-ownership="none">
          <type name="WindowState" c:type="GdkWindowState"/>
        </parameter>
        <parameter name="set_flags" transfer-ownership="none">
          <type name="WindowState" c:type="GdkWindowState"/>
        </parameter>
      </parameters>
    </function>
    <function name="test_render_sync"
              c:identifier="gdk_test_render_sync"
              version="2.14">
      <doc xml:space="preserve"
           filename="gdk/x11/gdktestutils-x11.c"
           line="27">This function retrieves a pixel from @window to force the windowing
system to carry out any pending rendering commands.
This function is intended to be used to syncronize with rendering
pipelines, to benchmark windowing system rendering operations.</doc>
      <source-position filename="gdk/gdktestutils.h" line="33"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="29">a mapped #GdkWindow</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="test_simulate_button"
              c:identifier="gdk_test_simulate_button"
              version="2.14">
      <doc xml:space="preserve"
           filename="gdk/x11/gdktestutils-x11.c"
           line="163">This function is intended to be used in GTK+ test programs.
It will warp the mouse pointer to the given (@x,@y) corrdinates
within @window and simulate a button press or release event.
Because the mouse pointer needs to be warped to the target
location, use of this function outside of test programs that
run in their own virtual windowing system (e.g. Xvfb) is not
recommended.

Also, gtk_test_simulate_button() is a fairly low level function,
for most testing purposes, gtk_test_widget_click() is the right
function to call which will generate a button press event followed
by its accompanying button release event.</doc>
      <source-position filename="gdk/gdktestutils.h" line="40"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdktestutils-x11.c"
             line="185">whether all actions neccessary for a button event simulation
    were carried out successfully.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="165">a #GdkWindow to simulate a button event for.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="166">x coordinate within @window for the button event.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="167">y coordinate within @window for the button event.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="button" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="168">Number of the pointer button for the event, usually 1, 2 or 3.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="modifiers" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="169">Keyboard modifiers the event is setup with.</doc>
          <type name="ModifierType" c:type="GdkModifierType"/>
        </parameter>
        <parameter name="button_pressrelease" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="170">either %GDK_BUTTON_PRESS or %GDK_BUTTON_RELEASE</doc>
          <type name="EventType" c:type="GdkEventType"/>
        </parameter>
      </parameters>
    </function>
    <function name="test_simulate_key"
              c:identifier="gdk_test_simulate_key"
              version="2.14">
      <doc xml:space="preserve"
           filename="gdk/x11/gdktestutils-x11.c"
           line="48">This function is intended to be used in GTK+ test programs.
If (@x,@y) are &gt; (-1,-1), it will warp the mouse pointer to
the given (@x,@y) corrdinates within @window and simulate a
key press or release event.

When the mouse pointer is warped to the target location, use
of this function outside of test programs that run in their
own virtual windowing system (e.g. Xvfb) is not recommended.
If (@x,@y) are passed as (-1,-1), the mouse pointer will not
be warped and @window origin will be used as mouse pointer
location for the event.

Also, gtk_test_simulate_key() is a fairly low level function,
for most testing purposes, gtk_test_widget_send_key() is the
right function to call which will generate a key press event
followed by its accompanying key release event.</doc>
      <source-position filename="gdk/gdktestutils.h" line="34"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdktestutils-x11.c"
             line="74">whether all actions neccessary for a key event simulation
    were carried out successfully.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="50">a #GdkWindow to simulate a key event for.</doc>
          <type name="Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="51">x coordinate within @window for the key event.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="52">y coordinate within @window for the key event.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="keyval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="53">A GDK keyboard value.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="modifiers" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="54">Keyboard modifiers the event is setup with.</doc>
          <type name="ModifierType" c:type="GdkModifierType"/>
        </parameter>
        <parameter name="key_pressrelease" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdktestutils-x11.c"
               line="55">either %GDK_KEY_PRESS or %GDK_KEY_RELEASE</doc>
          <type name="EventType" c:type="GdkEventType"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_extents" c:identifier="gdk_text_extents">
      <source-position filename="gdk/gdkfont.h" line="106"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="lbearing" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="rbearing" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ascent" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="descent" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_extents_wc" c:identifier="gdk_text_extents_wc">
      <source-position filename="gdk/gdkfont.h" line="114"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <type name="WChar" c:type="const GdkWChar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="lbearing" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="rbearing" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ascent" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="descent" transfer-ownership="none">
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_height" c:identifier="gdk_text_height">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="272">Determines the total height of a given string.
This value is not generally useful, because you cannot
determine how this total height will be drawn in
relation to the baseline. See gdk_text_extents().</doc>
      <source-position filename="gdk/gdkfont.h" line="100"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="283">the height of the string in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="274">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="275">the text to measure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="276">the length of the text in bytes.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_measure" c:identifier="gdk_text_measure">
      <doc xml:space="preserve"
           filename="gdk/gdkfont.c"
           line="201">Determines the distance from the origin to the rightmost
portion of a string when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces.
See gdk_text_width().</doc>
      <source-position filename="gdk/gdkfont.h" line="93"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkfont.c"
             line="213">the right bearing of the string in pixels.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="203">a #GdkFont</doc>
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="204">the text to measure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkfont.c"
               line="205">the length of the text in bytes.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_property_to_text_list"
              c:identifier="gdk_text_property_to_text_list">
      <source-position filename="gdk/gdkproperty.h" line="71"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="encoding" transfer-ownership="none">
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <type name="utf8" c:type="gchar***"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_property_to_text_list_for_display"
              c:identifier="gdk_text_property_to_text_list_for_display"
              version="2.2"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="419">Convert a text string from the encoding as it is stored
in a property into an array of strings in the encoding of
the current locale. (The elements of the array represent the
nul-separated elements of the original text string.)</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_display_text_property_to_text_list()</doc-deprecated>
      <source-position filename="gdk/gdkproperty.h" line="103"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="437">the number of strings stored in list, or 0,
if the conversion failed.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="421">The #GdkDisplay where the encoding is defined.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="422">an atom representing the encoding. The most
   common values for this are STRING, or COMPOUND_TEXT.
   This is value used as the type for the property.</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="425">the format of the property.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="426">The text data.</doc>
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="427">The number of items to transform.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="428">location to store a terminated array of strings in
   the encoding of the current locale. This array should be
   freed using gdk_free_text_list().</doc>
          <type name="utf8" c:type="gchar***"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_property_to_utf8_list"
              c:identifier="gdk_text_property_to_utf8_list">
      <doc xml:space="preserve"
           filename="gdk/gdkselection.c"
           line="74">Convert a text property in the giving encoding to
a list of UTF-8 strings.</doc>
      <source-position filename="gdk/gdkproperty.h" line="86"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkselection.c"
             line="86">the number of strings in the resulting
              list.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="76">an atom representing the encoding of the text</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="77">the format of the property</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="78">the text to convert</doc>
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="79">the length of @text, in bytes</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="list"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="80">location to store the list of strings or %NULL. The
           list should be freed with g_strfreev().</doc>
          <type name="utf8" c:type="gchar***"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_property_to_utf8_list_for_display"
              c:identifier="gdk_text_property_to_utf8_list_for_display"
              version="2.2">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="591">Converts a text property in the given encoding to
a list of UTF-8 strings.</doc>
      <source-position filename="gdk/gdkproperty.h" line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="604">the number of strings in the resulting
              list.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="593">a #GdkDisplay</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="594">an atom representing the encoding of the text</doc>
          <type name="Atom" c:type="GdkAtom"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="595">the format of the property</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="596">the text to convert</doc>
          <type name="guint8" c:type="const guchar*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="597">the length of @text, in bytes</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="598">location to store the list of strings or %NULL. The
           list should be freed with g_strfreev().</doc>
          <type name="utf8" c:type="gchar***"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_width" c:identifier="gdk_text_width">
      <source-position filename="gdk/gdkfont.h" line="81"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_width_wc" c:identifier="gdk_text_width_wc">
      <source-position filename="gdk/gdkfont.h" line="84"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="font" transfer-ownership="none">
          <type name="Font" c:type="GdkFont*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <type name="WChar" c:type="const GdkWChar*"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_idle"
              c:identifier="gdk_threads_add_idle"
              version="2.12"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="628">A wrapper for the common usage of gdk_threads_add_idle_full()
assigning the default priority, #G_PRIORITY_DEFAULT_IDLE.

See gdk_threads_add_idle_full().</doc>
      <source-position filename="gdk/gdk.h" line="205"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="638">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="function" transfer-ownership="none" closure="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="630">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="631">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_idle_full"
              c:identifier="gdk_threads_add_idle_full"
              version="2.12">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="553">Adds a function to be called whenever there are no higher priority
events pending.  If the function returns %FALSE it is automatically
removed from the list of event sources and will not be called again.

This variant of g_idle_add_full() calls @function with the GDK lock
held. It can be thought of a MT-safe version for GTK+ widgets for the
following use case, where you have to worry about idle_callback()
running in thread A and accessing @self after it has been finalized
in thread B:

|[
static gboolean
idle_callback (gpointer data)
{
   /&amp;ast; gdk_threads_enter(); would be needed for g_idle_add() &amp;ast;/

   SomeWidget *self = data;
   /&amp;ast; do stuff with self &amp;ast;/

   self-&gt;idle_id = 0;

   /&amp;ast; gdk_threads_leave(); would be needed for g_idle_add() &amp;ast;/
   return FALSE;
}

static void
some_widget_do_stuff_later (SomeWidget *self)
{
   self-&gt;idle_id = gdk_threads_add_idle (idle_callback, self)
   /&amp;ast; using g_idle_add() here would require thread protection in the callback &amp;ast;/
}

static void
some_widget_finalize (GObject *object)
{
   SomeWidget *self = SOME_WIDGET (object);
   if (self-&gt;idle_id)
     g_source_remove (self-&gt;idle_id);
   G_OBJECT_CLASS (parent_class)-&gt;finalize (object);
}
]|</doc>
      <source-position filename="gdk/gdk.h" line="201"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="603">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="555">the priority of the idle source. Typically this will be in the
           range btweeen #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="function"
                   transfer-ownership="none"
                   scope="notified"
                   closure="2"
                   destroy="3">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="557">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="558">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="559">function to call when the idle is removed, or %NULL</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout"
              c:identifier="gdk_threads_add_timeout"
              version="2.12"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="732">A wrapper for the common usage of gdk_threads_add_timeout_full()
assigning the default priority, #G_PRIORITY_DEFAULT.

See gdk_threads_add_timeout_full().</doc>
      <source-position filename="gdk/gdk.h" line="212"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="744">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="734">the time between calls to the function, in milliseconds
            (1/1000ths of a second)</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="function" transfer-ownership="none" closure="2">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="736">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="737">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout_full"
              c:identifier="gdk_threads_add_timeout_full"
              version="2.12">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="651">Sets a function to be called at regular intervals holding the GDK lock,
with the given priority.  The function is called repeatedly until it
returns %FALSE, at which point the timeout is automatically destroyed
and the function will not be called again.  The @notify function is
called when the timeout is destroyed.  The first call to the
function will be at the end of the first @interval.

Note that timeout functions may be delayed, due to the processing of other
event sources. Thus they should not be relied on for precise timing.
After each call to the timeout function, the time of the next
timeout is recalculated based on the current time and the given interval
(it does not try to 'catch up' time lost in delays).

This variant of g_timeout_add_full() can be thought of a MT-safe version
for GTK+ widgets for the following use case:

|[
static gboolean timeout_callback (gpointer data)
{
   SomeWidget *self = data;
   
   /&amp;ast; do stuff with self &amp;ast;/
   
   self-&gt;timeout_id = 0;
   
   return FALSE;
}
 
static void some_widget_do_stuff_later (SomeWidget *self)
{
   self-&gt;timeout_id = g_timeout_add (timeout_callback, self)
}
 
static void some_widget_finalize (GObject *object)
{
   SomeWidget *self = SOME_WIDGET (object);
   
   if (self-&gt;timeout_id)
     g_source_remove (self-&gt;timeout_id);
   
   G_OBJECT_CLASS (parent_class)-&gt;finalize (object);
}
]|</doc>
      <source-position filename="gdk/gdk.h" line="207"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="705">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="653">the priority of the timeout source. Typically this will be in the
           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="655">the time between calls to the function, in milliseconds
            (1/1000ths of a second)</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="function"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="657">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="658">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="659">function to call when the timeout is removed, or %NULL</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout_seconds"
              c:identifier="gdk_threads_add_timeout_seconds"
              version="2.14"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="798">A wrapper for the common usage of gdk_threads_add_timeout_seconds_full()
assigning the default priority, #G_PRIORITY_DEFAULT.

For details, see gdk_threads_add_timeout_full().</doc>
      <source-position filename="gdk/gdk.h" line="220"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdk.c"
             line="809">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="800">the time between calls to the function, in seconds</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="function" transfer-ownership="none" closure="2">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="801">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="802">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout_seconds_full"
              c:identifier="gdk_threads_add_timeout_seconds_full"
              version="2.14">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="758">A variant of gdk_threads_add_timout_full() with second-granularity.
See g_timeout_add_seconds_full() for a discussion of why it is
a good idea to use this function if you don't need finer granularity.

 Return value: the ID (greater than 0) of the event source.</doc>
      <source-position filename="gdk/gdk.h" line="215"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="760">the priority of the timeout source. Typically this will be in the
           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="762">the time between calls to the function, in seconds</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="function"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="763">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="764">data to pass to @function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="765">function to call when the timeout is removed, or %NULL</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_enter" c:identifier="gdk_threads_enter">
      <source-position filename="gdk/gdk.h" line="195"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="threads_init" c:identifier="gdk_threads_init">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="462">Initializes GDK so that it can be used from multiple threads
in conjunction with gdk_threads_enter() and gdk_threads_leave().
g_thread_init() must be called previous to this function.

This call must be made before any use of the main loop from
GTK+; to be safe, call it before gtk_init().</doc>
      <source-position filename="gdk/gdk.h" line="197"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="threads_leave" c:identifier="gdk_threads_leave">
      <source-position filename="gdk/gdk.h" line="196"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="threads_set_lock_functions"
              c:identifier="gdk_threads_set_lock_functions"
              version="2.4"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdk.c"
           line="485">Allows the application to replace the standard method that
GDK uses to protect its data structures. Normally, GDK
creates a single #GMutex that is locked by gdk_threads_enter(),
and released by gdk_threads_leave(); using this function an
application provides, instead, a function @enter_fn that is
called by gdk_threads_enter() and a function @leave_fn that is
called by gdk_threads_leave().

The functions must provide at least same locking functionality
as the default implementation, but can also do extra application
specific processing.

As an example, consider an application that has its own recursive
lock that when held, holds the GTK+ lock as well. When GTK+ unlocks
the GTK+ lock when entering a recursive main loop, the application
must temporarily release its lock as well.

Most threaded GTK+ apps won't need to use this method.

This method must be called before gdk_threads_init(), and cannot
be called multiple times.</doc>
      <source-position filename="gdk/gdk.h" line="198"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="enter_fn" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="487">function called to guard GDK</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="leave_fn" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdk.c"
               line="488">function called to release the guard</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
      </parameters>
    </function>
    <function name="unicode_to_keyval" c:identifier="gdk_unicode_to_keyval">
      <doc xml:space="preserve"
           filename="gdk/gdkkeyuni.c"
           line="1670">Convert from a ISO10646 character to a key symbol.</doc>
      <source-position filename="gdk/gdkkeys.h" line="129"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkkeyuni.c"
             line="1676">the corresponding GDK key symbol, if one exists.
              or, if there is no corresponding symbol,
              wc | 0x01000000</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="wc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkkeyuni.c"
               line="1672">a ISO10646 encoded character</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="utf8_to_compound_text"
              c:identifier="gdk_utf8_to_compound_text">
      <doc xml:space="preserve"
           filename="gdk/gdkselection.c"
           line="112">Convert from UTF-8 to compound text.</doc>
      <source-position filename="gdk/gdkproperty.h" line="76"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkselection.c"
             line="123">%TRUE if the conversion succeeded, otherwise
              false.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="114">a UTF-8 string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="115">location to store resulting encoding</doc>
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="116">location to store format of the result</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ctext" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="117">location to store the data of the result</doc>
          <type name="guint8" c:type="guchar**"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkselection.c"
               line="118">location to store the length of the data
           stored in @ctext</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utf8_to_compound_text_for_display"
              c:identifier="gdk_utf8_to_compound_text_for_display"
              version="2.2"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="842">Converts from UTF-8 to compound text.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_display_utf8_to_compound_text()</doc-deprecated>
      <source-position filename="gdk/gdkproperty.h" line="115"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="854">%TRUE if the conversion succeeded, otherwise
              %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="844">a #GdkDisplay</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="845">a UTF-8 string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="846">location to store resulting encoding</doc>
          <type name="Atom" c:type="GdkAtom*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="847">location to store format of the result</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="ctext" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="848">location to store the data of the result</doc>
          <type name="guint8" c:type="guchar**"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="849">location to store the length of the data
           stored in @ctext</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utf8_to_string_target"
              c:identifier="gdk_utf8_to_string_target">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkselection-x11.c"
           line="822">Converts an UTF-8 string into the best possible representation
as a STRING. The representation of characters not in STRING
is not specified; it may be as pseudo-escape sequences
\x{ABCD}, or it may be in some other form of approximation.</doc>
      <source-position filename="gdk/gdkproperty.h" line="101"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkselection-x11.c"
             line="831">the newly-allocated string, or %NULL if the
              conversion failed. (It should not fail for
              any properly formed UTF-8 string unless system
              limits like memory or file descriptors are exceeded.)</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkselection-x11.c"
               line="824">a UTF-8 string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="visual_ref"
                    c:identifier="gdk_visual_ref"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="141"/>
      <parameters>
        <parameter name="v">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="visual_unref"
                    c:identifier="gdk_visual_unref"
                    introspectable="0">
      <source-position filename="gdk/gdkvisual.h" line="142"/>
      <parameters>
        <parameter name="v">
        </parameter>
      </parameters>
    </function-macro>
    <function name="wcstombs" c:identifier="gdk_wcstombs">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkim-x11.c"
           line="118">Converts a wide character string to a multi-byte string.
(The function name comes from an acronym of 'Wide Character String TO
Multi-Byte String').</doc>
      <source-position filename="gdk/gdk.h" line="165"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdk/x11/gdkim-x11.c"
             line="126">the multi-byte string corresponding to @src, or %NULL if the
conversion failed. The returned string should be freed with g_free() when no
longer needed.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkim-x11.c"
               line="120">a wide character string.</doc>
          <type name="WChar" c:type="const GdkWChar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_at_pointer" c:identifier="gdk_window_at_pointer">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="6590">Obtains the window underneath the mouse pointer, returning the
location of that window in @win_x, @win_y. Returns %NULL if the
window under the mouse pointer is not known to GDK (if the window
belongs to another application and a #GdkWindow hasn't been created
for it with gdk_window_foreign_new())

NOTE: For multihead-aware widgets or applications use
gdk_display_get_window_at_pointer() instead.</doc>
      <source-position filename="gdk/gdkwindow.h" line="345"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6604">window under the mouse pointer</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="win_x"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6592">return location for origin of the window under the pointer</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="win_y"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6593">return location for origin of the window under the pointer</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_constrain_size"
              c:identifier="gdk_window_constrain_size">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="6400">Constrains a desired width and height according to a
set of geometry hints (such as minimum and maximum size).</doc>
      <source-position filename="gdk/gdkwindow.h" line="690"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="geometry" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6402">a #GdkGeometry structure</doc>
          <type name="Geometry" c:type="GdkGeometry*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6403">a mask indicating what portions of @geometry are set</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6404">desired width of window</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6405">desired height of the window</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="new_width"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6406">location to store resulting width</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="new_height"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6407">location to store resulting height</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="window_copy_area"
                    c:identifier="gdk_window_copy_area"
                    introspectable="0">
      <source-position filename="gdk/gdkwindow.h" line="737"/>
      <parameters>
        <parameter name="drawable">
        </parameter>
        <parameter name="gc">
        </parameter>
        <parameter name="x">
        </parameter>
        <parameter name="y">
        </parameter>
        <parameter name="source_drawable">
        </parameter>
        <parameter name="source_x">
        </parameter>
        <parameter name="source_y">
        </parameter>
        <parameter name="width">
        </parameter>
        <parameter name="height">
        </parameter>
      </parameters>
    </function-macro>
    <function name="window_foreign_new"
              c:identifier="gdk_window_foreign_new"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="6627">Wraps a native window for the default display in a #GdkWindow.
This may fail if the window has been destroyed.

For example in the X backend, a native window handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
      <source-position filename="gdk/gdkwindow.h" line="480"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="6637">the newly-created #GdkWindow wrapper for the
   native window or %NULL if the window has been destroyed.</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="anid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6629">a native window handle.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_foreign_new_for_display"
              c:identifier="gdk_window_foreign_new_for_display"
              version="2.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkwindow-x11.c"
           line="857">Wraps a native window in a #GdkWindow.
This may fail if the window has been destroyed. If the window
was already known to GDK, a new reference to the existing
#GdkWindow is returned.

For example in the X backend, a native window handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_window_foreign_new_for_display() or
    equivalent backend-specific API instead</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="483"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="870">a #GdkWindow wrapper for the native window or
  %NULL if the window has been destroyed. The wrapper will be
  newly created, if one doesn't exist already.</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="859">the #GdkDisplay where the window handle comes from.</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="anid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="860">a native window handle.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_get_toplevels"
              c:identifier="gdk_window_get_toplevels"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.16">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="2689">Obtains a list of all toplevel windows known to GDK on the default
screen (see gdk_screen_get_toplevel_windows()).
A toplevel window is a child of the root window (see
gdk_get_default_root_window()).

The returned list should be freed with g_list_free(), but
its elements need not be freed.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_screen_get_toplevel_windows() instead.</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="626"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/gdkwindow.c"
             line="2700">list of toplevel windows, free with g_list_free()</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
    </function>
    <function name="window_lookup"
              c:identifier="gdk_window_lookup"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkwindow-x11.c"
           line="1029">Looks up the #GdkWindow that wraps the given native window handle.

For example in the X backend, a native window handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_window_lookup_for_display() or equivalent
   backend-specific functionality instead</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="481"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="1038">the #GdkWindow wrapper for the native window,
   or %NULL if there is none.</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="anid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="1031">a native window handle.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_lookup_for_display"
              c:identifier="gdk_window_lookup_for_display"
              version="2.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.24">
      <doc xml:space="preserve"
           filename="gdk/x11/gdkwindow-x11.c"
           line="986">Looks up the #GdkWindow that wraps the given native window handle.

For example in the X backend, a native window handle is an Xlib
&lt;type&gt;XID&lt;/type&gt;.</doc>
      <doc-deprecated xml:space="preserve">Use gdk_x11_window_lookup_for_display() instead</doc-deprecated>
      <source-position filename="gdk/gdkwindow.h" line="485"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdk/x11/gdkwindow-x11.c"
             line="996">the #GdkWindow wrapper for the native window,
   or %NULL if there is none.</doc>
        <type name="Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="988">the #GdkDisplay corresponding to the window handle</doc>
          <type name="Display" c:type="GdkDisplay*"/>
        </parameter>
        <parameter name="anid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/x11/gdkwindow-x11.c"
               line="989">a native window handle.</doc>
          <type name="NativeWindow" c:type="GdkNativeWindow"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_process_all_updates"
              c:identifier="gdk_window_process_all_updates">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="5707">Calls gdk_window_process_updates() for all windows (see #GdkWindow)
in the application.</doc>
      <source-position filename="gdk/gdkwindow.h" line="683"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="window_set_debug_updates"
              c:identifier="gdk_window_set_debug_updates">
      <doc xml:space="preserve"
           filename="gdk/gdkwindow.c"
           line="6369">With update debugging enabled, calls to
gdk_window_invalidate_region() clear the invalidated region of the
screen to a noticeable color, and GDK pauses for a short time
before sending exposes to windows during
gdk_window_process_updates().  The net effect is that you can see
the invalid region for each window and watch redraws as they
occur. This allows you to diagnose inefficiencies in your application.

In essence, because the GDK rendering model prevents all flicker,
if you are redrawing the same region 400 times you may never
notice, aside from noticing a speed problem. Enabling update
debugging causes GTK to flicker slowly and noticeably, so you can
see exactly what's being redrawn when, in what order.

The --gtk-debug=updates command line option passed to GTK+ programs
enables this debug option at application startup time. That's
usually more useful than calling gdk_window_set_debug_updates()
yourself, though you might want to use this function to enable
updates sometime after application startup time.</doc>
      <source-position filename="gdk/gdkwindow.h" line="688"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="setting" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk/gdkwindow.c"
               line="6371">%TRUE to turn on update debugging</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
